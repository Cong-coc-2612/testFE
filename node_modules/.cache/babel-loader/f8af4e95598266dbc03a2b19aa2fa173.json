{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\Teams\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skeleton from 'react-loading-skeleton';\nimport UserInfoTeamsItem from 'components/UserInfoTeamsItem';\nimport TextInput from 'components/TextInput';\nimport { queryListTeams, addATeamToCompetition } from './actions';\nimport './styles.css';\n\nclass UserInfoTeams extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestData = () => {\n      const params = {\n        path: '',\n        param: { ...(this.props.type === 'user' ? {\n            userId: this.props.id\n          } : {\n            competitionId: this.props.id\n          }),\n          limit: 999\n        },\n        data: {}\n      };\n      this.props.queryListTeams(params);\n    };\n\n    this.validate = () => {\n      let teamNameToAddError = false;\n      let teamNameToAddErrorContent = '';\n      let teamShortNameToAddError = false;\n      let teamShortNameToAddErrorContent = '';\n\n      if (this.state.teamNameToAdd.trim() === '') {\n        teamNameToAddError = true;\n        teamNameToAddErrorContent = 'Tên đội không được trống';\n      }\n\n      if (this.state.teamShortNameToAdd.trim() === '') {\n        teamNameToAddError = true;\n        teamNameToAddErrorContent = 'Tên ngắn đội không được trống';\n      }\n\n      let listTemp = [];\n\n      if (this.props.listTeam.map((item, index) => {\n        if (item.fullName === this.state.teamNameToAdd) {\n          listTemp.push(item);\n        }\n      })) {\n        if (listTemp.length > 0) {\n          teamNameToAddError = true;\n          teamNameToAddErrorContent = 'Tên đội đã tồn tại trong cuộc thi';\n        }\n      }\n\n      listTemp = [];\n\n      if (this.props.listTeam.map((item, index) => {\n        if (item.shortName === this.state.teamShortNameToAdd) {\n          listTemp.push(item);\n        }\n      })) {\n        if (listTemp.length > 0) {\n          teamShortNameToAddError = true;\n          teamShortNameToAddErrorContent = 'Tên ngắn đội đã tồn tại trong cuộc thi';\n        }\n      }\n\n      return {\n        teamNameToAddError,\n        teamNameToAddErrorContent,\n        teamShortNameToAddError,\n        teamShortNameToAddErrorContent\n      };\n    };\n\n    this.handleAddATeam = () => {\n      const {\n        teamNameToAddError,\n        teamNameToAddErrorContent,\n        teamShortNameToAddError,\n        teamShortNameToAddErrorContent\n      } = this.validate();\n      this.setState({\n        teamNameToAddError,\n        teamNameToAddErrorContent,\n        teamShortNameToAddError,\n        teamShortNameToAddErrorContent\n      });\n\n      if (teamNameToAddError === true || teamShortNameToAddError === true) {\n        return;\n      }\n\n      const params = {\n        path: '',\n        param: {},\n        data: {\n          fullName: this.state.teamNameToAdd,\n          shortName: this.state.teamShortNameToAdd,\n          description: '',\n          creatorId: this.props.currentUserInfo != null && this.props.currentUserInfo.id,\n          competitionId: this.props.id\n        }\n      };\n      this.props.addATeamToCompetition(params);\n      this.setState({\n        teamNameToAdd: '',\n        teamShortNameToAdd: ''\n      });\n    };\n\n    this.onChangeTeamNameToAdd = value => {\n      this.setState({\n        teamNameToAdd: value\n      });\n    };\n\n    this.onChangeTeamShortNameToAdd = value => {\n      this.setState({\n        teamShortNameToAdd: value\n      });\n    };\n\n    this.state = {\n      teamNameToAdd: '',\n      teamNameToAddError: false,\n      teamNameToAddErrorContent: '',\n      teamShortNameToAdd: '',\n      teamShortNameToAddError: false,\n      teamShortNameToAddErrorContent: ''\n    };\n  }\n\n  componentDidMount() {\n    this.requestData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"UserInfoTeams-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, this.props.listTeam != null ? this.props.listTeam.length > 0 ? this.props.listTeam.map((item, index) => /*#__PURE__*/React.createElement(UserInfoTeamsItem, {\n      listTeam: this.props.listTeam,\n      competitionInfo: this.props.competitionInfo,\n      tournamentInfo: this.props.tournamentInfo,\n      info: item,\n      index: index,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 30\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Kh\\xF4ng t\\xECm th\\u1EA5y \\u0111\\u1ED9i n\\xE0o!\") : /*#__PURE__*/React.createElement(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), this.props.listTeam != null && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"UserInfoTeamsAddItem-container2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"UserInfoTeamsAddItem-container-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"UserInfoTeamsAddItem-container-container-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      style: {\n        width: 200\n      },\n      label: 'Nhập tên đội',\n      value: this.state.teamNameToAdd,\n      error: this.state.teamNameToAddError,\n      errorContent: this.state.teamNameToAddErrorContent,\n      onChangeText: this.onChangeTeamNameToAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      style: {\n        width: 200\n      },\n      label: 'Nhập tên ngắn đội',\n      value: this.state.teamShortNameToAdd,\n      error: this.state.teamShortNameToAddError,\n      errorContent: this.state.teamShortNameToAddErrorContent,\n      onChangeText: this.onChangeTeamShortNameToAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"UserInfoTeamsAddItem-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"UserInfoTeamsAddItem-login\",\n      onClick: this.handleAddATeam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"UserInfoTeamsAddItem-login-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"Th\\xEAm \\u0111\\u1ED9i\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listTeam: state.listTeam,\n    currentUserInfo: state.currentUserInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  queryListTeams,\n  addATeamToCompetition\n})(UserInfoTeams);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/Teams/index.tsx"],"names":["React","connect","Skeleton","UserInfoTeamsItem","TextInput","queryListTeams","addATeamToCompetition","UserInfoTeams","Component","constructor","props","requestData","params","path","param","type","userId","id","competitionId","limit","data","validate","teamNameToAddError","teamNameToAddErrorContent","teamShortNameToAddError","teamShortNameToAddErrorContent","state","teamNameToAdd","trim","teamShortNameToAdd","listTemp","listTeam","map","item","index","fullName","push","length","shortName","handleAddATeam","setState","description","creatorId","currentUserInfo","onChangeTeamNameToAdd","value","onChangeTeamShortNameToAdd","componentDidMount","render","competitionInfo","tournamentInfo","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport UserInfoTeamsItem from 'components/UserInfoTeamsItem';\r\nimport TextInput from 'components/TextInput';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { queryListTeams, addATeamToCompetition } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IUserInfoTeamsProps extends React.ClassAttributes<UserInfoTeams> {\r\n  id: number;\r\n  type: 'user' | 'competition';\r\n  listTeam: IParams[] | null;\r\n  tournamentInfo: IParams | null;\r\n  competitionInfo: IParams | null;\r\n  currentUserInfo: IParams | null;\r\n\r\n  queryListTeams(param: IBigRequest): void;\r\n  addATeamToCompetition(param: IBigRequest): void;\r\n}\r\n\r\ninterface IUserInfoTeamsState {\r\n  teamNameToAdd: string;\r\n  teamNameToAddError: boolean;\r\n  teamNameToAddErrorContent: string;\r\n  teamShortNameToAdd: string;\r\n  teamShortNameToAddError: boolean;\r\n  teamShortNameToAddErrorContent: string;\r\n}\r\n\r\nclass UserInfoTeams extends React.Component<IUserInfoTeamsProps, IUserInfoTeamsState> {\r\n  constructor(props: IUserInfoTeamsProps) {\r\n    super(props);\r\n    this.state = {\r\n      teamNameToAdd: '',\r\n      teamNameToAddError: false,\r\n      teamNameToAddErrorContent: '',\r\n      teamShortNameToAdd: '',\r\n      teamShortNameToAddError: false,\r\n      teamShortNameToAddErrorContent: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        ...this.props.type === 'user' ? { userId: this.props.id } : { competitionId: this.props.id },\r\n        limit: 999,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryListTeams(params);\r\n  }\r\n\r\n  private validate = () => {\r\n    let teamNameToAddError = false;\r\n    let teamNameToAddErrorContent = '';\r\n    let teamShortNameToAddError = false;\r\n    let teamShortNameToAddErrorContent = '';\r\n    if (this.state.teamNameToAdd.trim() === '') {\r\n      teamNameToAddError = true;\r\n      teamNameToAddErrorContent = 'Tên đội không được trống';\r\n    }\r\n    if (this.state.teamShortNameToAdd.trim() === '') {\r\n      teamNameToAddError = true;\r\n      teamNameToAddErrorContent = 'Tên ngắn đội không được trống';\r\n    }\r\n    let listTemp = [];\r\n    if (this.props.listTeam!.map((item, index) => { if (item.fullName === this.state.teamNameToAdd) { listTemp.push(item); } })) {\r\n      if (listTemp.length > 0) {\r\n        teamNameToAddError = true;\r\n        teamNameToAddErrorContent = 'Tên đội đã tồn tại trong cuộc thi';\r\n      }\r\n    }\r\n    listTemp = [];\r\n    if (this.props.listTeam!.map((item, index) => { if (item.shortName === this.state.teamShortNameToAdd) { listTemp.push(item); } })) {\r\n      if (listTemp.length > 0) {\r\n        teamShortNameToAddError = true;\r\n        teamShortNameToAddErrorContent = 'Tên ngắn đội đã tồn tại trong cuộc thi';\r\n      }\r\n    }\r\n\r\n    return { teamNameToAddError, teamNameToAddErrorContent, teamShortNameToAddError, teamShortNameToAddErrorContent };\r\n  }\r\n\r\n  private handleAddATeam = () => {\r\n    const { teamNameToAddError, teamNameToAddErrorContent, teamShortNameToAddError, teamShortNameToAddErrorContent } = this.validate();\r\n    this.setState({\r\n      teamNameToAddError,\r\n      teamNameToAddErrorContent,\r\n      teamShortNameToAddError,\r\n      teamShortNameToAddErrorContent\r\n    });\r\n    if (teamNameToAddError === true || teamShortNameToAddError === true) {\r\n      return;\r\n    }\r\n    const params = {\r\n      path: '',\r\n      param: {},\r\n      data: {\r\n        fullName: this.state.teamNameToAdd,\r\n        shortName: this.state.teamShortNameToAdd,\r\n        description: '',\r\n        creatorId: this.props.currentUserInfo != null && this.props.currentUserInfo.id,\r\n        competitionId: this.props.id,\r\n      },\r\n    };\r\n    this.props.addATeamToCompetition(params);\r\n    this.setState({ teamNameToAdd: '', teamShortNameToAdd: '', });\r\n  }\r\n\r\n  private onChangeTeamNameToAdd = (value: string) => {\r\n    this.setState({ teamNameToAdd: value, });\r\n  }\r\n\r\n  private onChangeTeamShortNameToAdd = (value: string) => {\r\n    this.setState({ teamShortNameToAdd: value, });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"UserInfoTeams-container\">\r\n        {this.props.listTeam != null ? (this.props.listTeam.length > 0 ?\r\n          this.props.listTeam.map(\r\n            (item, index) => <UserInfoTeamsItem listTeam={this.props.listTeam as IParams[]} competitionInfo={this.props.competitionInfo} tournamentInfo={this.props.tournamentInfo} info={item} index={index} key={index} />\r\n          ) : <p>Không tìm thấy đội nào!</p>) :\r\n          <Skeleton />\r\n        }\r\n        {this.props.listTeam != null && <div className=\"UserInfoTeamsAddItem-container2\">\r\n          <div className=\"UserInfoTeamsAddItem-container-container\">\r\n            <div className=\"UserInfoTeamsAddItem-container-container-container\">\r\n              <TextInput style={{ width: 200 }} label={'Nhập tên đội'} value={this.state.teamNameToAdd} error={this.state.teamNameToAddError} errorContent={this.state.teamNameToAddErrorContent} onChangeText={this.onChangeTeamNameToAdd} />\r\n              <TextInput style={{ width: 200 }} label={'Nhập tên ngắn đội'} value={this.state.teamShortNameToAdd} error={this.state.teamShortNameToAddError} errorContent={this.state.teamShortNameToAddErrorContent} onChangeText={this.onChangeTeamShortNameToAdd} />\r\n              <div className=\"UserInfoTeamsAddItem-login-container\">\r\n                <div className=\"UserInfoTeamsAddItem-login\" onClick={this.handleAddATeam}>\r\n                  <h4 className=\"UserInfoTeamsAddItem-login-text\">Thêm đội</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listTeam: state.listTeam,\r\n    currentUserInfo: state.currentUserInfo,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryListTeams, addATeamToCompetition }\r\n)(UserInfoTeams);"]},"metadata":{},"sourceType":"module"}