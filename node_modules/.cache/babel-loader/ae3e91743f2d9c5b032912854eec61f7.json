{"ast":null,"code":"import { takeLatest, put } from 'redux-saga/effects';\nimport { DELETE_LIST_SELECTING_TEAM, ADD_LIST_TEAM_SELECTING } from 'redux-saga/actions';\nimport { ADD_LIST_TEAM_SELECTING_SUCCESS, ADD_LIST_TEAM_SELECTING_FAILED } from 'components/BracketTeam/reducers';\n\nfunction* doDeleteListSelectingTeam() {\n  try {\n    yield put({\n      type: ADD_LIST_TEAM_SELECTING,\n      response: {\n        success: ADD_LIST_TEAM_SELECTING_SUCCESS,\n        failed: ADD_LIST_TEAM_SELECTING_FAILED\n      },\n      data: {\n        listTeamId: []\n      }\n    });\n  } catch (error) {}\n}\n\nexport default function* watchDeleteListSelectingTeam() {\n  yield takeLatest(DELETE_LIST_SELECTING_TEAM, doDeleteListSelectingTeam);\n}","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/redux-saga/sagas/DeleteListSelectingTeam/deleteListSelectingTeam.ts"],"names":["takeLatest","put","DELETE_LIST_SELECTING_TEAM","ADD_LIST_TEAM_SELECTING","ADD_LIST_TEAM_SELECTING_SUCCESS","ADD_LIST_TEAM_SELECTING_FAILED","doDeleteListSelectingTeam","type","response","success","failed","data","listTeamId","error","watchDeleteListSelectingTeam"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,0BAAT,EAAqCC,uBAArC,QAAoE,oBAApE;AACA,SAASC,+BAAT,EAA0CC,8BAA1C,QAAgF,iCAAhF;;AAEA,UAAUC,yBAAV,GAAsC;AACpC,MAAI;AACF,UAAML,GAAG,CAAC;AACRM,MAAAA,IAAI,EAAEJ,uBADE;AAERK,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAEL,+BADD;AAERM,QAAAA,MAAM,EAAEL;AAFA,OAFF;AAMRM,MAAAA,IAAI,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd;AANE,KAAD,CAAT;AAQD,GATD,CASE,OAAOC,KAAP,EAAc,CACf;AACF;;AAED,eAAe,UAAUC,4BAAV,GAAyC;AACtD,QAAMd,UAAU,CAACE,0BAAD,EAA6BI,yBAA7B,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\r\nimport { DELETE_LIST_SELECTING_TEAM, ADD_LIST_TEAM_SELECTING } from 'redux-saga/actions';\r\nimport { ADD_LIST_TEAM_SELECTING_SUCCESS, ADD_LIST_TEAM_SELECTING_FAILED } from 'components/BracketTeam/reducers';\r\n\r\nfunction* doDeleteListSelectingTeam() {\r\n  try {\r\n    yield put({\r\n      type: ADD_LIST_TEAM_SELECTING,\r\n      response: {\r\n        success: ADD_LIST_TEAM_SELECTING_SUCCESS,\r\n        failed: ADD_LIST_TEAM_SELECTING_FAILED,\r\n      },\r\n      data: { listTeamId: [] },\r\n    });\r\n  } catch (error) {\r\n  }\r\n}\r\n\r\nexport default function* watchDeleteListSelectingTeam() {\r\n  yield takeLatest(DELETE_LIST_SELECTING_TEAM, doDeleteListSelectingTeam);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}