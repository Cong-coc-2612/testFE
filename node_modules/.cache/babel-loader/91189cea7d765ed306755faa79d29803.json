{"ast":null,"code":"export const QUERY_TOURNAMENT_INFO_SUCCESS = 'QUERY_TOURNAMENT_INFO_SUCCESS';\nexport const QUERY_TOURNAMENT_INFO_FAILED = 'QUERY_TOURNAMENT_INFO_FAILED';\nexport const QUERY_SPORTS_BY_TOURNAMENT_SUCCESS = 'QUERY_SPORTS_BY_TOURNAMENT_SUCCESS';\nexport const QUERY_SPORTS_BY_TOURNAMENT_FAILED = 'QUERY_SPORTS_BY_TOURNAMENT_FAILED';\nexport const QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_SUCCESS = 'QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_SUCCESS';\nexport const QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_FAILED = 'QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_FAILED';\nexport const START_TOURNAMENT_SUCCESS = 'START_TOURNAMENT_SUCCESS';\nexport const START_TOURNAMENT_FAILED = 'START_TOURNAMENT_FAILED';\nexport const FINISH_TOURNAMENT_SUCCESS = 'FINISH_TOURNAMENT_SUCCESS';\nexport const FINISH_TOURNAMENT_FAILED = 'FINISH_TOURNAMENT_FAILED';\nexport const TOURNAMENT_UPDATE_AVATAR_SUCCESS = 'TOURNAMENT_UPDATE_AVATAR_SUCCESS';\nexport const TOURNAMENT_UPDATE_AVATAR_FAILED = 'TOURNAMENT_UPDATE_AVATAR_FAILED';\nexport const TOURNAMENT_UPDATE_BACKGROUND_SUCCESS = 'TOURNAMENT_UPDATE_BACKGROUND_SUCCESS';\nexport const TOURNAMENT_UPDATE_BACKGROUND_FAILED = 'TOURNAMENT_UPDATE_BACKGROUND_FAILED';\nexport function TournamentInfo(state = null, action) {\n  switch (action.type) {\n    case QUERY_TOURNAMENT_INFO_SUCCESS:\n      return action.payload;\n\n    case QUERY_TOURNAMENT_INFO_FAILED:\n      return null;\n\n    default:\n      return state;\n  }\n}\nexport function ListSportsByTournament(state = null, action) {\n  switch (action.type) {\n    case QUERY_SPORTS_BY_TOURNAMENT_SUCCESS:\n      return action.payload;\n\n    case QUERY_SPORTS_BY_TOURNAMENT_FAILED:\n      return null;\n\n    default:\n      return state;\n  }\n}\nexport function ListCompetitionsBySportAndTournament(state = null, action) {\n  switch (action.type) {\n    case QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_SUCCESS:\n      return action.payload;\n\n    case QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_FAILED:\n      return null;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/screens/TournamentInfo/reducers.ts"],"names":["QUERY_TOURNAMENT_INFO_SUCCESS","QUERY_TOURNAMENT_INFO_FAILED","QUERY_SPORTS_BY_TOURNAMENT_SUCCESS","QUERY_SPORTS_BY_TOURNAMENT_FAILED","QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_SUCCESS","QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_FAILED","START_TOURNAMENT_SUCCESS","START_TOURNAMENT_FAILED","FINISH_TOURNAMENT_SUCCESS","FINISH_TOURNAMENT_FAILED","TOURNAMENT_UPDATE_AVATAR_SUCCESS","TOURNAMENT_UPDATE_AVATAR_FAILED","TOURNAMENT_UPDATE_BACKGROUND_SUCCESS","TOURNAMENT_UPDATE_BACKGROUND_FAILED","TournamentInfo","state","action","type","payload","ListSportsByTournament","ListCompetitionsBySportAndTournament"],"mappings":"AAEA,OAAO,MAAMA,6BAA6B,GAAG,+BAAtC;AACP,OAAO,MAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,MAAMC,kCAAkC,GAAG,oCAA3C;AACP,OAAO,MAAMC,iCAAiC,GAAG,mCAA1C;AACP,OAAO,MAAMC,kDAAkD,GAAG,oDAA3D;AACP,OAAO,MAAMC,iDAAiD,GAAG,mDAA1D;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,gCAAgC,GAAG,kCAAzC;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;AACP,OAAO,MAAMC,oCAAoC,GAAG,sCAA7C;AACP,OAAO,MAAMC,mCAAmC,GAAG,qCAA5C;AAEP,OAAO,SAASC,cAAT,CAAwBC,KAAqB,GAAG,IAAhD,EAAsDC,MAAtD,EAAgF;AACrF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,6BAAL;AACE,aAAOgB,MAAM,CAACE,OAAd;;AACF,SAAKjB,4BAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOc,KAAP;AANJ;AAQD;AAED,OAAO,SAASI,sBAAT,CAAgCJ,KAAuB,GAAG,IAA1D,EAAgEC,MAAhE,EAA4F;AACjG,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,kCAAL;AACE,aAAOc,MAAM,CAACE,OAAd;;AACF,SAAKf,iCAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOY,KAAP;AANJ;AAQD;AAED,OAAO,SAASK,oCAAT,CAA8CL,KAAuB,GAAG,IAAxE,EAA8EC,MAA9E,EAA0G;AAC/G,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,kDAAL;AACE,aAAOY,MAAM,CAACE,OAAd;;AACF,SAAKb,iDAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOU,KAAP;AANJ;AAQD","sourcesContent":["import { IAction, IParams } from \"interfaces/common\";\r\n\r\nexport const QUERY_TOURNAMENT_INFO_SUCCESS = 'QUERY_TOURNAMENT_INFO_SUCCESS';\r\nexport const QUERY_TOURNAMENT_INFO_FAILED = 'QUERY_TOURNAMENT_INFO_FAILED';\r\nexport const QUERY_SPORTS_BY_TOURNAMENT_SUCCESS = 'QUERY_SPORTS_BY_TOURNAMENT_SUCCESS';\r\nexport const QUERY_SPORTS_BY_TOURNAMENT_FAILED = 'QUERY_SPORTS_BY_TOURNAMENT_FAILED';\r\nexport const QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_SUCCESS = 'QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_SUCCESS';\r\nexport const QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_FAILED = 'QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_FAILED';\r\nexport const START_TOURNAMENT_SUCCESS = 'START_TOURNAMENT_SUCCESS';\r\nexport const START_TOURNAMENT_FAILED = 'START_TOURNAMENT_FAILED';\r\nexport const FINISH_TOURNAMENT_SUCCESS = 'FINISH_TOURNAMENT_SUCCESS';\r\nexport const FINISH_TOURNAMENT_FAILED = 'FINISH_TOURNAMENT_FAILED';\r\nexport const TOURNAMENT_UPDATE_AVATAR_SUCCESS = 'TOURNAMENT_UPDATE_AVATAR_SUCCESS';\r\nexport const TOURNAMENT_UPDATE_AVATAR_FAILED = 'TOURNAMENT_UPDATE_AVATAR_FAILED';\r\nexport const TOURNAMENT_UPDATE_BACKGROUND_SUCCESS = 'TOURNAMENT_UPDATE_BACKGROUND_SUCCESS';\r\nexport const TOURNAMENT_UPDATE_BACKGROUND_FAILED = 'TOURNAMENT_UPDATE_BACKGROUND_FAILED';\r\n\r\nexport function TournamentInfo(state: IParams | null = null, action: IAction<IParams>) {\r\n  switch (action.type) {\r\n    case QUERY_TOURNAMENT_INFO_SUCCESS:\r\n      return action.payload;\r\n    case QUERY_TOURNAMENT_INFO_FAILED:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function ListSportsByTournament(state: IParams[] | null = null, action: IAction<IParams[]>) {\r\n  switch (action.type) {\r\n    case QUERY_SPORTS_BY_TOURNAMENT_SUCCESS:\r\n      return action.payload;\r\n    case QUERY_SPORTS_BY_TOURNAMENT_FAILED:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function ListCompetitionsBySportAndTournament(state: IParams[] | null = null, action: IAction<IParams[]>) {\r\n  switch (action.type) {\r\n    case QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_SUCCESS:\r\n      return action.payload;\r\n    case QUERY_COMPETITIONS_BY_SPORT_AND_TOURNAMENT_FAILED:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}