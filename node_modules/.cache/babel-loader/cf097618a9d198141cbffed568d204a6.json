{"ast":null,"code":"export const QUERY_LIST_TOURNAMENT_SUCCESS = 'QUERY_LIST_TOURNAMENT_SUCCESS';\nexport const STOP_TOURNAMENT_SUCCESS = 'STOP_TOURNAMENT_SUCCESS';\nexport const STOP_TOURNAMENT_FAILED = 'STOP_TOURNAMENT_FAILED';\nexport const CONTINUE_TOURNAMENT_SUCCESS = 'CONTINUE_TOURNAMENT_SUCCESS';\nexport const CONTINUE_TOURNAMENT_FAILED = 'CONTINUE_TOURNAMENT_FAILED';\nexport const QUERY_LIST_TOURNAMENT_FAILED = 'QUERY_LIST_TOURNAMENT_FAILED';\nexport function ListTournament(state = null, action) {\n  switch (action.type) {\n    case QUERY_LIST_TOURNAMENT_SUCCESS:\n      return action.payload;\n\n    case QUERY_LIST_TOURNAMENT_FAILED:\n      return null;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/AllTournaments/reducers.ts"],"names":["QUERY_LIST_TOURNAMENT_SUCCESS","STOP_TOURNAMENT_SUCCESS","STOP_TOURNAMENT_FAILED","CONTINUE_TOURNAMENT_SUCCESS","CONTINUE_TOURNAMENT_FAILED","QUERY_LIST_TOURNAMENT_FAILED","ListTournament","state","action","type","payload"],"mappings":"AAEA,OAAO,MAAMA,6BAA6B,GAAG,+BAAtC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,4BAA4B,GAAG,8BAArC;AAEP,OAAO,SAASC,cAAT,CAAwBC,KAAqB,GAAG,IAAhD,EAAsDC,MAAtD,EAAgF;AACrF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,6BAAL;AACE,aAAOQ,MAAM,CAACE,OAAd;;AACF,SAAKL,4BAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD","sourcesContent":["import { IAction, IParams } from \"interfaces/common\";\r\n\r\nexport const QUERY_LIST_TOURNAMENT_SUCCESS = 'QUERY_LIST_TOURNAMENT_SUCCESS';\r\nexport const STOP_TOURNAMENT_SUCCESS = 'STOP_TOURNAMENT_SUCCESS';\r\nexport const STOP_TOURNAMENT_FAILED = 'STOP_TOURNAMENT_FAILED';\r\nexport const CONTINUE_TOURNAMENT_SUCCESS = 'CONTINUE_TOURNAMENT_SUCCESS';\r\nexport const CONTINUE_TOURNAMENT_FAILED = 'CONTINUE_TOURNAMENT_FAILED';\r\nexport const QUERY_LIST_TOURNAMENT_FAILED = 'QUERY_LIST_TOURNAMENT_FAILED';\r\n\r\nexport function ListTournament(state: IParams | null = null, action: IAction<IParams>) {\r\n  switch (action.type) {\r\n    case QUERY_LIST_TOURNAMENT_SUCCESS:\r\n      return action.payload;\r\n    case QUERY_LIST_TOURNAMENT_FAILED:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}