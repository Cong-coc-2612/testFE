{"ast":null,"code":"import { takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { COMMON_SHOW_NOTIFICATION } from 'redux-saga/actions';\n\nfunction doShowNotification(request) {\n  try {\n    if (request.data.type === 'error') {\n      toast.error(`${request.data.content === 'Error: Network Error' ? 'Mất kết nối, hãy kiểm tra lại đường truyền' : request.data.content}`, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } else if (request.data.type === 'success') {\n      toast.success(`${request.data.content}`, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } // toast('Wow so easy!', {\n    //   position: \"bottom-right\",\n    //   autoClose: 5000,\n    //   hideProgressBar: false,\n    //   closeOnClick: true,\n    //   pauseOnHover: true,\n    //   draggable: true,\n    //   progress: undefined,\n    // });\n\n  } catch (err) {}\n}\n\nexport default function* watchShowNotification() {\n  yield takeLatest(COMMON_SHOW_NOTIFICATION, doShowNotification);\n}","map":{"version":3,"sources":["E:/testFrontEnd/frontEnd/SportTournamentSupportSystem/src/redux-saga/sagas/Common/ShowNotification.tsx"],"names":["takeLatest","toast","COMMON_SHOW_NOTIFICATION","doShowNotification","request","data","type","error","content","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","err","watchShowNotification"],"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AAEA,SAASC,wBAAT,QAAyC,oBAAzC;;AAEA,SAASC,kBAAT,CAA4BC,OAA5B,EAA8D;AAC5D,MAAI;AACF,QAAIA,OAAO,CAACC,IAAR,CAAaC,IAAb,KAAsB,OAA1B,EAAmC;AACjCL,MAAAA,KAAK,CAACM,KAAN,CAAa,GAAEH,OAAO,CAACC,IAAR,CAAaG,OAAb,KAAyB,sBAAzB,GAAkD,4CAAlD,GAAiGJ,OAAO,CAACC,IAAR,CAAaG,OAAQ,EAArI,EAAwI;AACtIC,QAAAA,QAAQ,EAAE,cAD4H;AAEtIC,QAAAA,SAAS,EAAE,IAF2H;AAGtIC,QAAAA,eAAe,EAAE,KAHqH;AAItIC,QAAAA,YAAY,EAAE,IAJwH;AAKtIC,QAAAA,YAAY,EAAE,IALwH;AAMtIC,QAAAA,SAAS,EAAE,IAN2H;AAOtIC,QAAAA,QAAQ,EAAEC;AAP4H,OAAxI;AASD,KAVD,MAUO,IAAIZ,OAAO,CAACC,IAAR,CAAaC,IAAb,KAAsB,SAA1B,EAAqC;AAC1CL,MAAAA,KAAK,CAACgB,OAAN,CAAe,GAAEb,OAAO,CAACC,IAAR,CAAaG,OAAQ,EAAtC,EAAyC;AACvCC,QAAAA,QAAQ,EAAE,cAD6B;AAEvCC,QAAAA,SAAS,EAAE,IAF4B;AAGvCC,QAAAA,eAAe,EAAE,KAHsB;AAIvCC,QAAAA,YAAY,EAAE,IAJyB;AAKvCC,QAAAA,YAAY,EAAE,IALyB;AAMvCC,QAAAA,SAAS,EAAE,IAN4B;AAOvCC,QAAAA,QAAQ,EAAEC;AAP6B,OAAzC;AASD,KArBC,CAsBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GA/BD,CA+BE,OAAOE,GAAP,EAAY,CAAG;AAClB;;AAED,eAAe,UAAUC,qBAAV,GAAkC;AAC/C,QAAMnB,UAAU,CAACE,wBAAD,EAA2BC,kBAA3B,CAAhB;AACD","sourcesContent":["import { takeLatest } from 'redux-saga/effects';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { IRequest, INotification } from 'interfaces/common';\r\nimport { COMMON_SHOW_NOTIFICATION } from 'redux-saga/actions';\r\n\r\nfunction doShowNotification(request: IRequest<INotification>) {\r\n  try {\r\n    if (request.data.type === 'error') {\r\n      toast.error(`${request.data.content === 'Error: Network Error' ? 'Mất kết nối, hãy kiểm tra lại đường truyền' : request.data.content}`, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else if (request.data.type === 'success') {\r\n      toast.success(`${request.data.content}`, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    // toast('Wow so easy!', {\r\n    //   position: \"bottom-right\",\r\n    //   autoClose: 5000,\r\n    //   hideProgressBar: false,\r\n    //   closeOnClick: true,\r\n    //   pauseOnHover: true,\r\n    //   draggable: true,\r\n    //   progress: undefined,\r\n    // });\r\n  } catch (err) { }\r\n}\r\n\r\nexport default function* watchShowNotification() {\r\n  yield takeLatest(COMMON_SHOW_NOTIFICATION, doShowNotification);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}