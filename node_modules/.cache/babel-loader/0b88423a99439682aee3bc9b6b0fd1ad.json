{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\Paging\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './styles.css';\n\nclass Paging extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeCurrentPageText = value => {\n      let tempValue = 1;\n\n      if (!isNaN(value.target.value)) {\n        tempValue = Number(value.target.value);\n\n        if (tempValue < 1) {\n          tempValue = 1;\n        } else if (tempValue > this.props.totalPage) {\n          tempValue = this.props.totalPage;\n        }\n      } else {\n        tempValue = 1;\n      }\n\n      this.setState({\n        currentPage: tempValue\n      });\n    };\n\n    this.onSelectPage = page => {\n      this.props.onChangeSelectedPage(page);\n    };\n\n    this.keyPressed = event => {\n      if (event.key === \"Enter\") {\n        this.onSelectPage(this.state.currentPage);\n      }\n    };\n\n    this.renderListPage = () => {\n      const listPage = [];\n\n      if (this.props.totalPage >= 7) {\n        let distance = 0;\n\n        if (this.props.currentPage > 3) {\n          if (this.props.currentPage < this.props.totalPage - 2) {\n            distance = 3;\n          } else {\n            if (this.props.totalPage - this.props.currentPage === 2) {\n              distance = (this.props.totalPage - this.props.currentPage) * 2;\n            } else if (this.props.totalPage - this.props.currentPage === 1) {\n              distance = this.props.totalPage - this.props.currentPage + 4;\n            } else {\n              distance = this.props.totalPage - this.props.currentPage + 6;\n            }\n          }\n        } else {\n          distance = this.props.currentPage - 1;\n        }\n\n        for (let i = 0; i < 7; i++) {\n          listPage.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"Paging-each-page\",\n            onClick: () => {\n              if (i !== distance) {\n                this.onSelectPage(this.props.currentPage - distance + i);\n              }\n            },\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: `Paging-each-page-text ${i === distance && 'Paging-each-page-text-selected'}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }\n          }, this.props.currentPage - distance + i)));\n        }\n\n        if (this.props.currentPage > 1) {\n          listPage.unshift( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"Paging-each-page\",\n            onClick: () => this.onSelectPage(this.props.currentPage - 1),\n            key: '<',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: `Paging-each-page-icon1`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }\n          }, '<')));\n\n          if (this.props.totalPage > 7 && this.props.currentPage > 4) {\n            listPage.unshift( /*#__PURE__*/React.createElement(\"div\", {\n              className: \"Paging-each-page\",\n              onClick: () => this.onSelectPage(1),\n              key: '<<',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: `Paging-each-page-icon2`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }\n            }, '<<')));\n          }\n        }\n\n        if (this.props.currentPage < this.props.totalPage) {\n          listPage.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"Paging-each-page\",\n            onClick: () => this.onSelectPage(this.props.currentPage + 1),\n            key: '>',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: `Paging-each-page-icon1`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }\n          }, '>')));\n\n          if (this.props.totalPage > 7 && this.props.currentPage < this.props.totalPage - 3) {\n            listPage.push( /*#__PURE__*/React.createElement(\"div\", {\n              className: \"Paging-each-page\",\n              onClick: () => this.onSelectPage(this.props.totalPage),\n              key: '>>',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: `Paging-each-page-icon2`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }\n            }, '>>')));\n          }\n        }\n      } else {\n        for (let i = 0; i < this.props.totalPage; i++) {\n          listPage.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"Paging-each-page\",\n            onClick: () => {\n              if (i !== this.props.currentPage - 1) {\n                this.onSelectPage(1 + i);\n              }\n            },\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: `Paging-each-page-text ${i === this.props.currentPage - 1 && 'Paging-each-page-text-selected'}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }\n          }, 1 + i)));\n        }\n\n        if (this.props.currentPage > 1) {\n          listPage.unshift( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"Paging-each-page\",\n            onClick: () => this.onSelectPage(this.props.currentPage - 1),\n            key: '<',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: `Paging-each-page-icon1`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }\n          }, '<')));\n        }\n\n        if (this.props.currentPage < this.props.totalPage) {\n          listPage.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"Paging-each-page\",\n            onClick: () => this.onSelectPage(this.props.currentPage + 1),\n            key: '>',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: `Paging-each-page-icon1`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }\n          }, '>')));\n        }\n      }\n\n      return listPage;\n    };\n\n    this.state = {\n      currentPage: this.props.currentPage\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.currentPage !== nextProps.currentPage) {\n      this.setState({\n        currentPage: nextProps.currentPage\n      });\n    }\n\n    return true;\n  }\n\n  render() {\n    if (this.props.totalPage < 2) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Paging-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: 30\n      },\n      type: 'text',\n      onChange: this.onChangeCurrentPageText,\n      onKeyPress: this.keyPressed,\n      value: this.state.currentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \"/\", this.props.totalPage), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Paging-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, this.renderListPage()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, null)(Paging);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/Paging/index.tsx"],"names":["React","connect","Paging","Component","constructor","props","onChangeCurrentPageText","value","tempValue","isNaN","target","Number","totalPage","setState","currentPage","onSelectPage","page","onChangeSelectedPage","keyPressed","event","key","state","renderListPage","listPage","distance","i","push","unshift","shouldComponentUpdate","nextProps","nextState","render","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport './styles.css';\r\n\r\ninterface IPagingProps extends React.ClassAttributes<Paging> {\r\n  currentPage: number;\r\n  totalPage: number;\r\n\r\n  onChangeSelectedPage(page: number): void;\r\n}\r\n\r\ninterface IPagingState {\r\n  currentPage: number;\r\n}\r\n\r\nclass Paging extends React.Component<IPagingProps, IPagingState> {\r\n  constructor(props: IPagingProps) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: this.props.currentPage,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IPagingProps, nextState: IPagingState) {\r\n    if (this.props.currentPage !== nextProps.currentPage) {\r\n      this.setState({ currentPage: nextProps.currentPage });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private onChangeCurrentPageText = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    let tempValue = 1;\r\n    if (!isNaN(value.target.value as unknown as number)) {\r\n      tempValue = Number(value.target.value);\r\n      if (tempValue < 1) {\r\n        tempValue = 1;\r\n      } else if (tempValue > this.props.totalPage) {\r\n        tempValue = this.props.totalPage;\r\n      }\r\n    } else {\r\n      tempValue = 1;\r\n    }\r\n    this.setState({ currentPage: tempValue, });\r\n  }\r\n\r\n  private onSelectPage = (page: number) => {\r\n    this.props.onChangeSelectedPage(page);\r\n  }\r\n\r\n  private keyPressed = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      this.onSelectPage(this.state.currentPage);\r\n    }\r\n  }\r\n\r\n  private renderListPage = () => {\r\n    const listPage = [];\r\n    if (this.props.totalPage >= 7) {\r\n      let distance = 0;\r\n      if (this.props.currentPage > 3) {\r\n        if (this.props.currentPage < this.props.totalPage - 2) {\r\n          distance = 3;\r\n        } else {\r\n          if (this.props.totalPage - this.props.currentPage === 2) {\r\n            distance = (this.props.totalPage - this.props.currentPage) * 2;\r\n          } else if (this.props.totalPage - this.props.currentPage === 1) {\r\n            distance = this.props.totalPage - this.props.currentPage + 4;\r\n          } else {\r\n            distance = this.props.totalPage - this.props.currentPage + 6;\r\n          }\r\n        }\r\n      } else {\r\n        distance = this.props.currentPage - 1;\r\n      }\r\n      for (let i = 0; i < 7; i++) {\r\n        listPage.push(\r\n          <div className=\"Paging-each-page\" onClick={() => { if (i !== distance) { this.onSelectPage(this.props.currentPage - distance + i) } }} key={i}>\r\n            <p className={`Paging-each-page-text ${i === distance && 'Paging-each-page-text-selected'}`}>{this.props.currentPage - distance + i}</p>\r\n          </div>\r\n        );\r\n      }\r\n      if (this.props.currentPage > 1) {\r\n        listPage.unshift(\r\n          <div className=\"Paging-each-page\" onClick={() => this.onSelectPage(this.props.currentPage - 1)} key={'<'}>\r\n            <p className={`Paging-each-page-icon1`}>{'<'}</p>\r\n          </div>\r\n        );\r\n        if (this.props.totalPage > 7 && this.props.currentPage > 4) {\r\n          listPage.unshift(\r\n            <div className=\"Paging-each-page\" onClick={() => this.onSelectPage(1)} key={'<<'}>\r\n              <p className={`Paging-each-page-icon2`}>{'<<'}</p>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      if (this.props.currentPage < this.props.totalPage) {\r\n        listPage.push(\r\n          <div className=\"Paging-each-page\" onClick={() => this.onSelectPage(this.props.currentPage + 1)} key={'>'}>\r\n            <p className={`Paging-each-page-icon1`}>{'>'}</p>\r\n          </div>\r\n        );\r\n        if (this.props.totalPage > 7 && this.props.currentPage < this.props.totalPage - 3) {\r\n          listPage.push(\r\n            <div className=\"Paging-each-page\" onClick={() => this.onSelectPage(this.props.totalPage)} key={'>>'}>\r\n              <p className={`Paging-each-page-icon2`}>{'>>'}</p>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.props.totalPage; i++) {\r\n        listPage.push(\r\n          <div className=\"Paging-each-page\" onClick={() => { if (i !== this.props.currentPage - 1) { this.onSelectPage(1 + i) } }} key={i}>\r\n            <p className={`Paging-each-page-text ${i === this.props.currentPage - 1 && 'Paging-each-page-text-selected'}`}>{1 + i}</p>\r\n          </div>\r\n        );\r\n      }\r\n      if (this.props.currentPage > 1) {\r\n        listPage.unshift(\r\n          <div className=\"Paging-each-page\" onClick={() => this.onSelectPage(this.props.currentPage - 1)} key={'<'}>\r\n            <p className={`Paging-each-page-icon1`}>{'<'}</p>\r\n          </div>\r\n        );\r\n      }\r\n      if (this.props.currentPage < this.props.totalPage) {\r\n        listPage.push(\r\n          <div className=\"Paging-each-page\" onClick={() => this.onSelectPage(this.props.currentPage + 1)} key={'>'}>\r\n            <p className={`Paging-each-page-icon1`}>{'>'}</p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return listPage;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.totalPage < 2) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"Paging-container\">\r\n        <input style={{ width: 30 }} type={'text'} onChange={this.onChangeCurrentPageText} onKeyPress={this.keyPressed} value={this.state.currentPage} />\r\n        <p>/{this.props.totalPage}</p>\r\n        <div className=\"Paging-bar\">\r\n          {this.renderListPage()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Paging);"]},"metadata":{},"sourceType":"module"}