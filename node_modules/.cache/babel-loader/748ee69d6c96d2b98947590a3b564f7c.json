{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\screens\\\\CompetitionInfo\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skeleton from 'react-loading-skeleton';\nimport Select from 'react-select';\nimport { editGroupStageSetting, editFinalStageSetting, editCompetition, queryAllFormats, queryCompetition, queryAllSports, querySportInfo, queryFinalStageSetting, queryGroupStageSetting, updateSchedule } from './actions';\nimport './styles.css';\nimport CustomModal from 'components/CustomModal';\nimport TextInput from 'components/TextInput';\nimport CustomTab from 'components/CustomTab';\nimport Player from 'components/Player';\nimport { IoMdAddCircleOutline } from 'react-icons/io';\nimport { queryAllCompetitionsByTournamentId } from 'components/CompetitionsSetting/actions';\nimport BracketBoard from 'components/BracketBoard';\nimport Teams from 'components/Teams';\nimport BracketSchedule from 'components/BracketSchedule';\nimport BracketRank from 'components/BracketRank';\nimport { queryTournamentInfo } from 'screens/TournamentInfo/actions';\nimport config from 'config';\nimport { formatTournamentStatus } from 'utils/common';\nimport { cookies } from 'utils/cookies';\nimport { COOKIES_TYPE } from 'global';\nconst customStyles = {\n  content: {\n    top: '5%',\n    left: '15%',\n    right: '15%',\n    bottom: '5%',\n    backgroundColor: '#2b303d',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  overlay: {\n    zIndex: 100001\n  }\n};\nconst genderOptions = [{\n  value: true,\n  label: 'Nam'\n}, {\n  value: false,\n  label: 'Nữ'\n}];\nlet sportOptions = [];\nlet competitionFormatOptions = [];\n\nclass CompetitionInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tabList = [];\n    this.componentList = [];\n\n    this.requestData = () => {\n      const params = {\n        path: '',\n        param: {\n          id: this.props.routerInfo.match.params.competitionId\n        },\n        data: {}\n      };\n      this.props.queryCompetition(params);\n      this.props.queryAllSports();\n      this.props.queryAllFormats();\n    };\n\n    this.handleCloseModal = () => {\n      const confirm = window.confirm('Bạn có chắc chắn muốn hủy form đăng ký?');\n\n      if (confirm === true) {\n        this.setState({\n          showJoinModal: false\n        });\n      }\n    };\n\n    this.validateForm = () => {\n      let teamNameInFormError = false;\n      let teamNameInFormErrorContent = '';\n      let teamShortNameInFormErrorContent = '';\n      let teamShortNameInFormError = false;\n\n      if (this.state.teamNameInForm.trim() === '') {\n        teamNameInFormError = true;\n        teamNameInFormErrorContent = 'Tên đội không được trống';\n      }\n\n      if (this.state.teamShortNameInForm.trim() === '') {\n        teamShortNameInFormError = true;\n        teamShortNameInFormErrorContent = 'Tên ngắn đội không được trống';\n      }\n\n      return {\n        teamNameInFormError,\n        teamNameInFormErrorContent,\n        teamShortNameInFormError,\n        teamShortNameInFormErrorContent\n      };\n    };\n\n    this.validateAddPlayer = () => {\n      let playerEmailInFormErrorContent = '';\n      let playerEmailInFormError = false;\n      let playerNameInFormErrorContent = '';\n      let playerNameInFormError = false;\n\n      if (this.state.playerNameInForm.trim() === '') {\n        playerNameInFormError = true;\n        playerNameInFormErrorContent = 'Tên người chơi không được trống';\n      }\n\n      if (!config.regex.email.test(this.state.playerEmailInForm)) {\n        playerEmailInFormError = true;\n        playerEmailInFormErrorContent = 'Email không hợp lệ';\n      }\n\n      return {\n        playerEmailInFormError,\n        playerEmailInFormErrorContent,\n        playerNameInFormErrorContent,\n        playerNameInFormError\n      };\n    };\n\n    this.handleConfirmModal = () => {\n      const {\n        teamNameInFormError,\n        teamNameInFormErrorContent,\n        teamShortNameInFormError,\n        teamShortNameInFormErrorContent\n      } = this.validateForm();\n      this.setState({\n        teamNameInFormError,\n        teamNameInFormErrorContent,\n        teamShortNameInFormError,\n        teamShortNameInFormErrorContent\n      });\n\n      if (teamNameInFormError === true || teamShortNameInFormError === true) {\n        return;\n      } // this.props.registTeam();\n\n    };\n\n    this.addPlayer = () => {\n      const {\n        playerEmailInFormError,\n        playerEmailInFormErrorContent,\n        playerNameInFormErrorContent,\n        playerNameInFormError\n      } = this.validateAddPlayer();\n      this.setState({\n        playerEmailInFormError,\n        playerEmailInFormErrorContent,\n        playerNameInFormErrorContent,\n        playerNameInFormError\n      });\n\n      if (playerNameInFormError === true || playerEmailInFormError === true) {\n        return;\n      }\n\n      const listTemp = this.state.listPlayerInForm;\n      listTemp.push({\n        name: this.state.playerNameInForm,\n        age: this.state.playerAgeInForm,\n        email: this.state.playerEmailInForm,\n        gender: this.state.playerGenderInForm.label\n      });\n      this.setState({\n        listPlayerInForm: listTemp,\n        playerNameInForm: '',\n        playerAgeInForm: 0,\n        playerEmailInForm: '',\n        playerGenderInForm: {\n          value: true,\n          label: 'Nam'\n        }\n      });\n    };\n\n    this.onChangeTeamNameInForm = value => {\n      this.setState({\n        teamNameInForm: value\n      });\n    };\n\n    this.onChangeTeamShortNameInForm = value => {\n      this.setState({\n        teamShortNameInForm: value\n      });\n    };\n\n    this.onDeletePlayer = indexx => {\n      this.setState({\n        listPlayerInForm: this.state.listPlayerInForm.filter((item, index) => index !== indexx)\n      });\n    };\n\n    this.onChangePlayerNameInForm = value => {\n      this.setState({\n        playerNameInForm: value.target.value\n      });\n    };\n\n    this.onChangePlayerEmailInForm = value => {\n      this.setState({\n        playerEmailInForm: value.target.value\n      });\n    };\n\n    this.onChangePlayerGenderInForm = value => {\n      this.setState({\n        playerGenderInForm: value\n      });\n    };\n\n    this.onChangePlayerAgeInForm = value => {\n      let tempValue = 0;\n\n      if (!isNaN(value.target.value)) {\n        tempValue = Number(value.target.value);\n      } else {\n        tempValue = 0;\n      }\n\n      this.setState({\n        playerAgeInForm: tempValue\n      });\n    };\n\n    this.handleJoinTournament = () => {\n      this.setState({\n        showJoinModal: true\n      });\n    };\n\n    this.onChangeCompetitionFullName = value => {\n      this.setState({\n        competitionFullName: value\n      });\n    };\n\n    this.onChangeSport = value => {\n      this.setState({\n        selectedSport: value\n      });\n    };\n\n    this.handleOpenEditCompetitionInfo = () => {\n      this.setState({\n        onEditMode: true,\n        competitionFullName: this.props.competitionInfo.Competition.name != null ? this.props.competitionInfo.Competition.name : '',\n        selectedSport: this.props.competitionInfo.Competition.sportId != null ? sportOptions.find(element => element.value === this.props.competitionInfo.Competition.sportId) != null ? sportOptions.find(element => element.value === this.props.competitionInfo.Competition.sportId) : null : null,\n        onePhase: this.props.competitionInfo.Competition.hasGroupStage === false,\n        twoPhase: this.props.competitionInfo.Competition.hasGroupStage === true,\n        selectedCompetitionFormatPhase1: this.props.finalStageSetting != null && this.props.groupStageSetting != null ? this.props.competitionInfo.Competition.hasGroupStage === false ? competitionFormatOptions.find(element => element.value === this.props.finalStageSetting.formatId) : competitionFormatOptions.find(element => element.value === this.props.groupStageSetting.formatId) : null,\n        selectedCompetitionFormatPhase2: this.props.finalStageSetting != null ? competitionFormatOptions.find(element => element.value === this.props.finalStageSetting.formatId) : null,\n        homeWayPhase1: this.props.finalStageSetting != null && this.props.groupStageSetting != null ? this.props.competitionInfo.Competition.hasGroupStage === false ? this.props.finalStageSetting.hasHomeMatch : this.props.groupStageSetting.hasHomeMatch : false,\n        homeWayPhase2: this.props.finalStageSetting != null ? this.props.finalStageSetting.hasHomeMatch : false,\n        amountOfTeamsInAGroup: this.props.groupStageSetting != null ? this.props.groupStageSetting.maxTeamPerTable : 2,\n        amountOfTeamsGoOnInAGroup: this.props.groupStageSetting != null ? this.props.groupStageSetting.advanceTeamPerTable : 1\n      });\n    };\n\n    this.validateCompetitionInfo = () => {\n      let competitionFullNameError = false;\n      let competitionFullNameErrorContent = '';\n\n      if (this.state.competitionFullName.trim() === '') {\n        competitionFullNameError = true;\n        competitionFullNameErrorContent = 'Tên cuộc thi không được trống';\n      }\n\n      let tempList = this.props.allCompetitionByTournamentId.slice(0);\n      const tempList2 = tempList.filter(element => element.id !== this.props.competitionInfo.Competition.id);\n\n      if (tempList2.find(element => element.name === this.state.competitionFullName) != null) {\n        competitionFullNameError = true;\n        competitionFullNameErrorContent = 'Tên cuộc thi này đã tồn tại';\n      }\n\n      return {\n        competitionFullNameError,\n        competitionFullNameErrorContent\n      };\n    };\n\n    this.handleCloseEditCompetitionInfo = () => {\n      const {\n        competitionFullNameError,\n        competitionFullNameErrorContent\n      } = this.validateCompetitionInfo();\n      const {\n        amountOfTeamsInAGroupError,\n        amountOfTeamsInAGroupErrorContent\n      } = this.validateAmountOfTeamsInAGroup();\n      const {\n        amountOfTeamsGoOnInAGroupError,\n        amountOfTeamsGoOnInAGroupErrorContent\n      } = this.validateAmountOfTeamsGoOnInAGroup();\n      this.setState({\n        amountOfTeamsInAGroupError,\n        amountOfTeamsInAGroupErrorContent,\n        amountOfTeamsGoOnInAGroupError,\n        amountOfTeamsGoOnInAGroupErrorContent,\n        competitionFullNameError,\n        competitionFullNameErrorContent\n      });\n\n      if (competitionFullNameError === true || amountOfTeamsInAGroupError === true || amountOfTeamsGoOnInAGroupError === true) {\n        return;\n      }\n\n      let params = {\n        path: '',\n        param: {\n          id: this.props.routerInfo.match.params.competitionId\n        },\n        data: {\n          description: this.props.competitionInfo.Competition.description,\n          hasGroupStage: this.state.onePhase === true ? false : true,\n          name: this.state.competitionFullName,\n          sportId: this.state.selectedSport.value,\n          status: this.props.competitionInfo.Competition.status,\n          tournamentId: this.props.competitionInfo.Competition.tournamentId,\n          url: this.props.competitionInfo.Competition.url\n        }\n      };\n      this.props.editCompetition(params);\n      params = {\n        path: '',\n        param: {\n          id: this.props.finalStageSetting.id\n        },\n        data: {\n          competitionId: this.props.routerInfo.match.params.competitionId,\n          formatId: this.state.twoPhase === true ? this.state.selectedCompetitionFormatPhase2.value : this.state.selectedCompetitionFormatPhase1.value,\n          hasHomeMatch: this.state.twoPhase === true ? this.state.homeWayPhase2 : this.state.homeWayPhase1,\n          status: this.props.finalStageSetting.status,\n          url: this.props.finalStageSetting.url\n        }\n      };\n      this.props.editFinalStageSetting(params);\n\n      if (this.state.twoPhase === true) {\n        params = {\n          path: '',\n          param: {\n            id: this.props.groupStageSetting.id\n          },\n          data: {\n            competitionId: this.props.routerInfo.match.params.competitionId,\n            formatId: this.state.selectedCompetitionFormatPhase1.value,\n            hasHomeMatch: this.state.homeWayPhase1,\n            status: this.props.groupStageSetting.status,\n            url: this.props.groupStageSetting.url,\n            advanceTeamPerTable: this.state.amountOfTeamsGoOnInAGroup,\n            maxTeamPerTable: this.state.amountOfTeamsInAGroup\n          }\n        };\n        this.props.editGroupStageSetting(params);\n      }\n\n      params = {\n        path: '',\n        param: {\n          competitionId: this.props.routerInfo.match.params.competitionId\n        },\n        data: {}\n      };\n      this.props.updateSchedule(params);\n      this.setState({\n        onEditMode: false\n      });\n    };\n\n    this.OnChoose1 = () => {\n      this.setState({\n        onePhase: true,\n        twoPhase: false\n      });\n    };\n\n    this.OnChoose2 = () => {\n      this.setState({\n        onePhase: false,\n        twoPhase: true\n      });\n    };\n\n    this.onChangeCompetitionFormatPhase1 = value => {\n      this.setState({\n        selectedCompetitionFormatPhase1: value\n      });\n    };\n\n    this.onChangeCompetitionFormatPhase2 = value => {\n      this.setState({\n        selectedCompetitionFormatPhase2: value\n      });\n    };\n\n    this.onChangeHomeWayPhase1 = () => {\n      this.setState({\n        homeWayPhase1: !this.state.homeWayPhase1\n      });\n    };\n\n    this.onChangeHomeWayPhase2 = () => {\n      this.setState({\n        homeWayPhase2: !this.state.homeWayPhase2\n      });\n    };\n\n    this.onChangeAmountOfTeamsInAGroup = value => {\n      let tempValue = 0;\n\n      if (!isNaN(value)) {\n        tempValue = Number(value);\n      } else {\n        tempValue = 0;\n      }\n\n      this.setState({\n        amountOfTeamsInAGroup: tempValue\n      });\n    };\n\n    this.onChangeAmountOfTeamsGoOnInAGroup = value => {\n      let tempValue = 0;\n\n      if (!isNaN(value)) {\n        tempValue = Number(value);\n      } else {\n        tempValue = 0;\n      }\n\n      this.setState({\n        amountOfTeamsGoOnInAGroup: tempValue\n      });\n    };\n\n    this.validateAmountOfTeamsInAGroup = () => {\n      let amountOfTeamsInAGroupError = false;\n      let amountOfTeamsInAGroupErrorContent = '';\n\n      if (this.state.amountOfTeamsInAGroup < 2) {\n        amountOfTeamsInAGroupError = true;\n        amountOfTeamsInAGroupErrorContent = 'Số đội tối đa trong 1 bảng phải lớn hơn 1';\n      }\n\n      return {\n        amountOfTeamsInAGroupError,\n        amountOfTeamsInAGroupErrorContent\n      };\n    };\n\n    this.onBlurAmountOfTeamsInAGroup = () => {\n      const {\n        amountOfTeamsInAGroupError,\n        amountOfTeamsInAGroupErrorContent\n      } = this.validateAmountOfTeamsInAGroup();\n      this.setState({\n        amountOfTeamsInAGroupError,\n        amountOfTeamsInAGroupErrorContent\n      });\n\n      if (amountOfTeamsInAGroupError === true) {\n        return;\n      }\n    };\n\n    this.validateAmountOfTeamsGoOnInAGroup = () => {\n      let amountOfTeamsGoOnInAGroupError = false;\n      let amountOfTeamsGoOnInAGroupErrorContent = '';\n\n      if (this.state.amountOfTeamsGoOnInAGroup < 1 || this.state.amountOfTeamsGoOnInAGroup >= this.state.amountOfTeamsInAGroup) {\n        amountOfTeamsGoOnInAGroupError = true;\n        amountOfTeamsGoOnInAGroupErrorContent = 'Số đội đi tiếp trong 1 bảng phải lớn hơn 0 và nhỏ hơn số đội tối đa';\n      }\n\n      return {\n        amountOfTeamsGoOnInAGroupError,\n        amountOfTeamsGoOnInAGroupErrorContent\n      };\n    };\n\n    this.onBlurAmountOfTeamsGoOnInAGroup = () => {\n      const {\n        amountOfTeamsGoOnInAGroupError,\n        amountOfTeamsGoOnInAGroupErrorContent\n      } = this.validateAmountOfTeamsGoOnInAGroup();\n      this.setState({\n        amountOfTeamsGoOnInAGroupError,\n        amountOfTeamsGoOnInAGroupErrorContent\n      });\n\n      if (amountOfTeamsGoOnInAGroupError === true) {\n        return;\n      }\n    };\n\n    this.state = {\n      showJoinModal: false,\n      teamNameInForm: '',\n      playerEmailInForm: '',\n      teamNameInFormError: false,\n      teamNameInFormErrorContent: '',\n      playerNameInForm: '',\n      playerAgeInForm: 0,\n      playerGenderInForm: {\n        value: true,\n        label: 'Nam'\n      },\n      playerEmailInFormError: false,\n      playerEmailInFormErrorContent: '',\n      playerNameInFormError: false,\n      playerNameInFormErrorContent: '',\n      teamShortNameInForm: '',\n      teamShortNameInFormError: false,\n      onEditMode: false,\n      teamShortNameInFormErrorContent: '',\n      competitionFullName: '',\n      competitionFullNameError: false,\n      competitionFullNameErrorContent: '',\n      selectedSport: null,\n      onePhase: true,\n      twoPhase: false,\n      selectedCompetitionFormatPhase1: null,\n      selectedCompetitionFormatPhase2: null,\n      homeWayPhase2: false,\n      homeWayPhase1: false,\n      amountOfTeamsInAGroup: 2,\n      amountOfTeamsInAGroupError: false,\n      amountOfTeamsInAGroupErrorContent: '',\n      amountOfTeamsGoOnInAGroup: 1,\n      amountOfTeamsGoOnInAGroupError: false,\n      amountOfTeamsGoOnInAGroupErrorContent: '',\n      listPlayerInForm: [{\n        name: 'Phan Trọng Nhân',\n        gender: 'Nam',\n        age: 23,\n        email: 'caulamgithelol.lmht@gmail.com'\n      }]\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.competitionInfo !== this.props.competitionInfo && nextProps.competitionInfo != null && nextProps.competitionInfo.Competition != null && nextProps.competitionInfo.Competition.tournamentId != null) {\n      let params = {\n        path: '',\n        param: {\n          id: nextProps.competitionInfo.Competition.tournamentId\n        },\n        data: {}\n      };\n      this.props.queryTournamentInfo(params);\n      params = {\n        path: '',\n        param: {\n          tournamentId: nextProps.competitionInfo.Competition.tournamentId,\n          limit: 99\n        },\n        data: {}\n      };\n      this.props.queryAllCompetitionsByTournamentId(params);\n      params = {\n        path: '',\n        param: {\n          id: nextProps.competitionInfo.Competition.sportId\n        },\n        data: {}\n      };\n      this.props.querySportInfo(params);\n      params = {\n        path: '',\n        param: {\n          competitionId: this.props.routerInfo.match.params.competitionId\n        },\n        data: {}\n      };\n      this.props.queryFinalStageSetting(params);\n      params = {\n        path: '',\n        param: {\n          competitionId: this.props.routerInfo.match.params.competitionId\n        },\n        data: {}\n      };\n      this.props.queryGroupStageSetting(params);\n    }\n\n    if (this.props.allSports !== nextProps.allSports) {\n      sportOptions = [];\n      nextProps.allSports.map((item, index) => sportOptions.push({\n        value: item.id,\n        label: item.fullName\n      }));\n    }\n\n    if (this.props.allFormats !== nextProps.allFormats) {\n      competitionFormatOptions = [];\n      nextProps.allFormats.map((item, index) => competitionFormatOptions.push({\n        value: item.id,\n        label: item.description\n      }));\n    }\n\n    if ((this.props.competitionInfo !== nextProps.competitionInfo || this.props.tournamentInfo !== nextProps.tournamentInfo) && nextProps.competitionInfo != null && nextProps.competitionInfo.Competition != null && nextProps.tournamentInfo != null && nextProps.tournamentInfo.Tournament != null) {\n      if (nextProps.competitionInfo.Competition.hasGroupStage === false) {\n        this.tabList = ['Nhánh thi đấu vòng chung kết', 'Lịch thi đấu vòng chung kết', 'BXH vòng chung kết', 'Các đội tham gia'];\n        this.componentList = [/*#__PURE__*/React.createElement(BracketBoard, {\n          competitionId: this.props.routerInfo.match.params.competitionId,\n          finalStage: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(BracketSchedule, {\n          competitionId: this.props.routerInfo.match.params.competitionId,\n          finalStage: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(BracketRank, {\n          competitionId: this.props.routerInfo.match.params.competitionId,\n          finalStage: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Teams, {\n          competitionInfo: nextProps.competitionInfo,\n          tournamentInfo: nextProps.tournamentInfo,\n          id: nextProps.competitionInfo.Competition.id,\n          type: 'competition',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 11\n          }\n        })];\n      } else {\n        this.tabList = ['Nhánh thi đấu vòng bảng', 'Lịch thi đấu vòng bảng', 'Nhánh thi đấu vòng chung kết', 'Lịch thi đấu vòng chung kết', 'Các đội tham gia'];\n        this.componentList = [/*#__PURE__*/React.createElement(BracketBoard, {\n          competitionId: this.props.routerInfo.match.params.competitionId,\n          finalStage: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(BracketSchedule, {\n          competitionId: this.props.routerInfo.match.params.competitionId,\n          finalStage: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(BracketBoard, {\n          competitionId: this.props.routerInfo.match.params.competitionId,\n          finalStage: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(BracketSchedule, {\n          competitionId: this.props.routerInfo.match.params.competitionId,\n          finalStage: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Teams, {\n          competitionInfo: nextProps.competitionInfo,\n          tournamentInfo: nextProps.tournamentInfo,\n          id: nextProps.competitionInfo.Competition.id,\n          type: 'competition',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 11\n          }\n        })];\n      }\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    this.requestData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 17\n      }\n    }, this.state.onEditMode === false ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"CompetitionInfo-name-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 21\n      }\n    }, this.props.competitionInfo != null && this.props.competitionInfo.Competition ? this.props.competitionInfo.Competition.name : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 400,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 212\n      }\n    })) : /*#__PURE__*/React.createElement(TextInput, {\n      style: {\n        width: 300\n      },\n      label: 'Tên cuộc thi',\n      value: this.state.competitionFullName,\n      onChangeText: this.onChangeCompetitionFullName,\n      error: this.state.competitionFullNameError,\n      errorContent: this.state.competitionFullNameErrorContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }\n    }, this.state.onEditMode === false && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 56\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 23\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Trạng thái: ${formatTournamentStatus(this.props.tournamentInfo.Tournament.status)}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 200,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 223\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 19\n      }\n    }, this.state.onEditMode === false ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 57\n      }\n    }, this.props.sportInfo != null ? `Bộ môn thi đấu: ${this.props.sportInfo.fullName}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 200,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 145\n      }\n    })) : sportOptions.length > 0 && /*#__PURE__*/React.createElement(Select, {\n      options: sportOptions,\n      className: \"Select\",\n      defaultValue: this.state.selectedSport,\n      value: this.state.selectedSport,\n      onChange: this.onChangeSport,\n      maxMenuHeight: 140,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 27\n      }\n    }))), this.state.onEditMode === false && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 21\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Thuộc giải: ${this.props.tournamentInfo.Tournament.fullName}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 250,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 190\n      }\n    })))), this.state.onEditMode === true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 25\n      }\n    }, \"C\\xE1ch t\\u1ED5 ch\\u1EE9c gi\\u1EA3i:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"competitionType\",\n      onClick: this.OnChoose1,\n      checked: this.state.onePhase,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      onClick: this.OnChoose1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 25\n      }\n    }, \"1 giai \\u0111o\\u1EA1n\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"competitionType\",\n      onClick: this.OnChoose2,\n      checked: this.state.twoPhase,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      onClick: this.OnChoose2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 25\n      }\n    }, \"2 giai \\u0111o\\u1EA1n\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 25\n      }\n    }, this.props.competitionInfo != null && this.props.competitionInfo.Competition ? `Cách tổ chức giải: ${this.props.competitionInfo.Competition.hasGroupStage === true ? '2 giai đoạn' : '1 giai đoạn'}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 250,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 252\n      }\n    })))), this.state.onEditMode === true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 25\n      }\n    }, `Thể thức${this.state.onePhase === true ? '' : ' vòng bảng'}`), /*#__PURE__*/React.createElement(Select, {\n      options: competitionFormatOptions,\n      className: \"Select\",\n      defaultValue: this.state.selectedCompetitionFormatPhase1,\n      value: this.state.selectedCompetitionFormatPhase1,\n      onChange: this.onChangeCompetitionFormatPhase1,\n      menuPlacement: 'top',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 25\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 25\n      }\n    }, this.props.competitionInfo != null && this.props.competitionInfo.Competition ? `${this.props.competitionInfo.Competition.hasGroupStage === true ? 'Thể thức vòng bảng: ' : 'Thể thức: '}\n                            ${this.props.groupStageSetting != null && this.props.allFormats != null && this.props.finalStageSetting != null && this.props.allFormats.length > 0 && this.props.allFormats.find(element => element.id === this.props.finalStageSetting.formatId) != null && this.props.allFormats.find(element => element.id === this.props.groupStageSetting.formatId) != null ? this.props.competitionInfo.Competition.hasGroupStage !== true ? this.props.allFormats.find(element => element.id === this.props.finalStageSetting.formatId).description : this.props.allFormats.find(element => element.id === this.props.groupStageSetting.formatId).description : 'chưa có'}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 300,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 36\n      }\n    })))), this.state.onEditMode === true ? this.state.selectedCompetitionFormatPhase1 != null && this.state.selectedCompetitionFormatPhase1.value !== 2 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Checkbox-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.homeWayPhase1,\n      onChange: this.onChangeHomeWayPhase1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 29\n      }\n    }), `${this.state.selectedCompetitionFormatPhase1.value === 3 ? `${this.state.twoPhase === true ? 'Chơi lượt đi lượt về vòng bảng' : 'Chơi lượt đi lượt về'}` : `${this.state.twoPhase === true ? 'Có trận tranh hạng 3 vòng bảng' : 'Có trận tranh hạng 3'}`}`))) : this.props.competitionInfo != null && this.props.competitionInfo.Competition && (this.props.competitionInfo.Competition.hasGroupStage === true ? this.props.groupStageSetting != null && this.props.groupStageSetting.formatId !== 2 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 110\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 27\n      }\n    }, this.props.groupStageSetting.hasHomeMatch === true ? this.props.groupStageSetting.formatId === 1 ? 'Có trận tranh hạng 3 vòng bảng' : 'Có chơi lượt đi lượt về vòng bảng' : this.props.groupStageSetting.formatId === 1 ? 'Không có trận tranh hạng 3 vòng bảng' : 'Không chơi lượt đi lượt về vòng bảng'))) : this.props.finalStageSetting != null && this.props.finalStageSetting.formatId !== 2 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 120\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 27\n      }\n    }, this.props.finalStageSetting.hasHomeMatch === true ? this.props.finalStageSetting.formatId === 1 ? 'Có trận tranh hạng 3' : 'Có chơi lượt đi lượt về' : this.props.finalStageSetting.formatId === 1 ? 'Không có trận tranh hạng 3' : 'Không chơi lượt đi lượt về')))), this.state.onEditMode === true ? this.state.twoPhase === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      style: {\n        width: 250\n      },\n      label: 'Số đội trong 1 bảng (lớn hơn 1)',\n      value: this.state.amountOfTeamsInAGroup,\n      onChangeText: this.onChangeAmountOfTeamsInAGroup,\n      error: this.state.amountOfTeamsInAGroupError,\n      errorContent: this.state.amountOfTeamsInAGroupErrorContent,\n      onBlur: this.onBlurAmountOfTeamsInAGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      style: {\n        width: 300\n      },\n      label: 'Số đội đi tiếp trong 1 bảng (lớn hơn 0)',\n      value: this.state.amountOfTeamsGoOnInAGroup,\n      onChangeText: this.onChangeAmountOfTeamsGoOnInAGroup,\n      error: this.state.amountOfTeamsGoOnInAGroupError,\n      errorContent: this.state.amountOfTeamsGoOnInAGroupErrorContent,\n      onBlur: this.onBlurAmountOfTeamsGoOnInAGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 23\n      }\n    }))) : this.props.competitionInfo != null && this.props.competitionInfo.Competition && this.props.competitionInfo.Competition.hasGroupStage === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 25\n      }\n    }, \"S\\u1ED1 \\u0111\\u1ED9i trong 1 b\\u1EA3ng: \", this.props.groupStageSetting != null ? this.props.groupStageSetting.maxTeamPerTable : 2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 25\n      }\n    }, \"S\\u1ED1 \\u0111\\u1ED9i \\u0111i ti\\u1EBFp trong 1 b\\u1EA3ng: \", this.props.groupStageSetting != null ? this.props.groupStageSetting.advanceTeamPerTable : 1))), this.state.onEditMode === true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 21\n      }\n    }, this.state.twoPhase === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 56\n      }\n    }, \"Th\\u1EC3 th\\u1EE9c v\\xF2ng chung k\\u1EBFt\"), this.state.twoPhase === true && /*#__PURE__*/React.createElement(Select, {\n      options: competitionFormatOptions,\n      className: \"Select\",\n      defaultValue: this.state.selectedCompetitionFormatPhase2,\n      value: this.state.selectedCompetitionFormatPhase2,\n      onChange: this.onChangeCompetitionFormatPhase2,\n      menuPlacement: 'top',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 56\n      }\n    }))) : this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && this.props.competitionInfo.Competition.hasGroupStage === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 25\n      }\n    }, \"Th\\u1EC3 th\\u1EE9c v\\xF2ng chung k\\u1EBFt: \", this.props.allFormats != null && this.props.finalStageSetting != null && this.props.allFormats.length > 0 && this.props.allFormats.find(element => element.id === this.props.finalStageSetting.formatId) != null && this.props.allFormats.find(element => element.id === this.props.finalStageSetting.formatId).description))), this.state.onEditMode === false ? this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && this.props.competitionInfo.Competition.hasGroupStage === true && this.props.finalStageSetting != null && this.props.finalStageSetting.formatId !== 2 && (this.props.finalStageSetting.formatId === 3 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 25\n      }\n    }, this.props.finalStageSetting.hasHomeMatch === true ? 'Chơi lượt đi lượt về vòng chung kết' : 'Không chơi lượt đi lượt về vòng chung kết'))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 25\n      }\n    }, this.props.finalStageSetting.hasHomeMatch === true ? 'Có trận tranh hạng 3 vòng chung kết' : 'Không có trận tranh hạng 3 vòng chung kết')))) : this.state.twoPhase === true && this.state.selectedCompetitionFormatPhase2.value !== 2 && (this.state.selectedCompetitionFormatPhase2.value === 3 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Checkbox-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.homeWayPhase2,\n      onChange: this.onChangeHomeWayPhase2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 27\n      }\n    }), \"Ch\\u01A1i l\\u01B0\\u1EE3t \\u0111i l\\u01B0\\u1EE3t v\\u1EC1 v\\xF2ng chung k\\u1EBFt\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Checkbox-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.homeWayPhase2,\n      onChange: this.onChangeHomeWayPhase2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 27\n      }\n    }), \"C\\xF3 tr\\u1EADn tranh h\\u1EA1ng 3 v\\xF2ng chung k\\u1EBFt\")))))), this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && this.props.competitionInfo.Config != null && cookies.get(COOKIES_TYPE.AUTH_TOKEN) != null && (this.props.competitionInfo.Config.canEdit !== true ? this.props.competitionInfo.Competition.status === 'opening' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-login\",\n      onClick: this.handleJoinTournament,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"CompetitionInfo-login-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 21\n      }\n    }, \"Tham gia cu\\u1ED9c thi\"))) : (this.props.competitionInfo.Competition.status === 'opening' || this.props.competitionInfo.Competition.status === 'initializing') && (this.state.onEditMode === false ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-login\",\n      onClick: this.handleOpenEditCompetitionInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"CompetitionInfo-login-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 23\n      }\n    }, \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-login\",\n      onClick: this.handleCloseEditCompetitionInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"CompetitionInfo-login-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 23\n      }\n    }, \"L\\u01B0u ch\\u1EC9nh s\\u1EEDa\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionInfo-content-info-advanced-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CustomTab, {\n      tabList: this.tabList,\n      componentList: this.componentList,\n      selectedIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(CustomModal, {\n      customStyles: customStyles,\n      handleCloseModal: this.handleCloseModal,\n      showModal: this.state.showJoinModal,\n      handleConfirmModal: this.handleConfirmModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentInfo-join-tournament-form-competition-header',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 13\n      }\n    }, \"Form \\u0111\\u0103ng k\\xFD d\\u1EF1 thi\")), /*#__PURE__*/React.createElement(TextInput, {\n      label: 'Tên đội',\n      value: this.state.teamNameInForm,\n      onChangeText: this.onChangeTeamNameInForm,\n      error: this.state.teamNameInFormError,\n      errorContent: this.state.teamNameInFormErrorContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      label: 'Tên ngắn đội',\n      value: this.state.teamShortNameInForm,\n      onChangeText: this.onChangeTeamShortNameInForm,\n      error: this.state.teamShortNameInFormError,\n      errorContent: this.state.teamShortNameInFormErrorContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 15\n      }\n    }, \"T\\xEAn\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 15\n      }\n    }, \"Gi\\u1EDBi t\\xEDnh\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 15\n      }\n    }, \"Tu\\u1ED5i\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 15\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-setting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 13\n      }\n    })), this.state.listPlayerInForm.map((item, index) => /*#__PURE__*/React.createElement(Player, {\n      onDelete: this.onDeletePlayer,\n      info: item,\n      freeToEdit: true,\n      key: index,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: 'text',\n      onChange: this.onChangePlayerNameInForm,\n      value: this.state.playerNameInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: genderOptions,\n      className: \"Select\",\n      defaultValue: this.state.playerGenderInForm,\n      value: this.state.playerGenderInForm,\n      onChange: this.onChangePlayerGenderInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: '70px'\n      },\n      type: 'text',\n      onChange: this.onChangePlayerAgeInForm,\n      value: this.state.playerAgeInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: 'text',\n      onChange: this.onChangePlayerEmailInForm,\n      value: this.state.playerEmailInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-setting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IoMdAddCircleOutline, {\n      color: 'white',\n      size: 25,\n      style: {\n        marginLeft: '3px',\n        marginRight: '3px'\n      },\n      onClick: this.addPlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 15\n      }\n    }))), this.state.playerNameInFormError === true && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 57\n      }\n    }, this.state.playerNameInFormErrorContent), this.state.playerEmailInFormError === true && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 58\n      }\n    }, this.state.playerEmailInFormErrorContent)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    competitionInfo: state.competitionInfo,\n    tournamentInfo: state.tournamentInfo,\n    allSports: state.allSports,\n    sportInfo: state.sportInfo,\n    groupStageSetting: state.groupStageSetting,\n    finalStageSetting: state.finalStageSetting,\n    allFormats: state.allFormats,\n    allCompetitionByTournamentId: state.allCompetitionByTournamentId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editGroupStageSetting,\n  editFinalStageSetting,\n  editCompetition,\n  queryAllFormats,\n  queryCompetition,\n  queryTournamentInfo,\n  queryAllSports,\n  querySportInfo,\n  queryFinalStageSetting,\n  queryGroupStageSetting,\n  queryAllCompetitionsByTournamentId,\n  updateSchedule\n})(CompetitionInfo);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/screens/CompetitionInfo/index.tsx"],"names":["React","connect","Skeleton","Select","editGroupStageSetting","editFinalStageSetting","editCompetition","queryAllFormats","queryCompetition","queryAllSports","querySportInfo","queryFinalStageSetting","queryGroupStageSetting","updateSchedule","CustomModal","TextInput","CustomTab","Player","IoMdAddCircleOutline","queryAllCompetitionsByTournamentId","BracketBoard","Teams","BracketSchedule","BracketRank","queryTournamentInfo","config","formatTournamentStatus","cookies","COOKIES_TYPE","customStyles","content","top","left","right","bottom","backgroundColor","display","flexDirection","overlay","zIndex","genderOptions","value","label","sportOptions","competitionFormatOptions","CompetitionInfo","Component","constructor","props","tabList","componentList","requestData","params","path","param","id","routerInfo","match","competitionId","data","handleCloseModal","confirm","window","setState","showJoinModal","validateForm","teamNameInFormError","teamNameInFormErrorContent","teamShortNameInFormErrorContent","teamShortNameInFormError","state","teamNameInForm","trim","teamShortNameInForm","validateAddPlayer","playerEmailInFormErrorContent","playerEmailInFormError","playerNameInFormErrorContent","playerNameInFormError","playerNameInForm","regex","email","test","playerEmailInForm","handleConfirmModal","addPlayer","listTemp","listPlayerInForm","push","name","age","playerAgeInForm","gender","playerGenderInForm","onChangeTeamNameInForm","onChangeTeamShortNameInForm","onDeletePlayer","indexx","filter","item","index","onChangePlayerNameInForm","target","onChangePlayerEmailInForm","onChangePlayerGenderInForm","onChangePlayerAgeInForm","tempValue","isNaN","Number","handleJoinTournament","onChangeCompetitionFullName","competitionFullName","onChangeSport","selectedSport","handleOpenEditCompetitionInfo","onEditMode","competitionInfo","Competition","sportId","find","element","onePhase","hasGroupStage","twoPhase","selectedCompetitionFormatPhase1","finalStageSetting","groupStageSetting","formatId","selectedCompetitionFormatPhase2","homeWayPhase1","hasHomeMatch","homeWayPhase2","amountOfTeamsInAGroup","maxTeamPerTable","amountOfTeamsGoOnInAGroup","advanceTeamPerTable","validateCompetitionInfo","competitionFullNameError","competitionFullNameErrorContent","tempList","allCompetitionByTournamentId","slice","tempList2","handleCloseEditCompetitionInfo","amountOfTeamsInAGroupError","amountOfTeamsInAGroupErrorContent","validateAmountOfTeamsInAGroup","amountOfTeamsGoOnInAGroupError","amountOfTeamsGoOnInAGroupErrorContent","validateAmountOfTeamsGoOnInAGroup","description","status","tournamentId","url","OnChoose1","OnChoose2","onChangeCompetitionFormatPhase1","onChangeCompetitionFormatPhase2","onChangeHomeWayPhase1","onChangeHomeWayPhase2","onChangeAmountOfTeamsInAGroup","onChangeAmountOfTeamsGoOnInAGroup","onBlurAmountOfTeamsInAGroup","onBlurAmountOfTeamsGoOnInAGroup","shouldComponentUpdate","nextProps","nextState","limit","allSports","map","fullName","allFormats","tournamentInfo","Tournament","componentDidMount","render","width","sportInfo","length","Config","get","AUTH_TOKEN","canEdit","marginLeft","marginRight","color","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Styles } from 'react-modal';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport * as H from 'history';\r\nimport { StaticContext } from 'react-router';\r\nimport Select, { ValueType, OptionTypeBase } from 'react-select';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport {\r\n  editGroupStageSetting,\r\n  editFinalStageSetting,\r\n  editCompetition,\r\n  queryAllFormats,\r\n  queryCompetition,\r\n  queryAllSports,\r\n  querySportInfo,\r\n  queryFinalStageSetting,\r\n  queryGroupStageSetting,\r\n  updateSchedule\r\n} from './actions';\r\nimport './styles.css';\r\nimport CustomModal from 'components/CustomModal';\r\nimport TextInput from 'components/TextInput';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport CustomTab from 'components/CustomTab';\r\nimport Player from 'components/Player';\r\nimport { IoMdAddCircleOutline } from 'react-icons/io';\r\nimport { queryAllCompetitionsByTournamentId } from 'components/CompetitionsSetting/actions';\r\nimport BracketBoard from 'components/BracketBoard';\r\nimport Teams from 'components/Teams';\r\nimport BracketSchedule from 'components/BracketSchedule';\r\nimport BracketRank from 'components/BracketRank';\r\nimport { queryTournamentInfo } from 'screens/TournamentInfo/actions';\r\nimport config from 'config';\r\nimport { formatTournamentStatus } from 'utils/common';\r\nimport { cookies } from 'utils/cookies';\r\nimport { COOKIES_TYPE } from 'global';\r\n\r\ninterface ICompetitionInfoProps extends React.ClassAttributes<CompetitionInfo> {\r\n  routerInfo: RouteComponentProps<any, StaticContext, H.LocationState>;\r\n  competitionInfo: IParams | null;\r\n  tournamentInfo: IParams | null;\r\n  finalStageSetting: IParams | null;\r\n  groupStageSetting: IParams | null;\r\n  allSports: IParams[];\r\n  allFormats: IParams[];\r\n  sportInfo: IParams | null;\r\n  allCompetitionByTournamentId: IParams[] | null;\r\n\r\n  queryCompetition(params: IBigRequest): void;\r\n  queryTournamentInfo(params: IBigRequest): void;\r\n  querySportInfo(params: IBigRequest): void;\r\n  queryFinalStageSetting(params: IBigRequest): void;\r\n  queryGroupStageSetting(params: IBigRequest): void;\r\n  editCompetition(params: IBigRequest): void;\r\n  editFinalStageSetting(params: IBigRequest): void;\r\n  editGroupStageSetting(params: IBigRequest): void;\r\n  queryAllCompetitionsByTournamentId(params: IBigRequest): void;\r\n  updateSchedule(params: IBigRequest): void;\r\n  queryAllSports(): void;\r\n  queryAllFormats(): void;\r\n}\r\n\r\ninterface ICompetitionInfoState {\r\n  showJoinModal: boolean;\r\n  competitionFullName: string;\r\n  competitionFullNameError: boolean;\r\n  competitionFullNameErrorContent: string;\r\n  teamNameInForm: string;\r\n  teamNameInFormError: boolean;\r\n  teamNameInFormErrorContent: string;\r\n  playerNameInForm: string;\r\n  playerNameInFormError: boolean;\r\n  playerNameInFormErrorContent: string;\r\n  playerEmailInForm: string;\r\n  playerEmailInFormError: boolean;\r\n  playerEmailInFormErrorContent: string;\r\n  playerAgeInForm: number;\r\n  teamShortNameInForm: string;\r\n  teamShortNameInFormError: boolean;\r\n  teamShortNameInFormErrorContent: string;\r\n  listPlayerInForm: IParams[];\r\n  playerGenderInForm: ValueType<OptionTypeBase>;\r\n  onEditMode: boolean;\r\n  selectedSport: ValueType<OptionTypeBase>;\r\n  onePhase: boolean;\r\n  twoPhase: boolean;\r\n  selectedCompetitionFormatPhase1: ValueType<OptionTypeBase>;\r\n  selectedCompetitionFormatPhase2: ValueType<OptionTypeBase>;\r\n  homeWayPhase2: boolean;\r\n  homeWayPhase1: boolean;\r\n  amountOfTeamsInAGroup: number;\r\n  amountOfTeamsInAGroupError: boolean;\r\n  amountOfTeamsInAGroupErrorContent: string;\r\n  amountOfTeamsGoOnInAGroup: number;\r\n  amountOfTeamsGoOnInAGroupError: boolean;\r\n  amountOfTeamsGoOnInAGroupErrorContent: string;\r\n}\r\n\r\nconst customStyles: Styles = {\r\n  content: {\r\n    top: '5%',\r\n    left: '15%',\r\n    right: '15%',\r\n    bottom: '5%',\r\n    backgroundColor: '#2b303d',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  overlay: {\r\n    zIndex: 100001,\r\n  },\r\n};\r\n\r\nconst genderOptions = [\r\n  { value: true, label: 'Nam' },\r\n  { value: false, label: 'Nữ' },\r\n];\r\n\r\nlet sportOptions: IParams[] = [];\r\n\r\nlet competitionFormatOptions: IParams[] = [];\r\n\r\nclass CompetitionInfo extends React.Component<ICompetitionInfoProps, ICompetitionInfoState> {\r\n  private tabList: string[] = [];\r\n  private componentList: ReactNode[] = [];\r\n\r\n  constructor(props: ICompetitionInfoProps) {\r\n    super(props);\r\n    this.state = {\r\n      showJoinModal: false,\r\n      teamNameInForm: '',\r\n      playerEmailInForm: '',\r\n      teamNameInFormError: false,\r\n      teamNameInFormErrorContent: '',\r\n      playerNameInForm: '',\r\n      playerAgeInForm: 0,\r\n      playerGenderInForm: { value: true, label: 'Nam' },\r\n      playerEmailInFormError: false,\r\n      playerEmailInFormErrorContent: '',\r\n      playerNameInFormError: false,\r\n      playerNameInFormErrorContent: '',\r\n      teamShortNameInForm: '',\r\n      teamShortNameInFormError: false,\r\n      onEditMode: false,\r\n      teamShortNameInFormErrorContent: '',\r\n      competitionFullName: '',\r\n      competitionFullNameError: false,\r\n      competitionFullNameErrorContent: '',\r\n      selectedSport: null,\r\n      onePhase: true,\r\n      twoPhase: false,\r\n      selectedCompetitionFormatPhase1: null,\r\n      selectedCompetitionFormatPhase2: null,\r\n      homeWayPhase2: false,\r\n      homeWayPhase1: false,\r\n      amountOfTeamsInAGroup: 2,\r\n      amountOfTeamsInAGroupError: false,\r\n      amountOfTeamsInAGroupErrorContent: '',\r\n      amountOfTeamsGoOnInAGroup: 1,\r\n      amountOfTeamsGoOnInAGroupError: false,\r\n      amountOfTeamsGoOnInAGroupErrorContent: '',\r\n      listPlayerInForm: [\r\n        {\r\n          name: 'Phan Trọng Nhân',\r\n          gender: 'Nam',\r\n          age: 23,\r\n          email: 'caulamgithelol.lmht@gmail.com',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ICompetitionInfoProps, nextState: ICompetitionInfoState) {\r\n    if (nextProps.competitionInfo !== this.props.competitionInfo && nextProps.competitionInfo != null && nextProps.competitionInfo.Competition != null && (nextProps.competitionInfo.Competition as unknown as IParams).tournamentId != null) {\r\n      let params: IBigRequest = {\r\n        path: '',\r\n        param: {\r\n          id: (nextProps.competitionInfo.Competition as unknown as IParams).tournamentId,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.queryTournamentInfo(params);\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          tournamentId: (nextProps.competitionInfo.Competition as unknown as IParams).tournamentId,\r\n          limit: 99,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.queryAllCompetitionsByTournamentId(params);\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          id: (nextProps.competitionInfo.Competition as unknown as IParams).sportId,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.querySportInfo(params);\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.queryFinalStageSetting(params);\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.queryGroupStageSetting(params);\r\n    }\r\n    if (this.props.allSports !== nextProps.allSports) {\r\n      sportOptions = [];\r\n      nextProps.allSports.map((item, index) => sportOptions.push({ value: item.id, label: item.fullName }));\r\n    }\r\n    if (this.props.allFormats !== nextProps.allFormats) {\r\n      competitionFormatOptions = [];\r\n      nextProps.allFormats.map((item, index) => competitionFormatOptions.push({ value: item.id, label: item.description }));\r\n    }\r\n    if ((this.props.competitionInfo !== nextProps.competitionInfo || this.props.tournamentInfo !== nextProps.tournamentInfo) && nextProps.competitionInfo != null && nextProps.competitionInfo.Competition != null && nextProps.tournamentInfo != null && nextProps.tournamentInfo.Tournament != null) {\r\n      if ((nextProps.competitionInfo.Competition as IParams).hasGroupStage === false) {\r\n        this.tabList = [\r\n          'Nhánh thi đấu vòng chung kết',\r\n          'Lịch thi đấu vòng chung kết',\r\n          'BXH vòng chung kết',\r\n          'Các đội tham gia'\r\n        ];\r\n        this.componentList = [\r\n          <BracketBoard competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <BracketSchedule competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <BracketRank competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <Teams competitionInfo={nextProps.competitionInfo} tournamentInfo={nextProps.tournamentInfo} id={(nextProps.competitionInfo.Competition as unknown as IParams).id as number} type={'competition'} />\r\n        ];\r\n      } else {\r\n        this.tabList = [\r\n          'Nhánh thi đấu vòng bảng',\r\n          'Lịch thi đấu vòng bảng',\r\n          'Nhánh thi đấu vòng chung kết',\r\n          'Lịch thi đấu vòng chung kết',\r\n          'Các đội tham gia'\r\n        ];\r\n        this.componentList = [\r\n          <BracketBoard competitionId={this.props.routerInfo.match.params.competitionId} finalStage={false} />,\r\n          <BracketSchedule competitionId={this.props.routerInfo.match.params.competitionId} finalStage={false} />,\r\n          <BracketBoard competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <BracketSchedule competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <Teams competitionInfo={nextProps.competitionInfo} tournamentInfo={nextProps.tournamentInfo} id={(nextProps.competitionInfo.Competition as unknown as IParams).id as number} type={'competition'} />\r\n        ];\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        id: this.props.routerInfo.match.params.competitionId as number,\r\n      },\r\n      data: {},\r\n    }\r\n    this.props.queryCompetition(params);\r\n    this.props.queryAllSports();\r\n    this.props.queryAllFormats();\r\n  }\r\n\r\n  private handleCloseModal = () => {\r\n    const confirm = window.confirm('Bạn có chắc chắn muốn hủy form đăng ký?');\r\n    if (confirm === true) {\r\n      this.setState({\r\n        showJoinModal: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  private validateForm = () => {\r\n    let teamNameInFormError = false;\r\n    let teamNameInFormErrorContent = '';\r\n    let teamShortNameInFormErrorContent = '';\r\n    let teamShortNameInFormError = false;\r\n    if (this.state.teamNameInForm.trim() === '') {\r\n      teamNameInFormError = true;\r\n      teamNameInFormErrorContent = 'Tên đội không được trống';\r\n    }\r\n    if (this.state.teamShortNameInForm.trim() === '') {\r\n      teamShortNameInFormError = true;\r\n      teamShortNameInFormErrorContent = 'Tên ngắn đội không được trống';\r\n    }\r\n\r\n    return {\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    };\r\n  }\r\n\r\n  private validateAddPlayer = () => {\r\n    let playerEmailInFormErrorContent = '';\r\n    let playerEmailInFormError = false;\r\n    let playerNameInFormErrorContent = '';\r\n    let playerNameInFormError = false;\r\n    if (this.state.playerNameInForm.trim() === '') {\r\n      playerNameInFormError = true;\r\n      playerNameInFormErrorContent = 'Tên người chơi không được trống';\r\n    }\r\n    if (!config.regex.email.test(this.state.playerEmailInForm)) {\r\n      playerEmailInFormError = true;\r\n      playerEmailInFormErrorContent = 'Email không hợp lệ';\r\n    }\r\n\r\n    return {\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    };\r\n  }\r\n\r\n  private handleConfirmModal = () => {\r\n    const {\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    } = this.validateForm();\r\n    this.setState({\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    });\r\n    if (teamNameInFormError === true || teamShortNameInFormError === true) {\r\n      return;\r\n    }\r\n    // this.props.registTeam();\r\n  };\r\n\r\n  private addPlayer = () => {\r\n    const {\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    } = this.validateAddPlayer();\r\n    this.setState({\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    });\r\n    if (playerNameInFormError === true || playerEmailInFormError === true) {\r\n      return;\r\n    }\r\n    const listTemp = this.state.listPlayerInForm;\r\n    listTemp.push({\r\n      name: this.state.playerNameInForm,\r\n      age: this.state.playerAgeInForm,\r\n      email: this.state.playerEmailInForm,\r\n      gender: (this.state.playerGenderInForm as IParams).label,\r\n    });\r\n    this.setState({\r\n      listPlayerInForm: listTemp,\r\n      playerNameInForm: '',\r\n      playerAgeInForm: 0,\r\n      playerEmailInForm: '',\r\n      playerGenderInForm: { value: true, label: 'Nam' },\r\n    });\r\n  }\r\n\r\n\r\n  private onChangeTeamNameInForm = (value: string) => {\r\n    this.setState({\r\n      teamNameInForm: value,\r\n    });\r\n  }\r\n\r\n  private onChangeTeamShortNameInForm = (value: string) => {\r\n    this.setState({\r\n      teamShortNameInForm: value,\r\n    });\r\n  }\r\n\r\n  private onDeletePlayer = (indexx: number) => {\r\n    this.setState({\r\n      listPlayerInForm: this.state.listPlayerInForm.filter((item, index) => index !== indexx),\r\n    });\r\n  }\r\n\r\n  private onChangePlayerNameInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      playerNameInForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private onChangePlayerEmailInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      playerEmailInForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private onChangePlayerGenderInForm = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({ playerGenderInForm: value, });\r\n  }\r\n\r\n  private onChangePlayerAgeInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    let tempValue = 0;\r\n    if (!isNaN(value.target.value as unknown as number)) {\r\n      tempValue = Number(value.target.value);\r\n    } else {\r\n      tempValue = 0;\r\n    }\r\n    this.setState({\r\n      playerAgeInForm: tempValue,\r\n    });\r\n  }\r\n\r\n  private handleJoinTournament = () => {\r\n    this.setState({\r\n      showJoinModal: true,\r\n    });\r\n  };\r\n\r\n  private onChangeCompetitionFullName = (value: string) => {\r\n    this.setState({ competitionFullName: value, });\r\n  }\r\n\r\n  private onChangeSport = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({\r\n      selectedSport: value,\r\n    });\r\n  }\r\n\r\n  private handleOpenEditCompetitionInfo = () => {\r\n    this.setState({\r\n      onEditMode: true,\r\n      competitionFullName: (this.props.competitionInfo!.Competition as unknown as IParams).name != null ? (this.props.competitionInfo!.Competition as unknown as IParams).name as string : '',\r\n      selectedSport: (this.props.competitionInfo!.Competition as unknown as IParams).sportId != null ?\r\n        (sportOptions.find(element => element.value === (this.props.competitionInfo!.Competition as unknown as IParams).sportId) != null ?\r\n          sportOptions.find(element => element.value === (this.props.competitionInfo!.Competition as unknown as IParams).sportId) as ValueType<OptionTypeBase> :\r\n          null) :\r\n        null,\r\n      onePhase: (this.props.competitionInfo!.Competition as unknown as IParams).hasGroupStage === false,\r\n      twoPhase: (this.props.competitionInfo!.Competition as unknown as IParams).hasGroupStage === true,\r\n      selectedCompetitionFormatPhase1: this.props.finalStageSetting != null && this.props.groupStageSetting != null ? ((this.props.competitionInfo!.Competition as unknown as IParams).hasGroupStage === false ? competitionFormatOptions.find(element => element.value === this.props.finalStageSetting!.formatId) : competitionFormatOptions.find(element => element.value === this.props.groupStageSetting!.formatId)) : null,\r\n      selectedCompetitionFormatPhase2: this.props.finalStageSetting != null ? (competitionFormatOptions.find(element => element.value === this.props.finalStageSetting!.formatId) as ValueType<OptionTypeBase>) : null,\r\n      homeWayPhase1: this.props.finalStageSetting != null && this.props.groupStageSetting != null ? ((this.props.competitionInfo!.Competition as unknown as IParams).hasGroupStage === false ? this.props.finalStageSetting.hasHomeMatch as boolean : this.props.groupStageSetting.hasHomeMatch as boolean) : false,\r\n      homeWayPhase2: this.props.finalStageSetting != null ? this.props.finalStageSetting.hasHomeMatch as boolean : false,\r\n      amountOfTeamsInAGroup: this.props.groupStageSetting != null ? this.props.groupStageSetting.maxTeamPerTable as number : 2,\r\n      amountOfTeamsGoOnInAGroup: this.props.groupStageSetting != null ? this.props.groupStageSetting.advanceTeamPerTable as number : 1,\r\n    });\r\n  }\r\n\r\n  private validateCompetitionInfo = () => {\r\n    let competitionFullNameError = false;\r\n    let competitionFullNameErrorContent = '';\r\n    if (this.state.competitionFullName.trim() === '') {\r\n      competitionFullNameError = true;\r\n      competitionFullNameErrorContent = 'Tên cuộc thi không được trống';\r\n    }\r\n    let tempList = this.props.allCompetitionByTournamentId!.slice(0);\r\n    const tempList2 = tempList.filter(element => element.id !== (this.props.competitionInfo!.Competition as IParams).id)\r\n    if (tempList2.find(element => element.name === this.state.competitionFullName) != null) {\r\n      competitionFullNameError = true;\r\n      competitionFullNameErrorContent = 'Tên cuộc thi này đã tồn tại';\r\n    }\r\n\r\n    return { competitionFullNameError, competitionFullNameErrorContent };\r\n  }\r\n\r\n  private handleCloseEditCompetitionInfo = () => {\r\n    const { competitionFullNameError, competitionFullNameErrorContent } = this.validateCompetitionInfo();\r\n    const { amountOfTeamsInAGroupError, amountOfTeamsInAGroupErrorContent } = this.validateAmountOfTeamsInAGroup();\r\n    const { amountOfTeamsGoOnInAGroupError, amountOfTeamsGoOnInAGroupErrorContent } = this.validateAmountOfTeamsGoOnInAGroup();\r\n    this.setState({\r\n      amountOfTeamsInAGroupError,\r\n      amountOfTeamsInAGroupErrorContent,\r\n      amountOfTeamsGoOnInAGroupError,\r\n      amountOfTeamsGoOnInAGroupErrorContent,\r\n      competitionFullNameError,\r\n      competitionFullNameErrorContent,\r\n    });\r\n    if (competitionFullNameError === true || amountOfTeamsInAGroupError === true || amountOfTeamsGoOnInAGroupError === true) {\r\n      return;\r\n    }\r\n    let params: IBigRequest = {\r\n      path: '',\r\n      param: {\r\n        id: this.props.routerInfo.match.params.competitionId as number,\r\n      },\r\n      data: {\r\n        description: (this.props.competitionInfo!.Competition as IParams).description,\r\n        hasGroupStage: this.state.onePhase === true ? false : true,\r\n        name: this.state.competitionFullName,\r\n        sportId: (this.state.selectedSport as IParams).value,\r\n        status: (this.props.competitionInfo!.Competition as IParams).status,\r\n        tournamentId: (this.props.competitionInfo!.Competition as IParams).tournamentId,\r\n        url: (this.props.competitionInfo!.Competition as IParams).url,\r\n      },\r\n    }\r\n    this.props.editCompetition(params);\r\n    params = {\r\n      path: '',\r\n      param: {\r\n        id: (this.props.finalStageSetting as IParams).id,\r\n      },\r\n      data: {\r\n        competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n        formatId: this.state.twoPhase === true ? (this.state.selectedCompetitionFormatPhase2 as IParams).value : (this.state.selectedCompetitionFormatPhase1 as IParams).value,\r\n        hasHomeMatch: this.state.twoPhase === true ? this.state.homeWayPhase2 : this.state.homeWayPhase1,\r\n        status: (this.props.finalStageSetting as IParams).status,\r\n        url: (this.props.finalStageSetting as IParams).url,\r\n      },\r\n    };\r\n    this.props.editFinalStageSetting(params);\r\n    if (this.state.twoPhase === true) {\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          id: (this.props.groupStageSetting as IParams).id,\r\n        },\r\n        data: {\r\n          competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n          formatId: (this.state.selectedCompetitionFormatPhase1 as IParams).value,\r\n          hasHomeMatch: this.state.homeWayPhase1,\r\n          status: (this.props.groupStageSetting as IParams).status,\r\n          url: (this.props.groupStageSetting as IParams).url,\r\n          advanceTeamPerTable: this.state.amountOfTeamsGoOnInAGroup,\r\n          maxTeamPerTable: this.state.amountOfTeamsInAGroup,\r\n        },\r\n      };\r\n      this.props.editGroupStageSetting(params);\r\n    }\r\n    params = {\r\n      path: '',\r\n      param: {\r\n        competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.updateSchedule(params);\r\n    this.setState({\r\n      onEditMode: false,\r\n    });\r\n  }\r\n\r\n  private OnChoose1 = () => {\r\n    this.setState({\r\n      onePhase: true,\r\n      twoPhase: false,\r\n    });\r\n  }\r\n\r\n  private OnChoose2 = () => {\r\n    this.setState({\r\n      onePhase: false,\r\n      twoPhase: true,\r\n    });\r\n  }\r\n\r\n  private onChangeCompetitionFormatPhase1 = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({\r\n      selectedCompetitionFormatPhase1: value,\r\n    });\r\n  }\r\n\r\n  private onChangeCompetitionFormatPhase2 = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({\r\n      selectedCompetitionFormatPhase2: value,\r\n    });\r\n  }\r\n\r\n  private onChangeHomeWayPhase1 = () => {\r\n    this.setState({\r\n      homeWayPhase1: !this.state.homeWayPhase1,\r\n    });\r\n  };\r\n\r\n  private onChangeHomeWayPhase2 = () => {\r\n    this.setState({\r\n      homeWayPhase2: !this.state.homeWayPhase2,\r\n    });\r\n  };\r\n\r\n  private onChangeAmountOfTeamsInAGroup = (value: string) => {\r\n    let tempValue = 0;\r\n    if (!isNaN(value as unknown as number)) {\r\n      tempValue = Number(value);\r\n    } else {\r\n      tempValue = 0;\r\n    }\r\n    this.setState({ amountOfTeamsInAGroup: tempValue, });\r\n  }\r\n\r\n  private onChangeAmountOfTeamsGoOnInAGroup = (value: string) => {\r\n    let tempValue = 0;\r\n    if (!isNaN(value as unknown as number)) {\r\n      tempValue = Number(value);\r\n    } else {\r\n      tempValue = 0;\r\n    }\r\n    this.setState({ amountOfTeamsGoOnInAGroup: tempValue, });\r\n  }\r\n\r\n  private validateAmountOfTeamsInAGroup = () => {\r\n    let amountOfTeamsInAGroupError = false;\r\n    let amountOfTeamsInAGroupErrorContent = '';\r\n    if (this.state.amountOfTeamsInAGroup < 2) {\r\n      amountOfTeamsInAGroupError = true;\r\n      amountOfTeamsInAGroupErrorContent = 'Số đội tối đa trong 1 bảng phải lớn hơn 1';\r\n    }\r\n\r\n    return { amountOfTeamsInAGroupError, amountOfTeamsInAGroupErrorContent };\r\n  }\r\n\r\n  private onBlurAmountOfTeamsInAGroup = () => {\r\n    const { amountOfTeamsInAGroupError, amountOfTeamsInAGroupErrorContent } = this.validateAmountOfTeamsInAGroup();\r\n    this.setState({\r\n      amountOfTeamsInAGroupError,\r\n      amountOfTeamsInAGroupErrorContent\r\n    });\r\n    if (amountOfTeamsInAGroupError === true) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  private validateAmountOfTeamsGoOnInAGroup = () => {\r\n    let amountOfTeamsGoOnInAGroupError = false;\r\n    let amountOfTeamsGoOnInAGroupErrorContent = '';\r\n    if (this.state.amountOfTeamsGoOnInAGroup < 1 || this.state.amountOfTeamsGoOnInAGroup >= this.state.amountOfTeamsInAGroup) {\r\n      amountOfTeamsGoOnInAGroupError = true;\r\n      amountOfTeamsGoOnInAGroupErrorContent = 'Số đội đi tiếp trong 1 bảng phải lớn hơn 0 và nhỏ hơn số đội tối đa';\r\n    }\r\n\r\n    return { amountOfTeamsGoOnInAGroupError, amountOfTeamsGoOnInAGroupErrorContent };\r\n  }\r\n\r\n  private onBlurAmountOfTeamsGoOnInAGroup = () => {\r\n    const { amountOfTeamsGoOnInAGroupError, amountOfTeamsGoOnInAGroupErrorContent } = this.validateAmountOfTeamsGoOnInAGroup();\r\n    this.setState({\r\n      amountOfTeamsGoOnInAGroupError,\r\n      amountOfTeamsGoOnInAGroupErrorContent\r\n    });\r\n    if (amountOfTeamsGoOnInAGroupError === true) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CompetitionInfo-Container\">\r\n        <div className=\"CompetitionInfo-content-container\">\r\n          <div className=\"CompetitionInfo-content-info-container\">\r\n            <div className=\"CompetitionInfo-content-info-basic-info-container\">\r\n              <div className=\"CompetitionInfo-content-info-basic-info-container-container\">\r\n                <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                  {this.state.onEditMode === false ?\r\n                    <p className=\"CompetitionInfo-name-text\">{this.props.competitionInfo != null && this.props.competitionInfo.Competition ? (this.props.competitionInfo.Competition as unknown as IParams).name : <Skeleton width={400} height={30} />}</p> :\r\n                    <TextInput style={{ width: 300 }} label={'Tên cuộc thi'} value={this.state.competitionFullName} onChangeText={this.onChangeCompetitionFullName} error={this.state.competitionFullNameError} errorContent={this.state.competitionFullNameErrorContent} />\r\n                  }\r\n                </div>\r\n                <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                  {\r\n                    this.state.onEditMode === false && <div className=\"CompetitionInfo-info-item\">\r\n                      <p>\r\n                        {this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Trạng thái: ${formatTournamentStatus((this.props.tournamentInfo.Tournament as unknown as IParams).status as string)}` : <Skeleton width={200} height={20} />}\r\n                      </p>\r\n                    </div>\r\n                  }\r\n                  <div className=\"CompetitionInfo-info-item\">\r\n                    {\r\n                      this.state.onEditMode === false ? <p>{this.props.sportInfo != null ? `Bộ môn thi đấu: ${this.props.sportInfo.fullName}` : <Skeleton width={200} height={20} />}</p> :\r\n                        (sportOptions.length > 0 &&\r\n                          <Select\r\n                            options={sportOptions}\r\n                            className=\"Select\"\r\n                            defaultValue={this.state.selectedSport}\r\n                            value={this.state.selectedSport}\r\n                            onChange={this.onChangeSport}\r\n                            maxMenuHeight={140}\r\n                          />)\r\n                    }\r\n                  </div>\r\n                </div>\r\n                {this.state.onEditMode === false && <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                  <div className=\"CompetitionInfo-info-item\">\r\n                    <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Thuộc giải: ${(this.props.tournamentInfo.Tournament as unknown as IParams).fullName}` : <Skeleton width={250} height={20} />}</p>\r\n                  </div>\r\n                </div>}\r\n                {\r\n                  this.state.onEditMode === true ?\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>Cách tổ chức giải:</p>\r\n                        <input type=\"radio\" name=\"competitionType\" onClick={this.OnChoose1} checked={this.state.onePhase} readOnly />\r\n                        <label onClick={this.OnChoose1}>1 giai đoạn</label>\r\n                        <input type=\"radio\" name=\"competitionType\" onClick={this.OnChoose2} checked={this.state.twoPhase} readOnly />\r\n                        <label onClick={this.OnChoose2}>2 giai đoạn</label>\r\n                      </div>\r\n                    </div> :\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>{this.props.competitionInfo != null && this.props.competitionInfo.Competition ? `Cách tổ chức giải: ${(this.props.competitionInfo.Competition as unknown as IParams).hasGroupStage === true ? '2 giai đoạn' : '1 giai đoạn'}` : <Skeleton width={250} height={20} />}</p>\r\n                      </div>\r\n                    </div>\r\n                }\r\n                {\r\n                  this.state.onEditMode === true ?\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>{`Thể thức${this.state.onePhase === true ? '' : ' vòng bảng'}`}</p>\r\n                        <Select\r\n                          options={competitionFormatOptions}\r\n                          className=\"Select\"\r\n                          defaultValue={this.state.selectedCompetitionFormatPhase1}\r\n                          value={this.state.selectedCompetitionFormatPhase1}\r\n                          onChange={this.onChangeCompetitionFormatPhase1}\r\n                          menuPlacement={'top'}\r\n                        />\r\n                      </div>\r\n                    </div> :\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>\r\n                          {\r\n                            this.props.competitionInfo != null && this.props.competitionInfo.Competition ?\r\n                              `${(this.props.competitionInfo.Competition as IParams).hasGroupStage === true ?\r\n                                'Thể thức vòng bảng: ' : 'Thể thức: '}\r\n                            ${\r\n                              this.props.groupStageSetting != null &&\r\n                                this.props.allFormats != null &&\r\n                                this.props.finalStageSetting != null &&\r\n                                this.props.allFormats.length > 0 &&\r\n                                this.props.allFormats.find(element => element.id === this.props.finalStageSetting!.formatId) != null &&\r\n                                this.props.allFormats.find(element => element.id === this.props.groupStageSetting!.formatId) != null ?\r\n                                ((this.props.competitionInfo.Competition as IParams).hasGroupStage !== true ? this.props.allFormats.find(element => element.id === this.props.finalStageSetting!.formatId)!.description :\r\n                                  this.props.allFormats.find(element => element.id === this.props.groupStageSetting!.formatId)!.description) : 'chưa có'\r\n                              }` : <Skeleton width={300} height={20} />}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                }\r\n                {\r\n                  this.state.onEditMode === true ?\r\n                    (this.state.selectedCompetitionFormatPhase1 != null &&\r\n                      (this.state.selectedCompetitionFormatPhase1 as IParams).value !== 2 &&\r\n                      <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"CompetitionInfo-info-item\">\r\n                          <label className=\"Checkbox-label\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={this.state.homeWayPhase1}\r\n                              onChange={this.onChangeHomeWayPhase1}\r\n                            />\r\n                            {`${(this.state.selectedCompetitionFormatPhase1 as IParams).value === 3 ? `${this.state.twoPhase === true ? 'Chơi lượt đi lượt về vòng bảng' : 'Chơi lượt đi lượt về'}` : `${this.state.twoPhase === true ? 'Có trận tranh hạng 3 vòng bảng' : 'Có trận tranh hạng 3'}`}`}\r\n                          </label>\r\n                        </div>\r\n                      </div>) :\r\n                    (this.props.competitionInfo != null && this.props.competitionInfo.Competition && ((this.props.competitionInfo.Competition as unknown as IParams).hasGroupStage === true ?\r\n                      this.props.groupStageSetting != null && this.props.groupStageSetting.formatId !== 2 && <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"CompetitionInfo-info-item\">\r\n                          <p>\r\n                            {\r\n                              this.props.groupStageSetting.hasHomeMatch === true ?\r\n                                (this.props.groupStageSetting.formatId === 1 ? 'Có trận tranh hạng 3 vòng bảng' : 'Có chơi lượt đi lượt về vòng bảng') :\r\n                                (this.props.groupStageSetting.formatId === 1 ? 'Không có trận tranh hạng 3 vòng bảng' : 'Không chơi lượt đi lượt về vòng bảng')\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                      </div> : (this.props.finalStageSetting != null && this.props.finalStageSetting.formatId !== 2 && <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"CompetitionInfo-info-item\">\r\n                          <p>\r\n                            {\r\n                              this.props.finalStageSetting.hasHomeMatch === true ?\r\n                                (this.props.finalStageSetting.formatId === 1 ? 'Có trận tranh hạng 3' : 'Có chơi lượt đi lượt về') :\r\n                                (this.props.finalStageSetting.formatId === 1 ? 'Không có trận tranh hạng 3' : 'Không chơi lượt đi lượt về')\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                      </div>)))\r\n                }\r\n                {this.state.onEditMode === true ? (this.state.twoPhase === true &&\r\n                  <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                    <div className=\"CompetitionInfo-info-item\">\r\n                      <TextInput\r\n                        style={{ width: 250 }}\r\n                        label={'Số đội trong 1 bảng (lớn hơn 1)'}\r\n                        value={this.state.amountOfTeamsInAGroup as unknown as string}\r\n                        onChangeText={this.onChangeAmountOfTeamsInAGroup}\r\n                        error={this.state.amountOfTeamsInAGroupError}\r\n                        errorContent={this.state.amountOfTeamsInAGroupErrorContent}\r\n                        onBlur={this.onBlurAmountOfTeamsInAGroup}\r\n                      />\r\n                    </div>\r\n                    <div className=\"CompetitionInfo-info-item\">\r\n                      <TextInput\r\n                        style={{ width: 300 }}\r\n                        label={'Số đội đi tiếp trong 1 bảng (lớn hơn 0)'}\r\n                        value={this.state.amountOfTeamsGoOnInAGroup as unknown as string}\r\n                        onChangeText={this.onChangeAmountOfTeamsGoOnInAGroup}\r\n                        error={this.state.amountOfTeamsGoOnInAGroupError}\r\n                        errorContent={this.state.amountOfTeamsGoOnInAGroupErrorContent}\r\n                        onBlur={this.onBlurAmountOfTeamsGoOnInAGroup}\r\n                      />\r\n                    </div>\r\n                  </div>) :\r\n                  (this.props.competitionInfo != null &&\r\n                    this.props.competitionInfo.Competition &&\r\n                    (this.props.competitionInfo.Competition as IParams).hasGroupStage === true &&\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>Số đội trong 1 bảng: {this.props.groupStageSetting != null ? this.props.groupStageSetting.maxTeamPerTable as number : 2}</p>\r\n                      </div>\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>Số đội đi tiếp trong 1 bảng: {this.props.groupStageSetting != null ? this.props.groupStageSetting.advanceTeamPerTable as number : 1}</p>\r\n                      </div>\r\n                    </div>)\r\n                }\r\n                {this.state.onEditMode === true ? (\r\n                  <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                    <div className=\"CompetitionInfo-info-item\">\r\n                      {this.state.twoPhase === true && <p>Thể thức vòng chung kết</p>}\r\n                      {this.state.twoPhase === true && <Select\r\n                        options={competitionFormatOptions}\r\n                        className=\"Select\"\r\n                        defaultValue={this.state.selectedCompetitionFormatPhase2}\r\n                        value={this.state.selectedCompetitionFormatPhase2}\r\n                        onChange={this.onChangeCompetitionFormatPhase2}\r\n                        menuPlacement={'top'}\r\n                      />}\r\n                    </div>\r\n                  </div>) :\r\n                  (this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && (this.props.competitionInfo.Competition as IParams).hasGroupStage === true &&\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>Thể thức vòng chung kết: {\r\n                          this.props.allFormats != null &&\r\n                          this.props.finalStageSetting != null &&\r\n                          this.props.allFormats.length > 0 &&\r\n                          this.props.allFormats.find(element => element.id === this.props.finalStageSetting!.formatId) != null &&\r\n                          this.props.allFormats.find(element => element.id === this.props.finalStageSetting!.formatId)!.description\r\n                        }\r\n                        </p>\r\n                      </div>\r\n                    </div>)\r\n                }\r\n                {this.state.onEditMode === false ?\r\n                  this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && (this.props.competitionInfo.Competition as IParams).hasGroupStage === true && this.props.finalStageSetting != null && this.props.finalStageSetting.formatId !== 2 && (this.props.finalStageSetting.formatId === 3 ?\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>{this.props.finalStageSetting.hasHomeMatch === true ? 'Chơi lượt đi lượt về vòng chung kết' : 'Không chơi lượt đi lượt về vòng chung kết'}</p>\r\n                      </div>\r\n                    </div> : <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>{this.props.finalStageSetting.hasHomeMatch === true ? 'Có trận tranh hạng 3 vòng chung kết' : 'Không có trận tranh hạng 3 vòng chung kết'}</p>\r\n                      </div>\r\n                    </div>)\r\n                  : (this.state.twoPhase === true && (this.state.selectedCompetitionFormatPhase2 as IParams).value !== 2 && ((this.state.selectedCompetitionFormatPhase2 as IParams).value === 3 ?\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <label className=\"Checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.homeWayPhase2}\r\n                            onChange={this.onChangeHomeWayPhase2}\r\n                          />\r\n                      Chơi lượt đi lượt về vòng chung kết\r\n                    </label>\r\n                      </div>\r\n                    </div> : <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <label className=\"Checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.homeWayPhase2}\r\n                            onChange={this.onChangeHomeWayPhase2}\r\n                          />\r\n                      Có trận tranh hạng 3 vòng chung kết\r\n                    </label>\r\n                      </div>\r\n                    </div>))}\r\n              </div>\r\n            </div>\r\n            {/* {(this.state.onEditMode === false\r\n              ?\r\n              <div className=\"CompetitionInfo-login-container\">\r\n                <div\r\n                  className=\"CompetitionInfo-login\"\r\n                  onClick={this.handleOpenEditCompetitionInfo}\r\n                >\r\n                  <h4 className=\"CompetitionInfo-login-text\">Chỉnh sửa thông tin</h4>\r\n                </div>\r\n              </div> : <div className=\"CompetitionInfo-login-container\">\r\n                <div\r\n                  className=\"CompetitionInfo-login\"\r\n                  onClick={this.handleCloseEditCompetitionInfo}\r\n                >\r\n                  <h4 className=\"CompetitionInfo-login-text\">Lưu chỉnh sửa</h4>\r\n                </div>\r\n              </div>)} */}\r\n            {this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && this.props.competitionInfo.Config != null && cookies.get(COOKIES_TYPE.AUTH_TOKEN) != null && ((this.props.competitionInfo.Config as unknown as IParams).canEdit !== true ?\r\n              ((this.props.competitionInfo.Competition as unknown as IParams).status === 'opening' &&\r\n                <div className=\"CompetitionInfo-login-container\">\r\n                  <div\r\n                    className=\"CompetitionInfo-login\"\r\n                    onClick={this.handleJoinTournament}\r\n                  >\r\n                    <h4 className=\"CompetitionInfo-login-text\">Tham gia cuộc thi</h4>\r\n                  </div>\r\n                </div>) :\r\n              (((this.props.competitionInfo.Competition as unknown as IParams).status === 'opening' || (this.props.competitionInfo.Competition as unknown as IParams).status === 'initializing')\r\n                && (this.state.onEditMode === false\r\n                  ?\r\n                  <div className=\"CompetitionInfo-login-container\">\r\n                    <div\r\n                      className=\"CompetitionInfo-login\"\r\n                      onClick={this.handleOpenEditCompetitionInfo}\r\n                    >\r\n                      <h4 className=\"CompetitionInfo-login-text\">Chỉnh sửa thông tin</h4>\r\n                    </div>\r\n                  </div> : <div className=\"CompetitionInfo-login-container\">\r\n                    <div\r\n                      className=\"CompetitionInfo-login\"\r\n                      onClick={this.handleCloseEditCompetitionInfo}\r\n                    >\r\n                      <h4 className=\"CompetitionInfo-login-text\">Lưu chỉnh sửa</h4>\r\n                    </div>\r\n                  </div>)))\r\n            }\r\n            <div className=\"CompetitionInfo-content-info-advanced-info-container\">\r\n              <CustomTab tabList={this.tabList} componentList={this.componentList} selectedIndex={0}></CustomTab>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CustomModal\r\n          customStyles={customStyles}\r\n          handleCloseModal={this.handleCloseModal}\r\n          showModal={this.state.showJoinModal}\r\n          handleConfirmModal={this.handleConfirmModal}\r\n        >\r\n          <div className={'TournamentInfo-join-tournament-form-competition-header'}>\r\n            <h3>Form đăng ký dự thi</h3>\r\n          </div>\r\n          <TextInput label={'Tên đội'} value={this.state.teamNameInForm} onChangeText={this.onChangeTeamNameInForm} error={this.state.teamNameInFormError} errorContent={this.state.teamNameInFormErrorContent} />\r\n          <TextInput label={'Tên ngắn đội'} value={this.state.teamShortNameInForm} onChangeText={this.onChangeTeamShortNameInForm} error={this.state.teamShortNameInFormError} errorContent={this.state.teamShortNameInFormErrorContent} />\r\n          <div className=\"TournamentInfo-join-tournament-container\">\r\n            <div className=\"TournamentInfo-join-tournament-item1\">\r\n              <p>Tên</p>\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item2\">\r\n              <p>Giới tính</p>\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item2\">\r\n              <p>Tuổi</p>\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item1\">\r\n              <p>Email</p>\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-setting\">\r\n            </div>\r\n          </div>\r\n          {this.state.listPlayerInForm.map((item, index) => <Player onDelete={this.onDeletePlayer} info={item} freeToEdit={true} key={index} index={index} />)}\r\n          <div className=\"TournamentInfo-join-tournament-container\">\r\n            <div className=\"TournamentInfo-join-tournament-item1\">\r\n              <input type={'text'} onChange={this.onChangePlayerNameInForm} value={this.state.playerNameInForm} />\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item2\">\r\n              <Select\r\n                options={genderOptions}\r\n                className=\"Select\"\r\n                defaultValue={this.state.playerGenderInForm}\r\n                value={this.state.playerGenderInForm}\r\n                onChange={this.onChangePlayerGenderInForm}\r\n              />\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item2\">\r\n              <input style={{ width: '70px' }} type={'text'} onChange={this.onChangePlayerAgeInForm} value={this.state.playerAgeInForm} />\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item1\">\r\n              <input type={'text'} onChange={this.onChangePlayerEmailInForm} value={this.state.playerEmailInForm} />\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-setting\">\r\n              <IoMdAddCircleOutline color={'white'} size={25} style={{ marginLeft: '3px', marginRight: '3px' }} onClick={this.addPlayer} />\r\n            </div>\r\n          </div>\r\n          {this.state.playerNameInFormError === true && <p style={{ color: 'red' }}>{this.state.playerNameInFormErrorContent}</p>}\r\n          {this.state.playerEmailInFormError === true && <p style={{ color: 'red' }}>{this.state.playerEmailInFormErrorContent}</p>}\r\n        </CustomModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    competitionInfo: state.competitionInfo,\r\n    tournamentInfo: state.tournamentInfo,\r\n    allSports: state.allSports,\r\n    sportInfo: state.sportInfo,\r\n    groupStageSetting: state.groupStageSetting,\r\n    finalStageSetting: state.finalStageSetting,\r\n    allFormats: state.allFormats,\r\n    allCompetitionByTournamentId: state.allCompetitionByTournamentId,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    editGroupStageSetting,\r\n    editFinalStageSetting,\r\n    editCompetition,\r\n    queryAllFormats,\r\n    queryCompetition,\r\n    queryTournamentInfo,\r\n    queryAllSports,\r\n    querySportInfo,\r\n    queryFinalStageSetting,\r\n    queryGroupStageSetting,\r\n    queryAllCompetitionsByTournamentId,\r\n    updateSchedule,\r\n  }\r\n)(CompetitionInfo);"]},"metadata":{},"sourceType":"module"}