{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\PendingTeams\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skeleton from 'react-loading-skeleton';\nimport PendingTeamsItem from 'components/PendingTeamsItem';\nimport { queryListPendingTeams } from './actions';\nimport './styles.css';\n\nclass PendingTeams extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestData = () => {\n      const params = {\n        path: '',\n        param: {\n          competitionId: this.props.id,\n          limit: 999\n        },\n        data: {}\n      };\n      this.props.queryListPendingTeams(params);\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.requestData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PendingTeams-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, this.props.listPendingTeam != null ? this.props.listPendingTeam.length > 0 ? this.props.listPendingTeam.map((item, index) => /*#__PURE__*/React.createElement(PendingTeamsItem, {\n      competitionInfo: this.props.competitionInfo,\n      tournamentInfo: this.props.tournamentInfo,\n      info: item,\n      index: index,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"Kh\\xF4ng t\\xECm th\\u1EA5y \\u0111\\u1ED9i n\\xE0o!\") : /*#__PURE__*/React.createElement(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listPendingTeam: state.listPendingTeam,\n    currentUserInfo: state.currentUserInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  queryListPendingTeams\n})(PendingTeams);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/PendingTeams/index.tsx"],"names":["React","connect","Skeleton","PendingTeamsItem","queryListPendingTeams","PendingTeams","Component","constructor","props","requestData","params","path","param","competitionId","id","limit","data","state","componentDidMount","render","listPendingTeam","length","map","item","index","competitionInfo","tournamentInfo","mapStateToProps","currentUserInfo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AAGA,SAASC,qBAAT,QAAsC,WAAtC;AACA,OAAO,cAAP;;AAiBA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAAmF;AACjFC,EAAAA,WAAW,CAACC,KAAD,EAA4B;AACrC,UAAMA,KAAN;;AADqC,SAU/BC,WAV+B,GAUjB,MAAM;AAC1B,YAAMC,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAE,EADO;AAEbC,QAAAA,KAAK,EAAE;AACLC,UAAAA,aAAa,EAAE,KAAKL,KAAL,CAAWM,EADrB;AAELC,UAAAA,KAAK,EAAE;AAFF,SAFM;AAMbC,QAAAA,IAAI,EAAE;AANO,OAAf;AAQA,WAAKR,KAAL,CAAWJ,qBAAX,CAAiCM,MAAjC;AACD,KApBsC;;AAErC,SAAKO,KAAL,GAAa,EAAb;AAED;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,WAAL;AACD;;AAcDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWY,eAAX,IAA8B,IAA9B,GAAsC,KAAKZ,KAAL,CAAWY,eAAX,CAA2BC,MAA3B,GAAoC,CAApC,GACrC,KAAKb,KAAL,CAAWY,eAAX,CAA2BE,GAA3B,CACE,CAACC,IAAD,EAAOC,KAAP,kBACA,oBAAC,gBAAD;AAAkB,MAAA,eAAe,EAAE,KAAKhB,KAAL,CAAWiB,eAA9C;AAA+D,MAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWkB,cAA1F;AAA0G,MAAA,IAAI,EAAEH,IAAhH;AAAsH,MAAA,KAAK,EAAEC,KAA7H;AAAoI,MAAA,GAAG,EAAEA,KAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADqC,gBAIjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAJL,gBAKC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADF;AAWD;;AAnCgF;;AAsCnF,MAAMG,eAAe,GAAIV,KAAD,IAAmB;AACzC,SAAO;AACLG,IAAAA,eAAe,EAAEH,KAAK,CAACG,eADlB;AAELQ,IAAAA,eAAe,EAAEX,KAAK,CAACW;AAFlB,GAAP;AAID,CALD;;AAOA,eAAe3B,OAAO,CACpB0B,eADoB,EAEpB;AAAEvB,EAAAA;AAAF,CAFoB,CAAP,CAGbC,YAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport PendingTeamsItem from 'components/PendingTeamsItem';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { queryListPendingTeams } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IPendingTeamsProps extends React.ClassAttributes<PendingTeams> {\r\n  id: number;\r\n  type: 'user' | 'competition' | 'tournament';\r\n  listPendingTeam: IParams[] | null;\r\n  tournamentInfo: IParams | null;\r\n  competitionInfo: IParams | null;\r\n  currentUserInfo: IParams | null;\r\n  addItem?: boolean;\r\n\r\n  queryListPendingTeams(param: IBigRequest): void;\r\n}\r\n\r\ninterface IPendingTeamsState {\r\n}\r\n\r\nclass PendingTeams extends React.Component<IPendingTeamsProps, IPendingTeamsState> {\r\n  constructor(props: IPendingTeamsProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        competitionId: this.props.id,\r\n        limit: 999,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryListPendingTeams(params);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PendingTeams-container\">\r\n        {this.props.listPendingTeam != null ? (this.props.listPendingTeam.length > 0 ?\r\n          this.props.listPendingTeam.map(\r\n            (item, index) =>\r\n            <PendingTeamsItem competitionInfo={this.props.competitionInfo} tournamentInfo={this.props.tournamentInfo} info={item} index={index} key={index} />\r\n          ) : <p>Không tìm thấy đội nào!</p>) :\r\n          <Skeleton />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listPendingTeam: state.listPendingTeam,\r\n    currentUserInfo: state.currentUserInfo,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryListPendingTeams }\r\n)(PendingTeams);"]},"metadata":{},"sourceType":"module"}