{"ast":null,"code":"var _jsxFileName = \"E:\\\\testFrontEnd\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\TournamentSetting\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ReduxBlockUi from 'react-block-ui/redux';\nimport { isAfter, isBefore } from 'date-fns';\nimport DatePicker from \"react-datepicker\";\nimport 'react-block-ui/style.css';\nimport TextInput from 'components/TextInput';\nimport { formatStringToDate } from 'utils/datetime';\nimport { checkUsernameExisted, setUsernameExistedDefault } from 'redux-saga/global-actions/CheckUsernameExisted-action';\nimport { CHECK_USERNAME_EXISTED, EDIT_TOURNAMENT_INFO } from 'redux-saga/actions';\nimport { CHECK_USERNAME_EXISTED_SUCCESS, CHECK_USERNAME_EXISTED_FAILED } from 'redux-saga/global-reducers/IsUsernameExisted-reducer';\nimport { editTournamentInfo } from './actions';\nimport { EDIT_TOURNAMENT_INFO_SUCCESS, EDIT_TOURNAMENT_INFO_FAILED } from './reducers';\nimport './styles.css';\n\nclass TournamentSetting extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addManager = username => {\n      this.setState({\n        listManager: this.state.listManager.concat(username)\n      });\n    };\n\n    this.onDeleteManager = itemm => {\n      this.setState({\n        listManager: this.state.listManager.filter(item => item !== itemm)\n      });\n    };\n\n    this.onChangeUsername = value => {\n      this.setState({\n        username: value\n      });\n    };\n\n    this.onChangeTournamentName = value => {\n      this.setState({\n        tournamentName: value\n      });\n    };\n\n    this.onChangeTournamentShortName = value => {\n      this.setState({\n        tournamentShortName: value\n      });\n    };\n\n    this.onChangeDescription = value => {\n      this.setState({\n        description: value\n      });\n    };\n\n    this.onChangeStartLocation = value => {\n      this.setState({\n        startLocation: value\n      });\n    };\n\n    this.onChangeEndLocation = value => {\n      this.setState({\n        endLocation: value\n      });\n    };\n\n    this.onChangeDonor = value => {\n      this.setState({\n        donor: value\n      });\n    };\n\n    this.validate = () => {\n      let usernameError = false;\n      let usernameErrorContent = '';\n\n      if (this.state.username.trim() === '') {\n        usernameError = true;\n        usernameErrorContent = 'Tên đăng nhập không được trống';\n      } else if (this.state.listManager.includes(this.state.username.trim())) {\n        usernameError = true;\n        usernameErrorContent = 'Người dùng này đã là quản lý';\n      } else {\n        const params = {\n          path: '',\n          param: {\n            username: this.state.username\n          },\n          data: {}\n        };\n        this.props.checkUsernameExisted(params);\n      }\n\n      return {\n        usernameError,\n        usernameErrorContent\n      };\n    };\n\n    this.handleChangeStartDate = value => {\n      if (isAfter(value, this.state.endDate)) {\n        this.setState({\n          startDate: value,\n          endDate: value\n        });\n      } else if (isBefore(value, this.state.startFormDate)) {\n        this.setState({\n          startDate: value,\n          startFormDate: value,\n          endFormDate: value\n        });\n      } else if (isBefore(value, this.state.endFormDate)) {\n        this.setState({\n          startDate: value,\n          endFormDate: value\n        });\n      } else {\n        this.setState({\n          startDate: value\n        });\n      }\n    };\n\n    this.handleChangeStartFormDate = value => {\n      if (isAfter(value, this.state.endFormDate)) {\n        this.setState({\n          startFormDate: value,\n          endFormDate: value\n        });\n      } else {\n        this.setState({\n          startFormDate: value\n        });\n      }\n    };\n\n    this.handleChangeEndDate = value => {\n      if (isBefore(value, this.state.startDate)) {\n        if (isBefore(value, this.state.startFormDate)) {\n          this.setState({\n            startFormDate: value,\n            endFormDate: value,\n            endDate: value,\n            startDate: value\n          });\n        } else if (isBefore(value, this.state.endFormDate)) {\n          this.setState({\n            endFormDate: value,\n            endDate: value,\n            startDate: value\n          });\n        } else {\n          this.setState({\n            startDate: value,\n            endDate: value\n          });\n        }\n      } else {\n        this.setState({\n          endDate: value\n        });\n      }\n    };\n\n    this.handleChangeEndFormDate = value => {\n      if (isBefore(value, this.state.startFormDate)) {\n        this.setState({\n          startFormDate: value,\n          endFormDate: value\n        });\n      } else {\n        this.setState({\n          endFormDate: value\n        });\n      }\n    };\n\n    this.validateInfo = () => {\n      let tournamentNameError = false;\n      let tournamentNameErrorContent = '';\n      let tournamentShortNameErrorContent = '';\n      let tournamentShortNameError = false;\n      let descriptionErrorContent = '';\n      let descriptionError = false;\n      let startLocationErrorContent = '';\n      let startLocationError = false;\n      let endLocationErrorContent = '';\n      let endLocationError = false;\n      let donorErrorContent = '';\n      let donorError = false;\n\n      if (this.state.tournamentName.trim() === '') {\n        tournamentNameError = true;\n        tournamentNameErrorContent = 'Tên giải không được trống';\n      }\n\n      if (this.state.tournamentShortName.trim() === '') {\n        tournamentShortNameError = true;\n        tournamentShortNameErrorContent = 'Tên ngắn giải không được trống';\n      }\n\n      return {\n        tournamentNameError,\n        tournamentNameErrorContent,\n        tournamentShortNameErrorContent,\n        tournamentShortNameError,\n        descriptionError,\n        descriptionErrorContent,\n        startLocationError,\n        startLocationErrorContent,\n        endLocationError,\n        endLocationErrorContent,\n        donorError,\n        donorErrorContent\n      };\n    };\n\n    this.handleSave = () => {\n      const {\n        tournamentNameError,\n        tournamentNameErrorContent,\n        tournamentShortNameErrorContent,\n        tournamentShortNameError,\n        descriptionError,\n        descriptionErrorContent,\n        startLocationError,\n        startLocationErrorContent,\n        endLocationError,\n        endLocationErrorContent,\n        donorError,\n        donorErrorContent\n      } = this.validateInfo();\n      this.setState({\n        tournamentNameError,\n        tournamentNameErrorContent,\n        tournamentShortNameErrorContent,\n        tournamentShortNameError,\n        descriptionError,\n        descriptionErrorContent,\n        startLocationError,\n        startLocationErrorContent,\n        endLocationError,\n        endLocationErrorContent,\n        donorError,\n        donorErrorContent\n      });\n\n      if (tournamentNameError === true || tournamentShortNameError === true || descriptionError === true || startLocationError === true || endLocationError === true || donorError === true) {\n        return;\n      }\n\n      const params = {\n        path: '',\n        param: {\n          id: this.props.tournamentId\n        },\n        data: {\n          fullName: this.state.tournamentName,\n          shortName: this.state.tournamentShortName,\n          description: this.state.description,\n          creatorId: this.props.tournamentInfo.creatorId,\n          openingLocation: this.state.startLocation,\n          closingLocation: this.state.endLocation,\n          openingTime: this.state.startDate,\n          closingTime: this.state.endDate,\n          donor: this.state.donor,\n          url: ''\n        }\n      };\n      this.props.editTournamentInfo(params);\n    };\n\n    const {\n      tournamentInfo\n    } = props;\n    this.state = {\n      listManager: ['Phạm Minh Hiếu', 'Phan Trọng Nhân', 'Đỗ Văn Công', '4', '5', '6', '7'],\n      donor: tournamentInfo.donor,\n      donorError: false,\n      donorErrorContent: '',\n      endLocation: tournamentInfo.closingLocation,\n      endLocationError: false,\n      endLocationErrorContent: '',\n      startLocation: tournamentInfo.openingLocation,\n      startLocationError: false,\n      startLocationErrorContent: '',\n      description: tournamentInfo.description,\n      descriptionError: false,\n      descriptionErrorContent: '',\n      tournamentShortName: tournamentInfo.shortName,\n      tournamentShortNameError: false,\n      tournamentShortNameErrorContent: '',\n      tournamentName: tournamentInfo.fullName,\n      tournamentNameError: false,\n      tournamentNameErrorContent: '',\n      username: '',\n      usernameError: false,\n      usernameErrorContent: '',\n      startDate: formatStringToDate(tournamentInfo.openingTime, 'yyyy-MM-dd HH:mm:ss'),\n      endDate: formatStringToDate(tournamentInfo.closingTime, 'yyyy-MM-dd HH:mm:ss'),\n      endFormDate: formatStringToDate(tournamentInfo.openingTime, 'yyyy-MM-dd HH:mm:ss'),\n      startFormDate: formatStringToDate(tournamentInfo.openingTime, 'yyyy-MM-dd HH:mm:ss')\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === true) {\n      this.addManager(this.state.username);\n    }\n\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === false) {\n      this.setState({\n        usernameError: true,\n        usernameErrorContent: 'Tài khoản không hợp lệ'\n      });\n    }\n\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === null) {\n      this.setState({\n        usernameError: true,\n        usernameErrorContent: 'Mất kết nối'\n      });\n    }\n\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === {}) {\n      this.setState({\n        usernameError: false,\n        usernameErrorContent: ''\n      });\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReduxBlockUi, {\n      tag: \"div\",\n      block: CHECK_USERNAME_EXISTED,\n      unblock: [CHECK_USERNAME_EXISTED_SUCCESS, CHECK_USERNAME_EXISTED_FAILED],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReduxBlockUi, {\n      tag: \"div\",\n      block: EDIT_TOURNAMENT_INFO,\n      unblock: [EDIT_TOURNAMENT_INFO_SUCCESS, EDIT_TOURNAMENT_INFO_FAILED],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentSetting-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentSetting-tournament-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"TournamentSetting-header-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 15\n      }\n    }, \"Th\\xF4ng tin gi\\u1EA3i \\u0111\\u1EA5u\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, \"T\\xEAn gi\\u1EA3i:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-tounamentName-container-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      value: this.state.tournamentName,\n      label: \"Nh\\u1EADp t\\xEAn c\\u1EE7a gi\\u1EA3i\",\n      error: this.state.tournamentNameError,\n      errorContent: this.state.tournamentNameErrorContent,\n      onChangeText: this.onChangeTournamentName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }, \"T\\xEAn ng\\u1EAFn:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-tounamentName-container-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      value: this.state.tournamentShortName,\n      label: \"Nh\\u1EADp t\\xEAn ng\\u1EAFn c\\u1EE7a gi\\u1EA3i\",\n      error: this.state.tournamentShortNameError,\n      errorContent: this.state.tournamentShortNameErrorContent,\n      onChangeText: this.onChangeTournamentShortName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, \"M\\xF4 t\\u1EA3:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-tounamentName-container-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      value: this.state.description,\n      label: \"Nh\\u1EADp m\\xF4 t\\u1EA3\",\n      error: this.state.descriptionError,\n      errorContent: this.state.descriptionErrorContent,\n      onChangeText: this.onChangeDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, \"\\u0110\\u1ECBa \\u0111i\\u1EC3m khai m\\u1EA1c:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-tounamentName-container-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      value: this.state.startLocation,\n      label: \"Nh\\u1EADp \\u0111\\u1ECBa \\u0111i\\u1EC3m\",\n      error: this.state.startLocationError,\n      errorContent: this.state.startLocationErrorContent,\n      onChangeText: this.onChangeStartLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container TournamentSetting-listManager-container1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"UserInfo-otherInfo-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, \"Ng\\xE0y khai m\\u1EA1c: \"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      dateFormat: \"dd/MM/yyyy\",\n      onChange: this.handleChangeStartDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, \"\\u0110\\u1ECBa \\u0111i\\u1EC3m b\\u1EBF m\\u1EA1c:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-tounamentName-container-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      value: this.state.endLocation,\n      label: \"Nh\\u1EADp \\u0111\\u1ECBa \\u0111i\\u1EC3m\",\n      error: this.state.endLocationError,\n      errorContent: this.state.endLocationErrorContent,\n      onChangeText: this.onChangeEndLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container TournamentSetting-listManager-container1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"UserInfo-otherInfo-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }\n    }, \"Ng\\xE0y b\\u1EBF m\\u1EA1c: \"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.endDate,\n      dateFormat: \"dd/MM/yyyy\",\n      onChange: this.handleChangeEndDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container TournamentSetting-listManager-container1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"UserInfo-otherInfo-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    }, \"Ng\\xE0y m\\u1EDF form \\u0111\\u0103ng k\\xFD: \"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.startFormDate,\n      dateFormat: \"dd/MM/yyyy\",\n      onChange: this.handleChangeStartFormDate,\n      maxDate: this.state.startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container TournamentSetting-listManager-container1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"UserInfo-otherInfo-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, \"Ng\\xE0y \\u0111\\xF3ng form \\u0111\\u0103ng k\\xFD: \"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.endFormDate,\n      dateFormat: \"dd/MM/yyyy\",\n      onChange: this.handleChangeEndFormDate,\n      maxDate: this.state.startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-listManager-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }, \"Nh\\xE0 t\\xE0i tr\\u1EE3:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentSetting-tounamentName-container-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      value: this.state.donor,\n      label: \"Nh\\u1EADp t\\xEAn nh\\xE0 t\\xE0i tr\\u1EE3\",\n      error: this.state.donorError,\n      errorContent: this.state.donorErrorContent,\n      onChangeText: this.onChangeDonor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentSetting-competition-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentSetting-button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentSetting-button\",\n      onClick: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"TournamentSetting-button-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 19\n      }\n    }, \"L\\u01B0u c\\xE0i \\u0111\\u1EB7t\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isUsernameExisted: state.isUsernameExisted\n  };\n};\n\nexport default connect(mapStateToProps, {\n  checkUsernameExisted,\n  setUsernameExistedDefault,\n  editTournamentInfo\n})(TournamentSetting);","map":{"version":3,"sources":["E:/testFrontEnd/frontEnd/SportTournamentSupportSystem/src/components/TournamentSetting/index.tsx"],"names":["React","connect","ReduxBlockUi","isAfter","isBefore","DatePicker","TextInput","formatStringToDate","checkUsernameExisted","setUsernameExistedDefault","CHECK_USERNAME_EXISTED","EDIT_TOURNAMENT_INFO","CHECK_USERNAME_EXISTED_SUCCESS","CHECK_USERNAME_EXISTED_FAILED","editTournamentInfo","EDIT_TOURNAMENT_INFO_SUCCESS","EDIT_TOURNAMENT_INFO_FAILED","TournamentSetting","Component","constructor","props","addManager","username","setState","listManager","state","concat","onDeleteManager","itemm","filter","item","onChangeUsername","value","onChangeTournamentName","tournamentName","onChangeTournamentShortName","tournamentShortName","onChangeDescription","description","onChangeStartLocation","startLocation","onChangeEndLocation","endLocation","onChangeDonor","donor","validate","usernameError","usernameErrorContent","trim","includes","params","path","param","data","handleChangeStartDate","endDate","startDate","startFormDate","endFormDate","handleChangeStartFormDate","handleChangeEndDate","handleChangeEndFormDate","validateInfo","tournamentNameError","tournamentNameErrorContent","tournamentShortNameErrorContent","tournamentShortNameError","descriptionErrorContent","descriptionError","startLocationErrorContent","startLocationError","endLocationErrorContent","endLocationError","donorErrorContent","donorError","handleSave","id","tournamentId","fullName","shortName","creatorId","tournamentInfo","openingLocation","closingLocation","openingTime","closingTime","url","shouldComponentUpdate","nextProps","nextState","isUsernameExisted","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReduxBlockUi from 'react-block-ui/redux';\r\nimport { isAfter, isBefore } from 'date-fns';\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-block-ui/style.css';\r\nimport TextInput from 'components/TextInput';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { formatStringToDate } from 'utils/datetime';\r\nimport { checkUsernameExisted, setUsernameExistedDefault } from 'redux-saga/global-actions/CheckUsernameExisted-action';\r\nimport { CHECK_USERNAME_EXISTED, EDIT_TOURNAMENT_INFO } from 'redux-saga/actions';\r\nimport { CHECK_USERNAME_EXISTED_SUCCESS, CHECK_USERNAME_EXISTED_FAILED } from 'redux-saga/global-reducers/IsUsernameExisted-reducer';\r\nimport { editTournamentInfo } from './actions';\r\nimport { EDIT_TOURNAMENT_INFO_SUCCESS, EDIT_TOURNAMENT_INFO_FAILED } from './reducers';\r\nimport './styles.css';\r\n\r\ninterface ITournamentSettingProps extends React.ClassAttributes<TournamentSetting> {\r\n  isUsernameExisted: boolean | null | {};\r\n  tournamentInfo: IParams;\r\n  tournamentId: number;\r\n\r\n  checkUsernameExisted(param: IBigRequest): void;\r\n  editTournamentInfo(param: IBigRequest): void;\r\n  setUsernameExistedDefault(): void;\r\n}\r\n\r\ninterface ITournamentSettingState {\r\n  listManager: string[];\r\n  username: string;\r\n  usernameError: boolean;\r\n  usernameErrorContent: string;\r\n  tournamentName: string;\r\n  tournamentNameError: boolean;\r\n  tournamentNameErrorContent: string;\r\n  tournamentShortName: string;\r\n  tournamentShortNameError: boolean;\r\n  tournamentShortNameErrorContent: string;\r\n  description: string;\r\n  descriptionError: boolean;\r\n  descriptionErrorContent: string;\r\n  startLocation: string;\r\n  startLocationError: boolean;\r\n  startLocationErrorContent: string;\r\n  endLocation: string;\r\n  endLocationError: boolean;\r\n  endLocationErrorContent: string;\r\n  donor: string;\r\n  donorError: boolean;\r\n  donorErrorContent: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  endFormDate: Date;\r\n  startFormDate: Date;\r\n}\r\n\r\nclass TournamentSetting extends React.Component<ITournamentSettingProps, ITournamentSettingState> {\r\n  constructor(props: ITournamentSettingProps) {\r\n    super(props);\r\n    const { tournamentInfo } = props;\r\n    this.state = {\r\n      listManager: ['Phạm Minh Hiếu', 'Phan Trọng Nhân', 'Đỗ Văn Công', '4', '5', '6', '7'],\r\n      donor: tournamentInfo.donor as string,\r\n      donorError: false,\r\n      donorErrorContent: '',\r\n      endLocation: tournamentInfo.closingLocation as string,\r\n      endLocationError: false,\r\n      endLocationErrorContent: '',\r\n      startLocation: tournamentInfo.openingLocation as string,\r\n      startLocationError: false,\r\n      startLocationErrorContent: '',\r\n      description: tournamentInfo.description as string,\r\n      descriptionError: false,\r\n      descriptionErrorContent: '',\r\n      tournamentShortName: tournamentInfo.shortName as string,\r\n      tournamentShortNameError: false,\r\n      tournamentShortNameErrorContent: '',\r\n      tournamentName: tournamentInfo.fullName as string,\r\n      tournamentNameError: false,\r\n      tournamentNameErrorContent: '',\r\n      username: '',\r\n      usernameError: false,\r\n      usernameErrorContent: '',\r\n      startDate: formatStringToDate(tournamentInfo.openingTime as string, 'yyyy-MM-dd HH:mm:ss'),\r\n      endDate: formatStringToDate(tournamentInfo.closingTime as string, 'yyyy-MM-dd HH:mm:ss'),\r\n      endFormDate: formatStringToDate(tournamentInfo.openingTime as string, 'yyyy-MM-dd HH:mm:ss'),\r\n      startFormDate: formatStringToDate(tournamentInfo.openingTime as string, 'yyyy-MM-dd HH:mm:ss'),\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ITournamentSettingProps, nextState: ITournamentSettingState) {\r\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === true) {\r\n      this.addManager(this.state.username);\r\n    }\r\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === false) {\r\n      this.setState({\r\n        usernameError: true,\r\n        usernameErrorContent: 'Tài khoản không hợp lệ',\r\n      });\r\n    }\r\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === null) {\r\n      this.setState({\r\n        usernameError: true,\r\n        usernameErrorContent: 'Mất kết nối',\r\n      });\r\n    }\r\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === {}) {\r\n      this.setState({\r\n        usernameError: false,\r\n        usernameErrorContent: '',\r\n      });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private addManager = (username: string) => {\r\n    this.setState({\r\n      listManager: this.state.listManager.concat(username),\r\n    });\r\n  }\r\n\r\n  private onDeleteManager = (itemm: string) => {\r\n    this.setState({\r\n      listManager: this.state.listManager.filter((item) => item !== itemm),\r\n    });\r\n  }\r\n\r\n  private onChangeUsername = (value: string) => {\r\n    this.setState({ username: value, });\r\n  }\r\n\r\n  private onChangeTournamentName = (value: string) => {\r\n    this.setState({ tournamentName: value, });\r\n  }\r\n\r\n  private onChangeTournamentShortName = (value: string) => {\r\n    this.setState({ tournamentShortName: value, });\r\n  }\r\n\r\n  private onChangeDescription = (value: string) => {\r\n    this.setState({ description: value, });\r\n  }\r\n\r\n  private onChangeStartLocation = (value: string) => {\r\n    this.setState({ startLocation: value, });\r\n  }\r\n\r\n  private onChangeEndLocation = (value: string) => {\r\n    this.setState({ endLocation: value, });\r\n  }\r\n\r\n  private onChangeDonor = (value: string) => {\r\n    this.setState({ donor: value, });\r\n  }\r\n\r\n  private validate = () => {\r\n    let usernameError = false;\r\n    let usernameErrorContent = '';\r\n    if (this.state.username.trim() === '') {\r\n      usernameError = true;\r\n      usernameErrorContent = 'Tên đăng nhập không được trống';\r\n    } else if (this.state.listManager.includes(this.state.username.trim())) {\r\n      usernameError = true;\r\n      usernameErrorContent = 'Người dùng này đã là quản lý';\r\n    } else {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          username: this.state.username,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.checkUsernameExisted(params);\r\n    }\r\n\r\n    return { usernameError, usernameErrorContent };\r\n  }\r\n\r\n  private handleChangeStartDate = (value: Date) => {\r\n    if (isAfter(value, this.state.endDate)) {\r\n      this.setState({\r\n        startDate: value,\r\n        endDate: value,\r\n      });\r\n    } else if (isBefore(value, this.state.startFormDate)) {\r\n      this.setState({\r\n        startDate: value,\r\n        startFormDate: value,\r\n        endFormDate: value,\r\n      });\r\n    } else if (isBefore(value, this.state.endFormDate)) {\r\n      this.setState({\r\n        startDate: value,\r\n        endFormDate: value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        startDate: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleChangeStartFormDate = (value: Date) => {\r\n    if (isAfter(value, this.state.endFormDate)) {\r\n      this.setState({\r\n        startFormDate: value,\r\n        endFormDate: value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        startFormDate: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleChangeEndDate = (value: Date) => {\r\n    if (isBefore(value, this.state.startDate)) {\r\n      if (isBefore(value, this.state.startFormDate)) {\r\n        this.setState({\r\n          startFormDate: value,\r\n          endFormDate: value,\r\n          endDate: value,\r\n          startDate: value,\r\n        });\r\n      } else if (isBefore(value, this.state.endFormDate)) {\r\n        this.setState({\r\n          endFormDate: value,\r\n          endDate: value,\r\n          startDate: value,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          startDate: value,\r\n          endDate: value,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        endDate: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleChangeEndFormDate = (value: Date) => {\r\n    if (isBefore(value, this.state.startFormDate)) {\r\n      this.setState({\r\n        startFormDate: value,\r\n        endFormDate: value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        endFormDate: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  private validateInfo = () => {\r\n    let tournamentNameError = false;\r\n    let tournamentNameErrorContent = '';\r\n    let tournamentShortNameErrorContent = '';\r\n    let tournamentShortNameError = false;\r\n    let descriptionErrorContent = '';\r\n    let descriptionError = false;\r\n    let startLocationErrorContent = '';\r\n    let startLocationError = false;\r\n    let endLocationErrorContent = '';\r\n    let endLocationError = false;\r\n    let donorErrorContent = '';\r\n    let donorError = false;\r\n    if (this.state.tournamentName.trim() === '') {\r\n      tournamentNameError = true;\r\n      tournamentNameErrorContent = 'Tên giải không được trống';\r\n    }\r\n    if (this.state.tournamentShortName.trim() === '') {\r\n      tournamentShortNameError = true;\r\n      tournamentShortNameErrorContent = 'Tên ngắn giải không được trống';\r\n    }\r\n\r\n    return { tournamentNameError, tournamentNameErrorContent, tournamentShortNameErrorContent, tournamentShortNameError, descriptionError, descriptionErrorContent, startLocationError, startLocationErrorContent, endLocationError, endLocationErrorContent, donorError, donorErrorContent };\r\n  }\r\n\r\n  private handleSave = () => {\r\n    const { tournamentNameError, tournamentNameErrorContent, tournamentShortNameErrorContent, tournamentShortNameError, descriptionError, descriptionErrorContent, startLocationError, startLocationErrorContent, endLocationError, endLocationErrorContent, donorError, donorErrorContent } = this.validateInfo();\r\n    this.setState({\r\n      tournamentNameError,\r\n      tournamentNameErrorContent,\r\n      tournamentShortNameErrorContent,\r\n      tournamentShortNameError,\r\n      descriptionError,\r\n      descriptionErrorContent,\r\n      startLocationError,\r\n      startLocationErrorContent,\r\n      endLocationError,\r\n      endLocationErrorContent,\r\n      donorError,\r\n      donorErrorContent\r\n    });\r\n    if (tournamentNameError === true || tournamentShortNameError === true || descriptionError === true || startLocationError === true || endLocationError === true || donorError === true) {\r\n      return;\r\n    }\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        id: this.props.tournamentId,\r\n      },\r\n      data: {\r\n        fullName: this.state.tournamentName,\r\n        shortName: this.state.tournamentShortName,\r\n        description: this.state.description,\r\n        creatorId: this.props.tournamentInfo.creatorId,\r\n        openingLocation: this.state.startLocation,\r\n        closingLocation: this.state.endLocation,\r\n        openingTime: this.state.startDate,\r\n        closingTime: this.state.endDate,\r\n        donor: this.state.donor,\r\n        url: '',\r\n      },\r\n    };\r\n\r\n    this.props.editTournamentInfo(params);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ReduxBlockUi\r\n        tag=\"div\"\r\n        block={CHECK_USERNAME_EXISTED}\r\n        unblock={[CHECK_USERNAME_EXISTED_SUCCESS, CHECK_USERNAME_EXISTED_FAILED]}\r\n      >\r\n        <ReduxBlockUi\r\n          tag=\"div\"\r\n          block={EDIT_TOURNAMENT_INFO}\r\n          unblock={[EDIT_TOURNAMENT_INFO_SUCCESS, EDIT_TOURNAMENT_INFO_FAILED]}\r\n        >\r\n          <div className=\"TournamentSetting-container\">\r\n            <div className=\"TournamentSetting-tournament-container\">\r\n              <p className=\"TournamentSetting-header-text\">Thông tin giải đấu</p>\r\n              {/* <div className={'TournamentSetting-listManager-container'}>\r\n                <p>Danh sách quản trị viên: </p>\r\n                <div className={'TournamentSetting-listManager-container-container'}>\r\n                  {this.state.listManager.map((item, index) => <div className={'TournamentSetting-manager-container'} key={index}>\r\n                    <p className={'TournamentSetting-manager-text'}>{item}</p>\r\n                    <div className={'TournamentSetting-icon-container'} onClick={() => { this.onDeleteManager(item) }}>\r\n                      <AiOutlineClose />\r\n                    </div>\r\n                  </div>)}\r\n                  <TextInput label='nhập username để thêm quản trị viên' error={this.state.usernameError} errorContent={this.state.usernameErrorContent} onChangeText={this.onChangeUsername} onHandleSubmit={this.handleAddManager} />\r\n                </div>\r\n              </div> */}\r\n              <div className={'TournamentSetting-listManager-container'}>\r\n                <p>Tên giải:</p>\r\n                <div className={'TournamentSetting-tounamentName-container-container'}>\r\n                  <TextInput value={this.state.tournamentName} label='Nhập tên của giải' error={this.state.tournamentNameError} errorContent={this.state.tournamentNameErrorContent} onChangeText={this.onChangeTournamentName} />\r\n                </div>\r\n              </div>\r\n              <div className={'TournamentSetting-listManager-container'}>\r\n                <p>Tên ngắn:</p>\r\n                <div className={'TournamentSetting-tounamentName-container-container'}>\r\n                  <TextInput value={this.state.tournamentShortName} label='Nhập tên ngắn của giải' error={this.state.tournamentShortNameError} errorContent={this.state.tournamentShortNameErrorContent} onChangeText={this.onChangeTournamentShortName} />\r\n                  {/*defaultValue */}\r\n                </div>\r\n              </div>\r\n              {/* <div className={'TournamentSetting-checkBox-container'}>\r\n              <label className=\"Checkbox-label\">\r\n                <input type=\"checkbox\" />\r\n            Đăng kí qua form\r\n          </label>\r\n            </div>\r\n            <div className={'TournamentSetting-checkBox-container'}>\r\n              <label className=\"Checkbox-label\">\r\n                <input type=\"checkbox\" />\r\n            Xắp xếp lịch cho 2 giải so le\r\n          </label>\r\n            </div> */}\r\n              <div className={'TournamentSetting-listManager-container'}>\r\n                <p>Mô tả:</p>\r\n                <div className={'TournamentSetting-tounamentName-container-container'}>\r\n                  <TextInput value={this.state.description} label='Nhập mô tả' error={this.state.descriptionError} errorContent={this.state.descriptionErrorContent} onChangeText={this.onChangeDescription} />\r\n                </div>\r\n              </div>\r\n              <div className={'TournamentSetting-listManager-container'}>\r\n                <p>Địa điểm khai mạc:</p>\r\n                <div className={'TournamentSetting-tounamentName-container-container'}>\r\n                  <TextInput value={this.state.startLocation} label='Nhập địa điểm' error={this.state.startLocationError} errorContent={this.state.startLocationErrorContent} onChangeText={this.onChangeStartLocation} />\r\n                </div>\r\n              </div>\r\n              <div className={'TournamentSetting-listManager-container TournamentSetting-listManager-container1'}>\r\n                <p className=\"UserInfo-otherInfo-text\">Ngày khai mạc: </p>\r\n                <DatePicker\r\n                  selected={this.state.startDate}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  onChange={this.handleChangeStartDate}\r\n                />\r\n              </div>\r\n              <div className={'TournamentSetting-listManager-container'}>\r\n                <p>Địa điểm bế mạc:</p>\r\n                <div className={'TournamentSetting-tounamentName-container-container'}>\r\n                  <TextInput value={this.state.endLocation} label='Nhập địa điểm' error={this.state.endLocationError} errorContent={this.state.endLocationErrorContent} onChangeText={this.onChangeEndLocation} />\r\n                </div>\r\n              </div>\r\n              <div className={'TournamentSetting-listManager-container TournamentSetting-listManager-container1'}>\r\n                <p className=\"UserInfo-otherInfo-text\">Ngày bế mạc: </p>\r\n                <DatePicker\r\n                  selected={this.state.endDate}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  onChange={this.handleChangeEndDate}\r\n                />\r\n              </div>\r\n              <div className={'TournamentSetting-listManager-container TournamentSetting-listManager-container1'}>\r\n                <p className=\"UserInfo-otherInfo-text\">Ngày mở form đăng ký: </p>\r\n                <DatePicker\r\n                  selected={this.state.startFormDate}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  onChange={this.handleChangeStartFormDate}\r\n                  maxDate={this.state.startDate}\r\n                />\r\n              </div>\r\n              <div className={'TournamentSetting-listManager-container TournamentSetting-listManager-container1'}>\r\n                <p className=\"UserInfo-otherInfo-text\">Ngày đóng form đăng ký: </p>\r\n                <DatePicker\r\n                  selected={this.state.endFormDate}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  onChange={this.handleChangeEndFormDate}\r\n                  maxDate={this.state.startDate}\r\n                />\r\n              </div>\r\n              <div className={'TournamentSetting-listManager-container'}>\r\n                <p>Nhà tài trợ:</p>\r\n                <div className={'TournamentSetting-tounamentName-container-container'}>\r\n                  <TextInput value={this.state.donor} label='Nhập tên nhà tài trợ' error={this.state.donorError} errorContent={this.state.donorErrorContent} onChangeText={this.onChangeDonor} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"TournamentSetting-competition-container\">\r\n              <div className=\"TournamentSetting-button-container\">\r\n                <div className=\"TournamentSetting-button\" onClick={this.handleSave}>\r\n                  <h4 className=\"TournamentSetting-button-text\">Lưu cài đặt</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ReduxBlockUi>\r\n      </ReduxBlockUi>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    isUsernameExisted: state.isUsernameExisted,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { checkUsernameExisted, setUsernameExistedDefault, editTournamentInfo }\r\n)(TournamentSetting);"]},"metadata":{},"sourceType":"module"}