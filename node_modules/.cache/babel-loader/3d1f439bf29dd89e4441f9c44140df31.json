{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\CompetitionSettingCompetitionsItem\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { MdDelete } from 'react-icons/md';\nimport './styles.css';\nimport { deleteCompetition } from './actions';\nimport { Link } from 'react-router-dom';\n\nclass CompetitionSettingCompetitionsItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDeleteCompetition = event => {\n      event.stopPropagation();\n      const confirm = window.confirm('Bạn có chắc chắn muốn xóa cuộc thi này?');\n\n      if (confirm === true) {\n        const params = {\n          path: '',\n          param: {\n            id: this.props.info.id\n          },\n          data: {\n            tournamentId: this.props.tournamentId\n          }\n        };\n        this.props.deleteCompetition(params);\n      }\n    };\n\n    this.state = {// competitionFormatError: false,\n      // competitionFormatErrorContent: '',\n      // competitionSportError: false,\n      // competitionSportErrorContent: '',\n      // competitionName: this.props.info.name as string,\n      // competitionNameError: false,\n      // competitionNameErrorContent: '',\n      // maxAmountTeamOfGroup: 0,\n      // maxAmountTeamOfGroupError: false,\n      // maxAmountTeamOfGroupErrorContent: '',\n      // seeMoreInfo: false,\n      // maxAmountOfTeamError: false,\n      // maxAmountOfTeamErrorContent: '',\n      // maxAmountMemberOfTeamError: false,\n      // maxAmountMemberOfTeamErrorContent: '',\n      // minAmountMemberOfTeamError: false,\n      // minAmountMemberOfTeamErrorContent: '',\n      // maxAmountOfTeam: 0,\n      // maxAmountMemberOfTeam: 0,\n      // minAmountMemberOfTeam: 0,\n      // limitAmountOfTeamchecked: false,\n      // onePhase: this.props.info.groupStage === false,\n      // twoPhase: this.props.info.groupStage === true,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // if (this.props.info !== nextProps.info) {\n    //   this.setState({\n    //     onEditMode: false,\n    //   });\n    // }\n    return true;\n  } // private handleSeeMore = () => {\n  //   if (this.state.onEditMode === true) {\n  //     return;\n  //   }\n  //   this.setState({\n  //     seeMoreInfo: !this.state.seeMoreInfo,\n  //   });\n  // }\n  // private onChangeLimitAmountOfTeam = () => {\n  //   this.setState({\n  //     limitAmountOfTeamchecked: !this.state.limitAmountOfTeamchecked,\n  //   });\n  // };\n  // private onChangeSport = (value: ValueType<OptionTypeBase>) => {\n  //   this.setState({\n  //     selectedSport: value,\n  //   });\n  // }\n  // private onChangeCompetitionName = (value: string) => {\n  //   this.setState({\n  //     competitionName: value,\n  //   });\n  // }\n  // private startEditMode = () => {\n  //   this.setState({\n  //     onEditMode: true,\n  //   });\n  // }\n  // private handleConfirmModal = () => {\n  // }\n  // private validate = () => {\n  //   let competitionNameError = false;\n  //   let competitionNameErrorContent = '';\n  //   let competitionFormatError = false;\n  //   let competitionFormatErrorContent = '';\n  //   let competitionSportError = false;\n  //   let competitionSportErrorContent = '';\n  //   if (this.state.competitionName.trim() === '') {\n  //     competitionNameError = true;\n  //     competitionNameErrorContent = 'Tên cuộc thi không được trống';\n  //   }\n  //   if (this.props.listCompetition!.filter((item) => item !== this.props.info).find(element => element.name === this.state.competitionName)) {\n  //     competitionNameError = true;\n  //     competitionNameErrorContent = 'Tên cuộc thi này đã tồn tại';\n  //   }\n  //   if (this.state.selectedCompetitionFormatPhase1 == null || (this.state.twoPhase && this.state.selectedCompetitionFormatPhase2 == null)) {\n  //     competitionFormatError = true;\n  //     competitionFormatErrorContent = 'Thể thức không được trống';\n  //   }\n  //   if (this.state.selectedSport == null) {\n  //     competitionSportError = true;\n  //     competitionSportErrorContent = 'Thể thức không được trống';\n  //   }\n  //   return { competitionNameError, competitionNameErrorContent, competitionFormatError, competitionFormatErrorContent, competitionSportError, competitionSportErrorContent };\n  // }\n  // private handleCloseModal = () => {\n  //   this.setState({\n  //     showModal: false,\n  //   });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionSettingCompetitionsItem-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionSettingCompetitionsItem-info-container-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionSettingCompetitionsItem-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/competition/${this.props.info.id}`,\n      style: {\n        textDecoration: 'none',\n        color: 'white'\n      },\n      target: '_blank',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionSettingCompetitionsItem-container-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionSettingCompetitionsItem-order-number-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionSettingCompetitionsItem-order-number-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, this.props.index + 1))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `CompetitionSettingCompetitionsItem-team-name-container`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, this.props.info.name))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionSettingCompetitionsItem-team-setting-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CompetitionSettingCompetitionsItem-team-setting-container-container\",\n      onClick: this.onDeleteCompetition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MdDelete, {\n      className: \"CompetitionSettingCompetitionsItem-team-setting-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default connect(null, {\n  deleteCompetition\n})(CompetitionSettingCompetitionsItem);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/CompetitionSettingCompetitionsItem/index.tsx"],"names":["React","connect","MdDelete","deleteCompetition","Link","CompetitionSettingCompetitionsItem","Component","constructor","props","onDeleteCompetition","event","stopPropagation","confirm","window","params","path","param","id","info","data","tournamentId","state","shouldComponentUpdate","nextProps","nextState","render","textDecoration","color","index","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { IParams, IBigRequest } from 'interfaces/common';\r\nimport './styles.css';\r\nimport { deleteCompetition } from './actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface ICompetitionSettingCompetitionsItemProps extends React.ClassAttributes<CompetitionSettingCompetitionsItem> {\r\n  info: IParams;\r\n  index: number;\r\n  listCompetition: IParams[] | null;\r\n  tournamentId: number;\r\n  tournamentInfo: IParams | null;\r\n\r\n  deleteCompetition(params: IBigRequest): void;\r\n}\r\n\r\ninterface ICompetitionSettingCompetitionsItemState {\r\n  // seeMoreInfo: boolean;\r\n  // maxAmountOfTeam: number;\r\n  // maxAmountOfTeamError: boolean;\r\n  // maxAmountOfTeamErrorContent: string;\r\n  // competitionName: string;\r\n  // competitionNameError: boolean;\r\n  // competitionNameErrorContent: string;\r\n  // maxAmountMemberOfTeam: number;\r\n  // minAmountMemberOfTeam: number;\r\n  // minAmountMemberOfTeamError: boolean;\r\n  // maxAmountMemberOfTeamError: boolean;\r\n  // maxAmountMemberOfTeamErrorContent: string;\r\n  // minAmountMemberOfTeamErrorContent: string;\r\n  // maxAmountTeamOfGroup: number;\r\n  // maxAmountTeamOfGroupError: boolean;\r\n  // maxAmountTeamOfGroupErrorContent: string;\r\n  // limitAmountOfTeamchecked: boolean;\r\n  // onePhase: boolean;\r\n  // twoPhase: boolean;\r\n  // competitionFormatError: boolean;\r\n  // competitionFormatErrorContent: string;\r\n  // competitionSportError: boolean;\r\n  // competitionSportErrorContent: string;\r\n}\r\n\r\nclass CompetitionSettingCompetitionsItem extends React.Component<ICompetitionSettingCompetitionsItemProps, ICompetitionSettingCompetitionsItemState> {\r\n  constructor(props: ICompetitionSettingCompetitionsItemProps) {\r\n    super(props);\r\n    this.state = {\r\n      // competitionFormatError: false,\r\n      // competitionFormatErrorContent: '',\r\n      // competitionSportError: false,\r\n      // competitionSportErrorContent: '',\r\n      // competitionName: this.props.info.name as string,\r\n      // competitionNameError: false,\r\n      // competitionNameErrorContent: '',\r\n      // maxAmountTeamOfGroup: 0,\r\n      // maxAmountTeamOfGroupError: false,\r\n      // maxAmountTeamOfGroupErrorContent: '',\r\n      // seeMoreInfo: false,\r\n      // maxAmountOfTeamError: false,\r\n      // maxAmountOfTeamErrorContent: '',\r\n      // maxAmountMemberOfTeamError: false,\r\n      // maxAmountMemberOfTeamErrorContent: '',\r\n      // minAmountMemberOfTeamError: false,\r\n      // minAmountMemberOfTeamErrorContent: '',\r\n      // maxAmountOfTeam: 0,\r\n      // maxAmountMemberOfTeam: 0,\r\n      // minAmountMemberOfTeam: 0,\r\n      // limitAmountOfTeamchecked: false,\r\n      // onePhase: this.props.info.groupStage === false,\r\n      // twoPhase: this.props.info.groupStage === true,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ICompetitionSettingCompetitionsItemProps, nextState: ICompetitionSettingCompetitionsItemState) {\r\n    // if (this.props.info !== nextProps.info) {\r\n    //   this.setState({\r\n    //     onEditMode: false,\r\n    //   });\r\n    // }\r\n    return true;\r\n  }\r\n\r\n  // private handleSeeMore = () => {\r\n  //   if (this.state.onEditMode === true) {\r\n  //     return;\r\n  //   }\r\n  //   this.setState({\r\n  //     seeMoreInfo: !this.state.seeMoreInfo,\r\n  //   });\r\n  // }\r\n\r\n  // private onChangeLimitAmountOfTeam = () => {\r\n  //   this.setState({\r\n  //     limitAmountOfTeamchecked: !this.state.limitAmountOfTeamchecked,\r\n  //   });\r\n  // };\r\n\r\n  // private onChangeSport = (value: ValueType<OptionTypeBase>) => {\r\n  //   this.setState({\r\n  //     selectedSport: value,\r\n  //   });\r\n  // }\r\n\r\n  // private onChangeCompetitionName = (value: string) => {\r\n  //   this.setState({\r\n  //     competitionName: value,\r\n  //   });\r\n  // }\r\n\r\n  // private startEditMode = () => {\r\n  //   this.setState({\r\n  //     onEditMode: true,\r\n  //   });\r\n  // }\r\n\r\n  // private handleConfirmModal = () => {\r\n  // }\r\n\r\n  // private validate = () => {\r\n  //   let competitionNameError = false;\r\n  //   let competitionNameErrorContent = '';\r\n  //   let competitionFormatError = false;\r\n  //   let competitionFormatErrorContent = '';\r\n  //   let competitionSportError = false;\r\n  //   let competitionSportErrorContent = '';\r\n  //   if (this.state.competitionName.trim() === '') {\r\n  //     competitionNameError = true;\r\n  //     competitionNameErrorContent = 'Tên cuộc thi không được trống';\r\n  //   }\r\n  //   if (this.props.listCompetition!.filter((item) => item !== this.props.info).find(element => element.name === this.state.competitionName)) {\r\n  //     competitionNameError = true;\r\n  //     competitionNameErrorContent = 'Tên cuộc thi này đã tồn tại';\r\n  //   }\r\n  //   if (this.state.selectedCompetitionFormatPhase1 == null || (this.state.twoPhase && this.state.selectedCompetitionFormatPhase2 == null)) {\r\n  //     competitionFormatError = true;\r\n  //     competitionFormatErrorContent = 'Thể thức không được trống';\r\n  //   }\r\n  //   if (this.state.selectedSport == null) {\r\n  //     competitionSportError = true;\r\n  //     competitionSportErrorContent = 'Thể thức không được trống';\r\n  //   }\r\n\r\n  //   return { competitionNameError, competitionNameErrorContent, competitionFormatError, competitionFormatErrorContent, competitionSportError, competitionSportErrorContent };\r\n  // }\r\n\r\n  // private handleCloseModal = () => {\r\n  //   this.setState({\r\n  //     showModal: false,\r\n  //   });\r\n  // }\r\n\r\n  private onDeleteCompetition = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    event.stopPropagation();\r\n    const confirm = window.confirm('Bạn có chắc chắn muốn xóa cuộc thi này?');\r\n    if (confirm === true) {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          id: this.props.info.id,\r\n        },\r\n        data: {\r\n          tournamentId: this.props.tournamentId,\r\n        },\r\n      }\r\n      this.props.deleteCompetition(params);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CompetitionSettingCompetitionsItem-info-container\">\r\n        <div className=\"CompetitionSettingCompetitionsItem-info-container-container\">\r\n          <div className=\"CompetitionSettingCompetitionsItem-container\">\r\n            <Link to={`/competition/${this.props.info.id}`} style={{ textDecoration: 'none', color: 'white' }} target={'_blank'} >\r\n              <div className=\"CompetitionSettingCompetitionsItem-container-container\">\r\n                <div className=\"CompetitionSettingCompetitionsItem-order-number-container\">\r\n                  <div className=\"CompetitionSettingCompetitionsItem-order-number-box\">\r\n                    <p>{this.props.index + 1}</p>\r\n                  </div>\r\n                </div>\r\n                <div className={`CompetitionSettingCompetitionsItem-team-name-container`}>\r\n                  <p>{this.props.info.name}</p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div className=\"CompetitionSettingCompetitionsItem-team-setting-container\">\r\n            <div className=\"CompetitionSettingCompetitionsItem-team-setting-container-container\" onClick={this.onDeleteCompetition}>\r\n              <MdDelete className=\"CompetitionSettingCompetitionsItem-team-setting-icon\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <CustomModal\r\n          customStyles={customStyles}\r\n          handleCloseModal={this.handleCloseModal}\r\n          showModal={this.state.showModal}\r\n          handleConfirmModal={this.handleConfirmModal}\r\n          confirmButtonVisible={false}\r\n        >\r\n          <Teams competitionInfo={this.props.info} tournamentInfo={this.props.tournamentInfo} id={this.props.info.id as number} type={'competition'} />\r\n        </CustomModal> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteCompetition, }\r\n)(CompetitionSettingCompetitionsItem);"]},"metadata":{},"sourceType":"module"}