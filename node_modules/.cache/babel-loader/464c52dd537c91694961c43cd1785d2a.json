{"ast":null,"code":"import { takeLatest, put } from 'redux-saga/effects';\nimport { cookies } from 'utils/cookies';\nimport { LOGOUT } from 'redux-saga/actions';\nimport { COOKIES_TYPE } from 'global';\nimport history from \"utils/history\";\nimport { LOGIN_FAILED } from 'screens/Login/reducers';\n\nfunction* doLogOut() {\n  try {\n    yield cookies.remove(COOKIES_TYPE.AUTH_TOKEN, {\n      path: '/'\n    });\n    yield put({\n      type: LOGIN_FAILED\n    });\n    yield history.push(\"/login\");\n  } catch (error) {}\n}\n\nexport default function* watchLogOut() {\n  yield takeLatest(LOGOUT, doLogOut);\n}","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/redux-saga/sagas/LogOut/logOut.ts"],"names":["takeLatest","put","cookies","LOGOUT","COOKIES_TYPE","history","LOGIN_FAILED","doLogOut","remove","AUTH_TOKEN","path","type","push","error","watchLogOut"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAML,OAAO,CAACM,MAAR,CAAeJ,YAAY,CAACK,UAA5B,EAAwC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAxC,CAAN;AACA,UAAMT,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAT;AAGA,UAAMD,OAAO,CAACO,IAAR,CAAa,QAAb,CAAN;AACD,GAND,CAME,OAAOC,KAAP,EAAc,CACf;AACF;;AAED,eAAe,UAAUC,WAAV,GAAwB;AACrC,QAAMd,UAAU,CAACG,MAAD,EAASI,QAAT,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\r\nimport { cookies } from 'utils/cookies';\r\nimport { LOGOUT } from 'redux-saga/actions';\r\nimport { COOKIES_TYPE } from 'global';\r\nimport history from \"utils/history\";\r\nimport { LOGIN_FAILED } from 'screens/Login/reducers';\r\n\r\nfunction* doLogOut() {\r\n  try {\r\n    yield cookies.remove(COOKIES_TYPE.AUTH_TOKEN, { path: '/' });\r\n    yield put({\r\n      type: LOGIN_FAILED,\r\n    });\r\n    yield history.push(\"/login\");\r\n  } catch (error) {\r\n  }\r\n}\r\n\r\nexport default function* watchLogOut() {\r\n  yield takeLatest(LOGOUT, doLogOut);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}