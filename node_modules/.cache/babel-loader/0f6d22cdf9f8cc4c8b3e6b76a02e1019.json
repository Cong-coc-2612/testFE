{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\AllUsers\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skeleton from 'react-loading-skeleton';\nimport 'pagination.css';\nimport UserOverview from 'components/UserOverview';\nimport Paging from 'components/Paging';\nimport { searchUsers } from 'components/Header/actions';\nimport { queryListUsers } from './actions';\nimport './styles.css';\n\nclass AllUsers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestData = () => {\n      const params = {\n        path: '',\n        param: {\n          page: this.state.activePage,\n          limit: 3,\n          searchString: this.props.globalSearchString\n        },\n        data: {}\n      };\n      this.props.queryListUsers(params);\n    };\n\n    this.onChangeSelectedPage = pageNumber => {\n      this.setState({\n        activePage: pageNumber\n      }, () => {\n        if (this.props.globalSearchString !== '') {\n          const params = {\n            path: '',\n            param: {\n              page: pageNumber,\n              limit: 3,\n              searchString: this.props.globalSearchString\n            },\n            data: {}\n          };\n          this.props.searchUsers(params);\n        } else {\n          this.requestData();\n        }\n      });\n    };\n\n    this.state = {\n      activePage: 1\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.globalSearchString !== nextProps.globalSearchString && nextProps.globalSearchString === '') {\n      this.requestData();\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    if (this.props.globalSearchString === '') {\n      this.requestData();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AllUsers-container-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"AllUsers-header-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng\"), this.props.globalSearchString !== '' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"AllUsers-search-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 50\n      }\n    }, \"K\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm cho: \\\"\", this.props.globalSearchString, \"\\\"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AllUsers-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, this.props.listUsers && this.props.listUsers.Users ? this.props.listUsers.Users.length > 0 ? this.props.listUsers.Users.map((item, index) => /*#__PURE__*/React.createElement(UserOverview, {\n      info: item,\n      index: index,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 30\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 88\n      }\n    }, \"Kh\\xF4ng t\\xECm th\\u1EA5y k\\u1EBFt qu\\u1EA3 n\\xE0o!\") : /*#__PURE__*/React.createElement(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Paging, {\n      currentPage: this.state.activePage,\n      totalPage: this.props.listUsers != null ? this.props.listUsers.TotalPage : 0,\n      onChangeSelectedPage: this.onChangeSelectedPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listUsers: state.listUsers,\n    globalSearchString: state.globalSearchString\n  };\n};\n\nexport default connect(mapStateToProps, {\n  queryListUsers,\n  searchUsers\n})(AllUsers);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/AllUsers/index.tsx"],"names":["React","connect","Skeleton","UserOverview","Paging","searchUsers","queryListUsers","AllUsers","Component","constructor","props","requestData","params","path","param","page","state","activePage","limit","searchString","globalSearchString","data","onChangeSelectedPage","pageNumber","setState","shouldComponentUpdate","nextProps","nextState","componentDidMount","render","listUsers","Users","length","map","item","index","TotalPage","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'pagination.css';\r\nimport UserOverview from 'components/UserOverview';\r\nimport Paging from 'components/Paging';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { searchUsers } from 'components/Header/actions';\r\nimport { queryListUsers } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IAllUsersProps extends React.ClassAttributes<AllUsers> {\r\n  listUsers: IParams | null;\r\n  globalSearchString: string;\r\n\r\n  queryListUsers(param: IBigRequest): void;\r\n  searchUsers(param: IBigRequest): void;\r\n}\r\n\r\ninterface IAllUsersState {\r\n  activePage: number;\r\n}\r\n\r\nclass AllUsers extends React.Component<IAllUsersProps, IAllUsersState> {\r\n  constructor(props: IAllUsersProps) {\r\n    super(props);\r\n    this.state = {\r\n      activePage: 1,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IAllUsersProps, nextState: IAllUsersState) {\r\n    if (this.props.globalSearchString !== nextProps.globalSearchString && nextProps.globalSearchString === '') {\r\n      this.requestData();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.globalSearchString === '') {\r\n      this.requestData();\r\n    }\r\n  }\r\n  \r\n  private requestData = () => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        page: this.state.activePage,\r\n        limit: 3,\r\n        searchString: this.props.globalSearchString,\r\n      },\r\n      data: {},\r\n    }\r\n    this.props.queryListUsers(params);\r\n  }\r\n\r\n  private onChangeSelectedPage = (pageNumber: number) => {\r\n    this.setState({ activePage: pageNumber }, () => {\r\n      if (this.props.globalSearchString !== '') {\r\n        const params = {\r\n          path: '',\r\n          param: {\r\n            page: pageNumber,\r\n            limit: 3,\r\n            searchString: this.props.globalSearchString,\r\n          },\r\n          data: {},\r\n        };\r\n        this.props.searchUsers(params);\r\n      } else {\r\n        this.requestData();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AllUsers-container-container\">\r\n        <p className=\"AllUsers-header-text\">Danh sách người dùng</p>\r\n        {this.props.globalSearchString !== '' && <p className=\"AllUsers-search-text\">Kết quả tìm kiếm cho: \"{this.props.globalSearchString}\"</p>}\r\n        <div className=\"AllUsers-container\">\r\n          {this.props.listUsers && this.props.listUsers.Users ? ((this.props.listUsers.Users as unknown as IParams[]).length > 0 ? (this.props.listUsers.Users as unknown as IParams[]).map(\r\n            (item, index) => <UserOverview info={item} index={index} key={index} />) : <p>Không tìm thấy kết quả nào!</p>) :\r\n            <Skeleton />\r\n          }\r\n        </div>\r\n        <Paging currentPage={this.state.activePage} totalPage={this.props.listUsers != null ? this.props.listUsers.TotalPage as number : 0} onChangeSelectedPage={this.onChangeSelectedPage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listUsers: state.listUsers,\r\n    globalSearchString: state.globalSearchString,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryListUsers, searchUsers }\r\n)(AllUsers);"]},"metadata":{},"sourceType":"module"}