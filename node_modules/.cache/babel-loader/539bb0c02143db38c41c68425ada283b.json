{"ast":null,"code":"var _jsxFileName = \"E:\\\\testFrontEnd\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\TournamentReport\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-block-ui/style.css';\nimport Paging from 'components/Paging';\nimport TournamentReportItem from 'components/TournamentReportItem';\nimport { queryTournamentReport } from './actions';\nimport './styles.css';\n\nclass TournamentReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestData = (page = 1) => {\n      const params = {\n        path: '',\n        param: {\n          tournamentId: this.props.tournamentId\n        },\n        data: {\n          page,\n          limit: 5\n        }\n      };\n      this.props.queryTournamentReport(params);\n    };\n\n    this.onChangeSelectedPage = pageNumber => {\n      this.requestData(pageNumber);\n      this.setState({\n        activePage: pageNumber\n      });\n    };\n\n    this.state = {\n      activePage: 1\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  componentDidMount() {\n    this.requestData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentReport-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, this.props.listTournamentReport != null && this.props.listTournamentReport.Reports != null ? this.props.listTournamentReport.Reports.length > 0 ? this.props.listTournamentReport.Reports.map((item, index) => /*#__PURE__*/React.createElement(TournamentReportItem, {\n      info: item,\n      index: index,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 30\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, \"Kh\\xF4ng c\\xF3 b\\xE1o c\\xE1o n\\xE0o!\") : /*#__PURE__*/React.createElement(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Paging, {\n      currentPage: this.state.activePage,\n      totalPage: this.props.listTournamentReport != null ? this.props.listTournamentReport.TotalPage : 0,\n      onChangeSelectedPage: this.onChangeSelectedPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listTournamentReport: state.listTournamentReport\n  };\n};\n\nexport default connect(mapStateToProps, {\n  queryTournamentReport\n})(TournamentReport);","map":{"version":3,"sources":["E:/testFrontEnd/frontEnd/SportTournamentSupportSystem/src/components/TournamentReport/index.tsx"],"names":["React","connect","Skeleton","Paging","TournamentReportItem","queryTournamentReport","TournamentReport","Component","constructor","props","requestData","page","params","path","param","tournamentId","data","limit","onChangeSelectedPage","pageNumber","setState","activePage","state","shouldComponentUpdate","nextProps","nextState","componentDidMount","render","listTournamentReport","Reports","length","map","item","index","TotalPage","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AAGA,SAASC,qBAAT,QAAsC,WAAtC;AACA,OAAO,cAAP;;AAcA,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+F;AAC7FC,EAAAA,WAAW,CAACC,KAAD,EAAgC;AACzC,UAAMA,KAAN;;AADyC,SAenCC,WAfmC,GAerB,CAACC,IAAI,GAAG,CAAR,KAAc;AAClC,YAAMC,MAAmB,GAAG;AAC1BC,QAAAA,IAAI,EAAE,EADoB;AAE1BC,QAAAA,KAAK,EAAE;AACLC,UAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWM;AADpB,SAFmB;AAK1BC,QAAAA,IAAI,EAAE;AACJL,UAAAA,IADI;AAEJM,UAAAA,KAAK,EAAE;AAFH;AALoB,OAA5B;AAUA,WAAKR,KAAL,CAAWJ,qBAAX,CAAiCO,MAAjC;AACD,KA3B0C;;AAAA,SA6BnCM,oBA7BmC,GA6BXC,UAAD,IAAwB;AACrD,WAAKT,WAAL,CAAiBS,UAAjB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF;AAAd,OAAd;AACD,KAhC0C;;AAEzC,SAAKG,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAEDE,EAAAA,qBAAqB,CAACC,SAAD,EAAoCC,SAApC,EAAuE;AAC1F,WAAO,IAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,WAAL;AACD;;AAqBDiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWmB,oBAAX,IAAmC,IAAnC,IAA2C,KAAKnB,KAAL,CAAWmB,oBAAX,CAAgCC,OAAhC,IAA2C,IAAtF,GAA+F,KAAKpB,KAAL,CAAWmB,oBAAX,CAAgCC,OAAjC,CAAuDC,MAAvD,GAAgE,CAAhE,GAC5F,KAAKrB,KAAL,CAAWmB,oBAAX,CAAgCC,OAAjC,CAAuDE,GAAvD,CACE,CAACC,IAAD,EAAOC,KAAP,kBAAiB,oBAAC,oBAAD;AAAsB,MAAA,IAAI,EAAED,IAA5B;AAAkC,MAAA,KAAK,EAAEC,KAAzC;AAAgD,MAAA,GAAG,EAAEA,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,CAD6F,gBAGzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAHL,gBAIC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAOE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWD,UAAhC;AAA4C,MAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWmB,oBAAX,IAAmC,IAAnC,GAA0C,KAAKnB,KAAL,CAAWmB,oBAAX,CAAgCM,SAA1E,GAAgG,CAAvJ;AAA0J,MAAA,oBAAoB,EAAE,KAAKhB,oBAArL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AA/C4F;;AAkD/F,MAAMiB,eAAe,GAAIb,KAAD,IAAmB;AACzC,SAAO;AACLM,IAAAA,oBAAoB,EAAEN,KAAK,CAACM;AADvB,GAAP;AAGD,CAJD;;AAMA,eAAe3B,OAAO,CACpBkC,eADoB,EAEpB;AAAE9B,EAAAA;AAAF,CAFoB,CAAP,CAGbC,gBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-block-ui/style.css';\r\nimport Paging from 'components/Paging';\r\nimport TournamentReportItem from 'components/TournamentReportItem';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { queryTournamentReport } from './actions';\r\nimport './styles.css';\r\n\r\ninterface ITournamentReportProps extends React.ClassAttributes<TournamentReport> {\r\n  tournamentInfo: IParams;\r\n  tournamentId: number;\r\n  listTournamentReport: IParams | null;\r\n\r\n  queryTournamentReport(params: IBigRequest): void;\r\n}\r\n\r\ninterface ITournamentReportState {\r\n  activePage: number;\r\n}\r\n\r\nclass TournamentReport extends React.Component<ITournamentReportProps, ITournamentReportState> {\r\n  constructor(props: ITournamentReportProps) {\r\n    super(props);\r\n    this.state = {\r\n      activePage: 1,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ITournamentReportProps, nextState: ITournamentReportState) {\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = (page = 1) => {\r\n    const params: IBigRequest = {\r\n      path: '',\r\n      param: {\r\n        tournamentId: this.props.tournamentId,\r\n      },\r\n      data: {\r\n        page,\r\n        limit: 5,\r\n      },\r\n    };\r\n    this.props.queryTournamentReport(params);\r\n  }\r\n\r\n  private onChangeSelectedPage = (pageNumber: number) => {\r\n    this.requestData(pageNumber);\r\n    this.setState({ activePage: pageNumber });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'TournamentReport-container'}>\r\n        {this.props.listTournamentReport != null && this.props.listTournamentReport.Reports != null ? ((this.props.listTournamentReport.Reports as IParams[]).length > 0 ?\r\n          (this.props.listTournamentReport.Reports as IParams[]).map(\r\n            (item, index) => <TournamentReportItem info={item} index={index} key={index} />\r\n          ) : <p>Không có báo cáo nào!</p>) :\r\n          <Skeleton />\r\n        }\r\n        <Paging currentPage={this.state.activePage} totalPage={this.props.listTournamentReport != null ? this.props.listTournamentReport.TotalPage as number : 0} onChangeSelectedPage={this.onChangeSelectedPage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listTournamentReport: state.listTournamentReport,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryTournamentReport, }\r\n)(TournamentReport);"]},"metadata":{},"sourceType":"module"}