{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\screens\\\\TournamentInfo\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { IoMdAddCircleOutline } from 'react-icons/io';\nimport ReduxBlockUi from 'react-block-ui/redux';\nimport Select from 'react-select';\nimport Skeleton from 'react-loading-skeleton';\nimport { AiFillCamera } from 'react-icons/ai';\nimport CustomTab from 'components/CustomTab';\nimport CustomModal from 'components/CustomModal';\nimport TournamentListTeam from 'components/TournamentListTeam';\nimport TournamentSetting from 'components/TournamentSetting';\nimport CompetitionsSetting from 'components/CompetitionsSetting';\nimport Player from 'components/Player';\nimport TournamentReport from 'components/TournamentReport';\nimport TextInput from 'components/TextInput';\nimport { COOKIES_TYPE } from 'global';\nimport { cookies } from 'utils/cookies';\nimport { formatDateToDisplay } from 'utils/datetime';\nimport config from 'config';\nimport { onEditBracketMode, deleteListSelectingTeam } from 'components/BracketTeam/actions';\nimport { queryAllCompetitionsByTournamentId } from 'components/CompetitionsSetting/actions';\nimport { registTeam, reportViolation, updateBackgroundTournament, updateAvatarTournament, queryTournamentInfo, querySportsByTournament, finishTournament, queryCompetitionsBySportAndTournament, startTournament } from './actions';\nimport { START_TOURNAMENT, FINISH_TOURNAMENT, REPORT_VIOLATION } from 'redux-saga/actions';\nimport { START_TOURNAMENT_SUCCESS, START_TOURNAMENT_FAILED, FINISH_TOURNAMENT_SUCCESS, FINISH_TOURNAMENT_FAILED, REPORT_VIOLATION_SUCCESS, REPORT_VIOLATION_FAILED } from './reducers';\nimport './styles.css';\nlet allCompetitionOptions = [];\nconst customStyles = {\n  content: {\n    top: '5%',\n    left: '15%',\n    right: '15%',\n    bottom: '5%',\n    backgroundColor: '#2b303d',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  overlay: {\n    zIndex: 100001\n  }\n};\nconst customStyles2 = {\n  content: {\n    top: '15%',\n    left: '15%',\n    right: '15%',\n    bottom: '15%',\n    backgroundColor: '#2b303d',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  overlay: {\n    zIndex: 100001\n  }\n};\nconst genderOptions = [{\n  value: true,\n  label: 'Nam'\n}, {\n  value: false,\n  label: 'Nữ'\n}];\n\nclass TournamentInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tabList = [];\n    this.componentList = [];\n\n    this.requestData = () => {\n      let params = {\n        path: '',\n        param: {\n          id: Number(this.props.routerInfo.match.params.tournamentId)\n        },\n        data: {}\n      };\n      this.props.queryTournamentInfo(params);\n      params = {\n        path: '',\n        param: {\n          tournamentId: Number(this.props.routerInfo.match.params.tournamentId),\n          limit: 99\n        },\n        data: {}\n      };\n      this.props.queryAllCompetitionsByTournamentId(params);\n    };\n\n    this.onChangeCompetitionSetting = () => {\n      this.setState({\n        selectedCompetitionInForm: null\n      });\n    };\n\n    this.onChangeSelectedCompetitionInForm = value => {\n      this.setState({\n        selectedCompetitionInForm: value\n      });\n    };\n\n    this.updateBackground = selectorFiles => {\n      if (selectorFiles !== null && selectorFiles.length > 0) {\n        const params = {\n          path: '',\n          param: {\n            id: Number(this.props.routerInfo.match.params.tournamentId),\n            file: selectorFiles\n          },\n          data: {}\n        };\n        this.props.updateBackgroundTournament(params);\n      }\n    };\n\n    this.updateAvatar = selectorFiles => {\n      if (selectorFiles !== null && selectorFiles.length > 0) {\n        const params = {\n          path: '',\n          param: {\n            id: Number(this.props.routerInfo.match.params.tournamentId),\n            file: selectorFiles\n          },\n          data: {}\n        };\n        this.props.updateAvatarTournament(params);\n      }\n    };\n\n    this.handleStartTournament = () => {\n      const confirm = window.confirm('Khi bắt đầu giải bạn sẽ không thể thay đổi thông tin các cuộc thi và các đội nữa, bạn có chắc chắn?');\n\n      if (confirm === true) {\n        const params = {\n          path: '',\n          param: {\n            id: Number(this.props.routerInfo.match.params.tournamentId)\n          },\n          data: {}\n        };\n        this.props.startTournament(params);\n      }\n    };\n\n    this.handleJoinTournament = () => {\n      this.setState({\n        showJoinModal: true\n      });\n    };\n\n    this.handleReportViolate = () => {\n      this.setState({\n        showReportModal: true\n      });\n    };\n\n    this.handleCloseModal = () => {\n      const confirm = window.confirm('Bạn có chắc chắn muốn hủy form đăng ký?');\n\n      if (confirm === true) {\n        this.setState({\n          showJoinModal: false\n        });\n      }\n    };\n\n    this.handleCloseReportModal = () => {\n      const confirm = window.confirm('Bạn có chắc chắn muốn hủy form báo cáo?');\n\n      if (confirm === true) {\n        this.setState({\n          showReportModal: false,\n          subjectForm: '',\n          subjectFormError: false,\n          subjectFormErrorContent: '',\n          detailReportForm: '',\n          detailReportFormError: false,\n          detailReportFormErrorContent: ''\n        });\n      }\n    };\n\n    this.validateForm = () => {\n      let selectedCompetitionInFormError = false;\n      let selectedCompetitionInFormErrorContent = '';\n      let teamNameInFormError = false;\n      let teamNameInFormErrorContent = '';\n      let teamShortNameInFormErrorContent = '';\n      let teamShortNameInFormError = false;\n\n      if (this.state.selectedCompetitionInForm == null) {\n        selectedCompetitionInFormError = true;\n        selectedCompetitionInFormErrorContent = 'Bạn phải chọn giải đấu muốn tham gia';\n      }\n\n      if (this.state.teamNameInForm.trim() === '') {\n        teamNameInFormError = true;\n        teamNameInFormErrorContent = 'Tên đội không được trống';\n      }\n\n      if (this.state.teamShortNameInForm.trim() === '') {\n        teamShortNameInFormError = true;\n        teamShortNameInFormErrorContent = 'Tên ngắn đội không được trống';\n      }\n\n      return {\n        selectedCompetitionInFormError,\n        selectedCompetitionInFormErrorContent,\n        teamNameInFormError,\n        teamNameInFormErrorContent,\n        teamShortNameInFormError,\n        teamShortNameInFormErrorContent\n      };\n    };\n\n    this.validateReportForm = () => {\n      let subjectFormError = false;\n      let subjectFormErrorContent = '';\n      let detailReportFormError = false;\n      let detailReportFormErrorContent = '';\n\n      if (this.state.subjectForm.trim() === '') {\n        subjectFormError = true;\n        subjectFormErrorContent = 'Tiêu đề báo cáo không được trống';\n      }\n\n      if (this.state.detailReportForm.trim() === '') {\n        detailReportFormError = true;\n        detailReportFormErrorContent = 'Nội dung báo cáo không được trống';\n      }\n\n      return {\n        subjectFormError,\n        subjectFormErrorContent,\n        detailReportFormError,\n        detailReportFormErrorContent\n      };\n    };\n\n    this.validateAddPlayer = () => {\n      let playerEmailInFormErrorContent = '';\n      let playerEmailInFormError = false;\n      let playerNameInFormErrorContent = '';\n      let playerNameInFormError = false;\n\n      if (this.state.playerNameInForm.trim() === '') {\n        playerNameInFormError = true;\n        playerNameInFormErrorContent = 'Tên người chơi không được trống';\n      }\n\n      if (!config.regex.email.test(this.state.playerEmailInForm)) {\n        playerEmailInFormError = true;\n        playerEmailInFormErrorContent = 'Email không hợp lệ';\n      }\n\n      return {\n        playerEmailInFormError,\n        playerEmailInFormErrorContent,\n        playerNameInFormErrorContent,\n        playerNameInFormError\n      };\n    };\n\n    this.handleConfirmModal = () => {\n      const {\n        selectedCompetitionInFormError,\n        selectedCompetitionInFormErrorContent,\n        teamNameInFormError,\n        teamNameInFormErrorContent,\n        teamShortNameInFormError,\n        teamShortNameInFormErrorContent\n      } = this.validateForm();\n      this.setState({\n        selectedCompetitionInFormError,\n        selectedCompetitionInFormErrorContent,\n        teamNameInFormError,\n        teamNameInFormErrorContent,\n        teamShortNameInFormError,\n        teamShortNameInFormErrorContent\n      });\n\n      if (teamNameInFormError === true || selectedCompetitionInFormError === true || teamShortNameInFormError === true) {\n        return;\n      }\n\n      const params = {\n        path: '',\n        param: {},\n        data: {\n          creatorId: this.props.currentUserInfo.id,\n          competitionId: this.state.selectedCompetitionInForm.value,\n          fullName: this.state.teamNameInForm,\n          shortName: this.state.teamShortNameInForm,\n          players: this.state.listPlayerInForm\n        }\n      };\n      this.props.registTeam(params);\n      this.setState({\n        showJoinModal: false\n      });\n    };\n\n    this.handleConfirmReportModal = () => {\n      const {\n        subjectFormError,\n        subjectFormErrorContent,\n        detailReportFormError,\n        detailReportFormErrorContent\n      } = this.validateReportForm();\n      this.setState({\n        subjectFormError,\n        subjectFormErrorContent,\n        detailReportFormError,\n        detailReportFormErrorContent\n      });\n\n      if (subjectFormError === true || detailReportFormError === true) {\n        return;\n      }\n\n      const params = {\n        path: '',\n        param: {},\n        data: {\n          tournamentId: this.props.tournamentInfo.Tournament.id,\n          content: this.state.detailReportForm.trim(),\n          subject: this.state.subjectForm.trim(),\n          type: 'violation'\n        }\n      };\n      this.props.reportViolation(params);\n      this.setState({\n        showReportModal: false,\n        detailReportForm: '',\n        detailReportFormError: false,\n        detailReportFormErrorContent: '',\n        subjectForm: '',\n        subjectFormError: false,\n        subjectFormErrorContent: ''\n      });\n    };\n\n    this.handleFinishTournament = () => {\n      const confirm = window.confirm('Khi Kết thúc giải đồng nghĩa với việc tất cả các cuộc thi cũng sẽ kết thúc, bạn có chắc chắn?');\n\n      if (confirm === true) {\n        const params = {\n          path: '',\n          param: {\n            id: Number(this.props.routerInfo.match.params.tournamentId)\n          },\n          data: {}\n        };\n        this.props.finishTournament(params);\n      }\n    };\n\n    this.onChangeTeamNameInForm = value => {\n      this.setState({\n        teamNameInForm: value\n      });\n    };\n\n    this.onChangeTeamShortNameInForm = value => {\n      this.setState({\n        teamShortNameInForm: value\n      });\n    };\n\n    this.onDeletePlayer = indexx => {\n      this.setState({\n        listPlayerInForm: this.state.listPlayerInForm.filter((item, index) => index !== indexx)\n      });\n    };\n\n    this.onChangePlayerNameInForm = value => {\n      this.setState({\n        playerNameInForm: value.target.value\n      });\n    };\n\n    this.onChangePlayerEmailInForm = value => {\n      this.setState({\n        playerEmailInForm: value.target.value\n      });\n    };\n\n    this.onChangePlayerGenderInForm = value => {\n      this.setState({\n        playerGenderInForm: value\n      });\n    };\n\n    this.addPlayer = () => {\n      const {\n        playerEmailInFormError,\n        playerEmailInFormErrorContent,\n        playerNameInFormErrorContent,\n        playerNameInFormError\n      } = this.validateAddPlayer();\n      this.setState({\n        playerEmailInFormError,\n        playerEmailInFormErrorContent,\n        playerNameInFormErrorContent,\n        playerNameInFormError\n      });\n\n      if (playerNameInFormError === true || playerEmailInFormError === true) {\n        return;\n      }\n\n      const listTemp = this.state.listPlayerInForm;\n      listTemp.push({\n        name: this.state.playerNameInForm,\n        age: this.state.playerAgeInForm,\n        email: this.state.playerEmailInForm,\n        gender: this.state.playerGenderInForm.label\n      });\n      this.setState({\n        listPlayerInForm: listTemp,\n        playerNameInForm: '',\n        playerAgeInForm: 0,\n        playerEmailInForm: '',\n        playerGenderInForm: {\n          value: true,\n          label: 'Nam'\n        }\n      });\n    };\n\n    this.onChangePlayerAgeInForm = value => {\n      let tempValue = 0;\n\n      if (!isNaN(value.target.value)) {\n        tempValue = Number(value.target.value);\n      } else {\n        tempValue = 0;\n      }\n\n      this.setState({\n        playerAgeInForm: tempValue\n      });\n    };\n\n    this.onChangeSubjectForm = value => {\n      this.setState({\n        subjectForm: value.target.value\n      });\n    };\n\n    this.onChangeDetailReportForm = value => {\n      this.setState({\n        detailReportForm: value.target.value\n      });\n    };\n\n    this.state = {\n      selectedCompetitionInForm: null,\n      showJoinModal: false,\n      showReportModal: false,\n      teamNameInForm: '',\n      playerEmailInForm: '',\n      subjectForm: '',\n      detailReportForm: '',\n      subjectFormError: false,\n      subjectFormErrorContent: '',\n      detailReportFormError: false,\n      detailReportFormErrorContent: '',\n      teamNameInFormError: false,\n      teamNameInFormErrorContent: '',\n      playerNameInForm: '',\n      playerAgeInForm: 0,\n      playerGenderInForm: {\n        value: true,\n        label: 'Nam'\n      },\n      selectedCompetitionInFormError: false,\n      selectedCompetitionInFormErrorContent: '',\n      playerEmailInFormError: false,\n      playerEmailInFormErrorContent: '',\n      playerNameInFormError: false,\n      playerNameInFormErrorContent: '',\n      teamShortNameInForm: '',\n      teamShortNameInFormError: false,\n      teamShortNameInFormErrorContent: '',\n      listPlayerInForm: []\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.tournamentInfo !== nextProps.tournamentInfo) {\n      // if (nextProps.tournamentInfo == null || nextProps.tournamentInfo.Tournament == null) {\n      //   this.tabList = [];\n      //   this.componentList = [];\n      // } else if (nextState.selectedCompetition != null) {\n      //   if (nextProps.tournamentInfo != null && (nextProps.tournamentInfo as IParams).Config != null && ((nextProps.tournamentInfo as IParams).Config as IParams).canEdit === true) {\n      //     this.tabList = ['Nhánh thi đấu', 'Lịch thi đấu', 'Bảng xếp hạng', 'Thông tin', 'Danh sách các đội', 'Cài đặt', 'Các cuộc thi trong giải'];\n      //     this.componentList = [<BracketBoard competitionId={(nextState.selectedCompetition as IParams).value as number} />, <BracketSchedule competitionId={(nextState.selectedCompetition as IParams).value as number} />, <BracketRank />, <div />, <TournamentListTeam id={Number(this.props.routerInfo.match.params.tournamentId)} />, <TournamentSetting tournamentInfo={nextProps.tournamentInfo.Tournament as IParams} tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} />, <CompetitionsSetting tournamentInfo={nextProps.tournamentInfo as IParams} tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} onChangeCompetitionSetting={this.onChangeCompetitionSetting} />];\n      //   } else {\n      //     this.tabList = ['Nhánh thi đấu', 'Lịch thi đấu', 'Bảng xếp hạng', 'Thông tin', 'Danh sách các đội'];\n      //     this.componentList = [<BracketBoard competitionId={(nextState.selectedCompetition as IParams).value as number} />, <BracketSchedule competitionId={(nextState.selectedCompetition as IParams).value as number} />, <BracketRank />, <div />, <TournamentListTeam id={Number(this.props.routerInfo.match.params.tournamentId)} />];\n      //   }\n      // } else {\n      //   if (nextProps.tournamentInfo != null && (nextProps.tournamentInfo as IParams).Config != null && ((nextProps.tournamentInfo as IParams).Config as IParams).canEdit === true) {\n      //     this.tabList = ['Cài đặt', 'Các cuộc thi trong giải'];\n      //     this.componentList = [<TournamentSetting tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} tournamentInfo={nextProps.tournamentInfo.Tournament as IParams} />, <CompetitionsSetting tournamentInfo={nextProps.tournamentInfo.Tournament as IParams} tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} onChangeCompetitionSetting={this.onChangeCompetitionSetting} />];\n      //   } else {\n      //     this.tabList = [];\n      //     this.componentList = [];\n      //   }\n      // }\n      this.tabList = [];\n      this.componentList = [];\n\n      if (nextProps.tournamentInfo != null) {\n        if (nextProps.tournamentInfo.Config != null && nextProps.tournamentInfo.Config.canEdit === true) {\n          this.tabList = ['Các cuộc thi trong giải', 'Các đội tham gia giải', 'Cài đặt', 'Báo cáo giải'];\n          this.componentList = [/*#__PURE__*/React.createElement(CompetitionsSetting, {\n            tournamentInfo: nextProps.tournamentInfo.Tournament,\n            tournamentId: Number(this.props.routerInfo.match.params.tournamentId),\n            onChangeCompetitionSetting: this.onChangeCompetitionSetting,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(TournamentListTeam, {\n            id: Number(this.props.routerInfo.match.params.tournamentId),\n            tournamentInfo: nextProps.tournamentInfo,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(TournamentSetting, {\n            tournamentId: Number(this.props.routerInfo.match.params.tournamentId),\n            tournamentInfo: nextProps.tournamentInfo.Tournament,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(TournamentReport, {\n            tournamentId: Number(this.props.routerInfo.match.params.tournamentId),\n            tournamentInfo: nextProps.tournamentInfo.Tournament,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 13\n            }\n          })];\n        } else {\n          this.tabList = ['Các cuộc thi trong giải', 'Các đội tham gia giải'];\n          this.componentList = [/*#__PURE__*/React.createElement(CompetitionsSetting, {\n            tournamentInfo: nextProps.tournamentInfo.Tournament,\n            tournamentId: Number(this.props.routerInfo.match.params.tournamentId),\n            onChangeCompetitionSetting: this.onChangeCompetitionSetting,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(TournamentListTeam, {\n            id: Number(this.props.routerInfo.match.params.tournamentId),\n            tournamentInfo: nextProps.tournamentInfo,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 13\n            }\n          })];\n        }\n      }\n    } // if (this.state.selectedSport !== nextState.selectedSport || this.state.selectedCompetition !== nextState.selectedCompetition) {\n    //   this.props.onEditBracketMode(false);\n    //   this.props.deleteListSelectingTeam();\n    // }\n    // if (this.props.listSportsByTournament !== nextProps.listSportsByTournament) {\n    //   sportOptions = [];\n    //   if (nextProps.listSportsByTournament != null) {\n    //     nextProps.listSportsByTournament.map((item, index) => sportOptions.push({ value: item.id, label: item.fullName }));\n    //   }\n    //   sportOptions.unshift({\n    //     value: null, label: '(Tất cả)',\n    //   });\n    // }\n    // if (this.props.listCompetitionsBySportAndTournament !== nextProps.listCompetitionsBySportAndTournament) {\n    //   competitionOptions = [];\n    //   if (nextProps.listCompetitionsBySportAndTournament != null) {\n    //     nextProps.listCompetitionsBySportAndTournament.map((item, index) => competitionOptions.push({ value: item.id, label: item.name }));\n    //   }\n    // }\n\n\n    if (this.props.allCompetitionByTournamentId !== nextProps.allCompetitionByTournamentId) {\n      allCompetitionOptions = [];\n\n      if (nextProps.allCompetitionByTournamentId != null) {\n        nextProps.allCompetitionByTournamentId.map((item, index) => allCompetitionOptions.push({\n          value: item.id,\n          label: item.name\n        }));\n      }\n    } // if (this.state.selectedSport !== nextState.selectedSport && nextState.selectedSport != null) {\n    //   competitionOptions = [];\n    //   this.setState({\n    //     selectedCompetition: null,\n    //   });\n    //   const params = {\n    //     path: '',\n    //     param: {\n    //       tournamentId: Number(this.props.routerInfo.match.params.tournamentId),\n    //       sportId: (nextState.selectedSport as IParams).value,\n    //     },\n    //     data: {},\n    //   };\n    //   this.props.queryCompetitionsBySportAndTournament(params);\n    // }\n\n\n    return true;\n  }\n\n  componentDidMount() {\n    this.requestData();\n  }\n\n  render() {\n    console.log('this.props.tournamentInfo', this.props.tournamentInfo);\n    return /*#__PURE__*/React.createElement(ReduxBlockUi, {\n      tag: \"div\",\n      block: START_TOURNAMENT,\n      unblock: [START_TOURNAMENT_SUCCESS, START_TOURNAMENT_FAILED],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReduxBlockUi, {\n      tag: \"div\",\n      block: FINISH_TOURNAMENT,\n      unblock: [FINISH_TOURNAMENT_SUCCESS, FINISH_TOURNAMENT_FAILED],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReduxBlockUi, {\n      tag: \"div\",\n      block: REPORT_VIOLATION,\n      unblock: [REPORT_VIOLATION_SUCCESS, REPORT_VIOLATION_FAILED],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-background-image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: 'TournamentInfo-background-image',\n      src: require('../../assets/38155584462_74d5f1cc1d_b.jpg'),\n      alt: 'logo',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 17\n      }\n    }), this.props.tournamentInfo != null && this.props.tournamentInfo.Config != null && this.props.tournamentInfo.Config.canEdit === true && /*#__PURE__*/React.createElement(AiFillCamera, {\n      className: 'TournamentInfo-change-image-icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 213\n      }\n    }), this.props.tournamentInfo != null && this.props.tournamentInfo.Config != null && this.props.tournamentInfo.Config.canEdit === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentInfo-Overlay',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 213\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: e => this.updateBackground(e.target.files),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-basic-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-basic-info-container-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"TournamentInfo-name-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 25\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? this.props.tournamentInfo.Tournament.fullName : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 400,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 214\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 27\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Tên ngắn: ${this.props.tournamentInfo.Tournament.shortName}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 200,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 195\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 27\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Nhà tài trợ: ${this.props.tournamentInfo.Tournament.donor}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 250,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 194\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 27\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Trạng thái: ${this.props.tournamentInfo.Tournament.status === 'processing' ? 'Đang diễn ra' : this.props.tournamentInfo.status == null ? 'Chưa diễn ra' : 'Đã kết thúc'}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 225,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 308\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 27\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Ngày bắt đầu: ${formatDateToDisplay(this.props.tournamentInfo.Tournament.openingTime, 'dd/MM/yyyy', 'yyyy-MM-dd')}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 250,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 272\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 27\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Địa điểm khai mạc: ${this.props.tournamentInfo.Tournament.openingLocation}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 275,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 210\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 27\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Ngày kết thúc: ${formatDateToDisplay(this.props.tournamentInfo.Tournament.closingTime, 'dd/MM/yyyy', 'yyyy-MM-dd')}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 250,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 273\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 27\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Địa điểm bế mạc: ${this.props.tournamentInfo.Tournament.closingLocation}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 275,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 208\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-basic-info-container-singleRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 27\n      }\n    }, this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Mô tả: ${this.props.tournamentInfo.Tournament.description}` : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 300,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 194\n      }\n    }))))), /*#__PURE__*/React.createElement(\"img\", {\n      className: 'TournamentInfo-avatar-image',\n      src: require('../../assets/7ab1b0125d485c8dd6a4e78832b0a4b2fbed3cf8.png'),\n      alt: 'logo',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 21\n      }\n    }), this.props.tournamentInfo != null && this.props.tournamentInfo.Config != null && this.props.tournamentInfo.Config.canEdit === true && /*#__PURE__*/React.createElement(AiFillCamera, {\n      className: 'TournamentInfo-change-avatar-icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 217\n      }\n    }), this.props.tournamentInfo != null && this.props.tournamentInfo.Config != null && this.props.tournamentInfo.Config.canEdit === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentInfo-Overlay2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 217\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: e => this.updateAvatar(e.target.files),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 23\n      }\n    }))), this.props.tournamentInfo != null && this.props.tournamentInfo.Config != null && this.props.tournamentInfo.Tournament != null && (this.props.tournamentInfo.Config.canEdit === true ? this.props.tournamentInfo.Tournament.status === 'initializing' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-login\",\n      onClick: this.handleStartTournament,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"TournamentInfo-login-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 29\n      }\n    }, \"B\\u1EAFt \\u0111\\u1EA7u gi\\u1EA3i\"))) : this.props.tournamentInfo.Tournament.status === 'processing' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-login\",\n      onClick: this.handleFinishTournament,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"TournamentInfo-login-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 31\n      }\n    }, \"K\\u1EBFt th\\xFAc gi\\u1EA3i\"))) : null : cookies.get(COOKIES_TYPE.AUTH_TOKEN) != null && this.props.tournamentInfo.Tournament.status === 'opening' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-login\",\n      onClick: this.handleJoinTournament,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"TournamentInfo-login-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 33\n      }\n    }, \"Tham gia gi\\u1EA3i\")))), this.props.tournamentInfo != null && this.props.tournamentInfo.Config != null && this.props.tournamentInfo.Tournament != null && this.props.tournamentInfo.Config.canEdit !== true && this.props.tournamentInfo.Tournament.status !== 'finished' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-login\",\n      onClick: this.handleReportViolate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"TournamentInfo-login-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 25\n      }\n    }, \"B\\xE1o c\\xE1o vi ph\\u1EA1m\"))), this.props.tournamentInfo != null && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-content-info-advanced-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomTab, {\n      tabList: this.tabList,\n      componentList: this.componentList,\n      selectedIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(CustomModal, {\n      customStyles: customStyles2,\n      handleCloseModal: this.handleCloseReportModal,\n      showModal: this.state.showReportModal,\n      handleConfirmModal: this.handleConfirmReportModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'Report-modal-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'Report-modal-header-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 21\n      }\n    }, \"Form B\\xE1o c\\xE1o\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'Report-modal-subject-input-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 21\n      }\n    }, \"Ti\\xEAu \\u0111\\u1EC1: \"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: '200px',\n        height: '25px',\n        marginLeft: '20px'\n      },\n      type: 'text',\n      onChange: this.onChangeSubjectForm,\n      value: this.state.subjectForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 19\n      }\n    }, \"N\\u1ED9i dung b\\xE1o c\\xE1o: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: 7,\n      cols: 60,\n      value: this.state.detailReportForm,\n      onChange: this.onChangeDetailReportForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 19\n      }\n    }), this.state.subjectFormError === true && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 60\n      }\n    }, this.state.subjectFormErrorContent), this.state.detailReportFormError === true && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 65\n      }\n    }, this.state.detailReportFormErrorContent))), /*#__PURE__*/React.createElement(CustomModal, {\n      customStyles: customStyles,\n      handleCloseModal: this.handleCloseModal,\n      showModal: this.state.showJoinModal,\n      handleConfirmModal: this.handleConfirmModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentInfo-join-tournament-form-competition-header',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 19\n      }\n    }, \"Form \\u0111\\u0103ng k\\xFD d\\u1EF1 thi\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TournamentInfo-join-tournament-form-competition-option',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 19\n      }\n    }, \"Ch\\u1ECDn cu\\u1ED9c thi\"), /*#__PURE__*/React.createElement(Select, {\n      options: allCompetitionOptions,\n      className: \"Select\",\n      defaultValue: this.state.selectedCompetitionInForm,\n      value: this.state.selectedCompetitionInForm,\n      onChange: this.onChangeSelectedCompetitionInForm,\n      maxMenuHeight: 140,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 19\n      }\n    }), this.state.selectedCompetitionInFormError === true && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 74\n      }\n    }, this.state.selectedCompetitionInFormErrorContent)), /*#__PURE__*/React.createElement(TextInput, {\n      label: 'Tên đội',\n      value: this.state.teamNameInForm,\n      onChangeText: this.onChangeTeamNameInForm,\n      error: this.state.teamNameInFormError,\n      errorContent: this.state.teamNameInFormErrorContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      label: 'Tên ngắn đội',\n      value: this.state.teamShortNameInForm,\n      onChangeText: this.onChangeTeamShortNameInForm,\n      error: this.state.teamShortNameInFormError,\n      errorContent: this.state.teamShortNameInFormErrorContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 21\n      }\n    }, \"T\\xEAn\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 21\n      }\n    }, \"Gi\\u1EDBi t\\xEDnh\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 21\n      }\n    }, \"Tu\\u1ED5i\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 21\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-setting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 19\n      }\n    })), this.state.listPlayerInForm.map((item, index) => /*#__PURE__*/React.createElement(Player, {\n      onDelete: this.onDeletePlayer,\n      info: item,\n      freeToEdit: true,\n      key: index,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 67\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: 'text',\n      onChange: this.onChangePlayerNameInForm,\n      value: this.state.playerNameInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: genderOptions,\n      className: \"Select\",\n      defaultValue: this.state.playerGenderInForm,\n      value: this.state.playerGenderInForm,\n      onChange: this.onChangePlayerGenderInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: '70px'\n      },\n      type: 'text',\n      onChange: this.onChangePlayerAgeInForm,\n      value: this.state.playerAgeInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: 'text',\n      onChange: this.onChangePlayerEmailInForm,\n      value: this.state.playerEmailInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TournamentInfo-join-tournament-setting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IoMdAddCircleOutline, {\n      color: 'white',\n      size: 25,\n      style: {\n        marginLeft: '3px',\n        marginRight: '3px'\n      },\n      onClick: this.addPlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 21\n      }\n    }))), this.state.playerNameInFormError === true && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 63\n      }\n    }, this.state.playerNameInFormErrorContent), this.state.playerEmailInFormError === true && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 64\n      }\n    }, this.state.playerEmailInFormErrorContent))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tournamentInfo: state.tournamentInfo,\n    listSportsByTournament: state.listSportsByTournament,\n    listCompetitionsBySportAndTournament: state.listCompetitionsBySportAndTournament,\n    allCompetitionByTournamentId: state.allCompetitionByTournamentId,\n    currentUserInfo: state.currentUserInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registTeam,\n  reportViolation,\n  queryAllCompetitionsByTournamentId,\n  deleteListSelectingTeam,\n  onEditBracketMode,\n  updateBackgroundTournament,\n  updateAvatarTournament,\n  queryTournamentInfo,\n  querySportsByTournament,\n  queryCompetitionsBySportAndTournament,\n  startTournament,\n  finishTournament\n})(TournamentInfo);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/screens/TournamentInfo/index.tsx"],"names":["React","connect","IoMdAddCircleOutline","ReduxBlockUi","Select","Skeleton","AiFillCamera","CustomTab","CustomModal","TournamentListTeam","TournamentSetting","CompetitionsSetting","Player","TournamentReport","TextInput","COOKIES_TYPE","cookies","formatDateToDisplay","config","onEditBracketMode","deleteListSelectingTeam","queryAllCompetitionsByTournamentId","registTeam","reportViolation","updateBackgroundTournament","updateAvatarTournament","queryTournamentInfo","querySportsByTournament","finishTournament","queryCompetitionsBySportAndTournament","startTournament","START_TOURNAMENT","FINISH_TOURNAMENT","REPORT_VIOLATION","START_TOURNAMENT_SUCCESS","START_TOURNAMENT_FAILED","FINISH_TOURNAMENT_SUCCESS","FINISH_TOURNAMENT_FAILED","REPORT_VIOLATION_SUCCESS","REPORT_VIOLATION_FAILED","allCompetitionOptions","customStyles","content","top","left","right","bottom","backgroundColor","display","flexDirection","overlay","zIndex","customStyles2","genderOptions","value","label","TournamentInfo","Component","constructor","props","tabList","componentList","requestData","params","path","param","id","Number","routerInfo","match","tournamentId","data","limit","onChangeCompetitionSetting","setState","selectedCompetitionInForm","onChangeSelectedCompetitionInForm","updateBackground","selectorFiles","length","file","updateAvatar","handleStartTournament","confirm","window","handleJoinTournament","showJoinModal","handleReportViolate","showReportModal","handleCloseModal","handleCloseReportModal","subjectForm","subjectFormError","subjectFormErrorContent","detailReportForm","detailReportFormError","detailReportFormErrorContent","validateForm","selectedCompetitionInFormError","selectedCompetitionInFormErrorContent","teamNameInFormError","teamNameInFormErrorContent","teamShortNameInFormErrorContent","teamShortNameInFormError","state","teamNameInForm","trim","teamShortNameInForm","validateReportForm","validateAddPlayer","playerEmailInFormErrorContent","playerEmailInFormError","playerNameInFormErrorContent","playerNameInFormError","playerNameInForm","regex","email","test","playerEmailInForm","handleConfirmModal","creatorId","currentUserInfo","competitionId","fullName","shortName","players","listPlayerInForm","handleConfirmReportModal","tournamentInfo","Tournament","subject","type","handleFinishTournament","onChangeTeamNameInForm","onChangeTeamShortNameInForm","onDeletePlayer","indexx","filter","item","index","onChangePlayerNameInForm","target","onChangePlayerEmailInForm","onChangePlayerGenderInForm","playerGenderInForm","addPlayer","listTemp","push","name","age","playerAgeInForm","gender","onChangePlayerAgeInForm","tempValue","isNaN","onChangeSubjectForm","onChangeDetailReportForm","shouldComponentUpdate","nextProps","nextState","Config","canEdit","allCompetitionByTournamentId","map","componentDidMount","render","console","log","require","e","files","donor","status","openingTime","openingLocation","closingTime","closingLocation","description","get","AUTH_TOKEN","width","height","marginLeft","color","marginRight","mapStateToProps","listSportsByTournament","listCompetitionsBySportAndTournament"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { IoMdAddCircleOutline } from 'react-icons/io';\r\nimport ReduxBlockUi from 'react-block-ui/redux';\r\nimport Select, { ValueType, OptionTypeBase } from 'react-select';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport * as H from 'history';\r\nimport { StaticContext } from 'react-router';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { Styles } from 'react-modal';\r\nimport { AiFillCamera } from 'react-icons/ai';\r\nimport CustomTab from 'components/CustomTab';\r\nimport CustomModal from 'components/CustomModal';\r\nimport TournamentListTeam from 'components/TournamentListTeam';\r\nimport TournamentSetting from 'components/TournamentSetting';\r\nimport CompetitionsSetting from 'components/CompetitionsSetting';\r\nimport Player from 'components/Player';\r\nimport TournamentReport from 'components/TournamentReport';\r\nimport TextInput from 'components/TextInput';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { COOKIES_TYPE } from 'global';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { cookies } from 'utils/cookies';\r\nimport { formatDateToDisplay } from 'utils/datetime';\r\nimport config from 'config';\r\nimport { onEditBracketMode, deleteListSelectingTeam } from 'components/BracketTeam/actions';\r\nimport { queryAllCompetitionsByTournamentId } from 'components/CompetitionsSetting/actions';\r\nimport { registTeam, reportViolation, updateBackgroundTournament, updateAvatarTournament, queryTournamentInfo, querySportsByTournament, finishTournament, queryCompetitionsBySportAndTournament, startTournament } from './actions';\r\nimport { START_TOURNAMENT, FINISH_TOURNAMENT, REPORT_VIOLATION } from 'redux-saga/actions';\r\nimport { START_TOURNAMENT_SUCCESS, START_TOURNAMENT_FAILED, FINISH_TOURNAMENT_SUCCESS, FINISH_TOURNAMENT_FAILED, REPORT_VIOLATION_SUCCESS, REPORT_VIOLATION_FAILED } from './reducers';\r\nimport './styles.css';\r\n\r\ninterface ITournamentInfoProps extends React.ClassAttributes<TournamentInfo> {\r\n  routerInfo: RouteComponentProps<any, StaticContext, H.LocationState>;\r\n  tournamentInfo: IParams | null;\r\n  listSportsByTournament: IParams[] | null;\r\n  listCompetitionsBySportAndTournament: IParams[] | null;\r\n  allCompetitionByTournamentId: IParams[] | null;\r\n  currentUserInfo: IParams | null;\r\n\r\n  queryTournamentInfo(param: IBigRequest): void;\r\n  querySportsByTournament(param: IBigRequest): void;\r\n  queryCompetitionsBySportAndTournament(param: IBigRequest): void;\r\n  startTournament(param: IBigRequest): void;\r\n  finishTournament(param: IBigRequest): void;\r\n  updateAvatarTournament(param: IBigRequest): void;\r\n  updateBackgroundTournament(param: IBigRequest): void;\r\n  onEditBracketMode(status: boolean): void;\r\n  deleteListSelectingTeam(): void;\r\n  queryAllCompetitionsByTournamentId(param: IBigRequest): void;\r\n  reportViolation(param: IBigRequest): void;\r\n  registTeam(param: IBigRequest): void;\r\n}\r\n\r\ninterface ITournamentInfoState {\r\n  selectedCompetitionInForm: ValueType<OptionTypeBase>;\r\n  selectedCompetitionInFormError: boolean;\r\n  selectedCompetitionInFormErrorContent: string;\r\n  showJoinModal: boolean;\r\n  showReportModal: boolean;\r\n  teamNameInForm: string;\r\n  teamNameInFormError: boolean;\r\n  teamNameInFormErrorContent: string;\r\n  playerNameInForm: string;\r\n  playerNameInFormError: boolean;\r\n  playerNameInFormErrorContent: string;\r\n  playerEmailInForm: string;\r\n  playerEmailInFormError: boolean;\r\n  playerEmailInFormErrorContent: string;\r\n  playerAgeInForm: number;\r\n  teamShortNameInForm: string;\r\n  teamShortNameInFormError: boolean;\r\n  teamShortNameInFormErrorContent: string;\r\n  subjectForm: string;\r\n  detailReportForm: string;\r\n  subjectFormError: boolean;\r\n  subjectFormErrorContent: string;\r\n  detailReportFormError: boolean;\r\n  detailReportFormErrorContent: string;\r\n  listPlayerInForm: IParams[];\r\n  playerGenderInForm: ValueType<OptionTypeBase>;\r\n}\r\n\r\nlet allCompetitionOptions: IParams[] = [\r\n];\r\n\r\nconst customStyles: Styles = {\r\n  content: {\r\n    top: '5%',\r\n    left: '15%',\r\n    right: '15%',\r\n    bottom: '5%',\r\n    backgroundColor: '#2b303d',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  overlay: {\r\n    zIndex: 100001,\r\n  },\r\n};\r\n\r\nconst customStyles2: Styles = {\r\n  content: {\r\n    top: '15%',\r\n    left: '15%',\r\n    right: '15%',\r\n    bottom: '15%',\r\n    backgroundColor: '#2b303d',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  overlay: {\r\n    zIndex: 100001,\r\n  },\r\n};\r\n\r\nconst genderOptions = [\r\n  { value: true, label: 'Nam' },\r\n  { value: false, label: 'Nữ' },\r\n];\r\n\r\nclass TournamentInfo extends React.Component<ITournamentInfoProps, ITournamentInfoState> {\r\n  private tabList: string[] = [];\r\n  private componentList: ReactNode[] = [];\r\n\r\n  constructor(props: ITournamentInfoProps) {\r\n    super(props);\r\n    this.state = {\r\n      selectedCompetitionInForm: null,\r\n      showJoinModal: false,\r\n      showReportModal: false,\r\n      teamNameInForm: '',\r\n      playerEmailInForm: '',\r\n      subjectForm: '',\r\n      detailReportForm: '',\r\n      subjectFormError: false,\r\n      subjectFormErrorContent: '',\r\n      detailReportFormError: false,\r\n      detailReportFormErrorContent: '',\r\n      teamNameInFormError: false,\r\n      teamNameInFormErrorContent: '',\r\n      playerNameInForm: '',\r\n      playerAgeInForm: 0,\r\n      playerGenderInForm: { value: true, label: 'Nam' },\r\n      selectedCompetitionInFormError: false,\r\n      selectedCompetitionInFormErrorContent: '',\r\n      playerEmailInFormError: false,\r\n      playerEmailInFormErrorContent: '',\r\n      playerNameInFormError: false,\r\n      playerNameInFormErrorContent: '',\r\n      teamShortNameInForm: '',\r\n      teamShortNameInFormError: false,\r\n      teamShortNameInFormErrorContent: '',\r\n      listPlayerInForm: [\r\n      ],\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ITournamentInfoProps, nextState: ITournamentInfoState) {\r\n    if (this.props.tournamentInfo !== nextProps.tournamentInfo) {\r\n      // if (nextProps.tournamentInfo == null || nextProps.tournamentInfo.Tournament == null) {\r\n      //   this.tabList = [];\r\n      //   this.componentList = [];\r\n      // } else if (nextState.selectedCompetition != null) {\r\n      //   if (nextProps.tournamentInfo != null && (nextProps.tournamentInfo as IParams).Config != null && ((nextProps.tournamentInfo as IParams).Config as IParams).canEdit === true) {\r\n      //     this.tabList = ['Nhánh thi đấu', 'Lịch thi đấu', 'Bảng xếp hạng', 'Thông tin', 'Danh sách các đội', 'Cài đặt', 'Các cuộc thi trong giải'];\r\n      //     this.componentList = [<BracketBoard competitionId={(nextState.selectedCompetition as IParams).value as number} />, <BracketSchedule competitionId={(nextState.selectedCompetition as IParams).value as number} />, <BracketRank />, <div />, <TournamentListTeam id={Number(this.props.routerInfo.match.params.tournamentId)} />, <TournamentSetting tournamentInfo={nextProps.tournamentInfo.Tournament as IParams} tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} />, <CompetitionsSetting tournamentInfo={nextProps.tournamentInfo as IParams} tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} onChangeCompetitionSetting={this.onChangeCompetitionSetting} />];\r\n      //   } else {\r\n      //     this.tabList = ['Nhánh thi đấu', 'Lịch thi đấu', 'Bảng xếp hạng', 'Thông tin', 'Danh sách các đội'];\r\n      //     this.componentList = [<BracketBoard competitionId={(nextState.selectedCompetition as IParams).value as number} />, <BracketSchedule competitionId={(nextState.selectedCompetition as IParams).value as number} />, <BracketRank />, <div />, <TournamentListTeam id={Number(this.props.routerInfo.match.params.tournamentId)} />];\r\n      //   }\r\n      // } else {\r\n      //   if (nextProps.tournamentInfo != null && (nextProps.tournamentInfo as IParams).Config != null && ((nextProps.tournamentInfo as IParams).Config as IParams).canEdit === true) {\r\n      //     this.tabList = ['Cài đặt', 'Các cuộc thi trong giải'];\r\n      //     this.componentList = [<TournamentSetting tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} tournamentInfo={nextProps.tournamentInfo.Tournament as IParams} />, <CompetitionsSetting tournamentInfo={nextProps.tournamentInfo.Tournament as IParams} tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} onChangeCompetitionSetting={this.onChangeCompetitionSetting} />];\r\n      //   } else {\r\n      //     this.tabList = [];\r\n      //     this.componentList = [];\r\n      //   }\r\n      // }\r\n      this.tabList = [];\r\n      this.componentList = [];\r\n      if (nextProps.tournamentInfo != null) {\r\n        if ((nextProps.tournamentInfo as IParams).Config != null && ((nextProps.tournamentInfo as unknown as IParams).Config as unknown as IParams).canEdit === true) {\r\n          this.tabList = [\r\n            'Các cuộc thi trong giải',\r\n            'Các đội tham gia giải',\r\n            'Cài đặt',\r\n            'Báo cáo giải'\r\n          ];\r\n          this.componentList = [\r\n            <CompetitionsSetting tournamentInfo={nextProps.tournamentInfo.Tournament as unknown as IParams} tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} onChangeCompetitionSetting={this.onChangeCompetitionSetting} />,\r\n            <TournamentListTeam id={Number(this.props.routerInfo.match.params.tournamentId)} tournamentInfo={nextProps.tournamentInfo} />,\r\n            <TournamentSetting tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} tournamentInfo={nextProps.tournamentInfo.Tournament as unknown as IParams} />,\r\n            <TournamentReport tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} tournamentInfo={nextProps.tournamentInfo.Tournament as unknown as IParams} />\r\n          ];\r\n        } else {\r\n          this.tabList = [\r\n            'Các cuộc thi trong giải',\r\n            'Các đội tham gia giải',\r\n          ];\r\n          this.componentList = [\r\n            <CompetitionsSetting tournamentInfo={nextProps.tournamentInfo.Tournament as unknown as IParams} tournamentId={Number(this.props.routerInfo.match.params.tournamentId)} onChangeCompetitionSetting={this.onChangeCompetitionSetting} />,\r\n            <TournamentListTeam id={Number(this.props.routerInfo.match.params.tournamentId)} tournamentInfo={nextProps.tournamentInfo} />,\r\n          ];\r\n        }\r\n      }\r\n    }\r\n    // if (this.state.selectedSport !== nextState.selectedSport || this.state.selectedCompetition !== nextState.selectedCompetition) {\r\n    //   this.props.onEditBracketMode(false);\r\n    //   this.props.deleteListSelectingTeam();\r\n    // }\r\n    // if (this.props.listSportsByTournament !== nextProps.listSportsByTournament) {\r\n    //   sportOptions = [];\r\n    //   if (nextProps.listSportsByTournament != null) {\r\n    //     nextProps.listSportsByTournament.map((item, index) => sportOptions.push({ value: item.id, label: item.fullName }));\r\n    //   }\r\n    //   sportOptions.unshift({\r\n    //     value: null, label: '(Tất cả)',\r\n    //   });\r\n    // }\r\n    // if (this.props.listCompetitionsBySportAndTournament !== nextProps.listCompetitionsBySportAndTournament) {\r\n    //   competitionOptions = [];\r\n    //   if (nextProps.listCompetitionsBySportAndTournament != null) {\r\n    //     nextProps.listCompetitionsBySportAndTournament.map((item, index) => competitionOptions.push({ value: item.id, label: item.name }));\r\n    //   }\r\n    // }\r\n    if (this.props.allCompetitionByTournamentId !== nextProps.allCompetitionByTournamentId) {\r\n      allCompetitionOptions = [];\r\n      if (nextProps.allCompetitionByTournamentId != null) {\r\n        nextProps.allCompetitionByTournamentId.map((item, index) => allCompetitionOptions.push({ value: item.id, label: item.name }));\r\n      }\r\n    }\r\n    // if (this.state.selectedSport !== nextState.selectedSport && nextState.selectedSport != null) {\r\n    //   competitionOptions = [];\r\n    //   this.setState({\r\n    //     selectedCompetition: null,\r\n    //   });\r\n    //   const params = {\r\n    //     path: '',\r\n    //     param: {\r\n    //       tournamentId: Number(this.props.routerInfo.match.params.tournamentId),\r\n    //       sportId: (nextState.selectedSport as IParams).value,\r\n    //     },\r\n    //     data: {},\r\n    //   };\r\n    //   this.props.queryCompetitionsBySportAndTournament(params);\r\n    // }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    let params: IBigRequest = {\r\n      path: '',\r\n      param: {\r\n        id: Number(this.props.routerInfo.match.params.tournamentId),\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryTournamentInfo(params);\r\n    params = {\r\n      path: '',\r\n      param: {\r\n        tournamentId: Number(this.props.routerInfo.match.params.tournamentId),\r\n        limit: 99,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryAllCompetitionsByTournamentId(params);\r\n  }\r\n\r\n  private onChangeCompetitionSetting = () => {\r\n    this.setState({\r\n      selectedCompetitionInForm: null,\r\n    });\r\n  }\r\n\r\n  private onChangeSelectedCompetitionInForm = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({\r\n      selectedCompetitionInForm: value,\r\n    });\r\n  }\r\n\r\n  private updateBackground = (selectorFiles: FileList | null) => {\r\n    if (selectorFiles !== null && selectorFiles.length > 0) {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          id: Number(this.props.routerInfo.match.params.tournamentId),\r\n          file: selectorFiles,\r\n        },\r\n        data: {\r\n        },\r\n      };\r\n\r\n      this.props.updateBackgroundTournament(params);\r\n    }\r\n  };\r\n\r\n  private updateAvatar = (selectorFiles: FileList | null) => {\r\n    if (selectorFiles !== null && selectorFiles.length > 0) {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          id: Number(this.props.routerInfo.match.params.tournamentId),\r\n          file: selectorFiles,\r\n        },\r\n        data: {\r\n        },\r\n      };\r\n\r\n      this.props.updateAvatarTournament(params);\r\n    }\r\n  };\r\n\r\n  private handleStartTournament = () => {\r\n    const confirm = window.confirm('Khi bắt đầu giải bạn sẽ không thể thay đổi thông tin các cuộc thi và các đội nữa, bạn có chắc chắn?')\r\n    if (confirm === true) {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          id: Number(this.props.routerInfo.match.params.tournamentId),\r\n        },\r\n        data: {\r\n        },\r\n      };\r\n\r\n      this.props.startTournament(params);\r\n    }\r\n  };\r\n\r\n  private handleJoinTournament = () => {\r\n    this.setState({\r\n      showJoinModal: true,\r\n    });\r\n  };\r\n\r\n  private handleReportViolate = () => {\r\n    this.setState({\r\n      showReportModal: true,\r\n    });\r\n  };\r\n\r\n  private handleCloseModal = () => {\r\n    const confirm = window.confirm('Bạn có chắc chắn muốn hủy form đăng ký?');\r\n    if (confirm === true) {\r\n      this.setState({\r\n        showJoinModal: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleCloseReportModal = () => {\r\n    const confirm = window.confirm('Bạn có chắc chắn muốn hủy form báo cáo?');\r\n    if (confirm === true) {\r\n      this.setState({\r\n        showReportModal: false,\r\n        subjectForm: '',\r\n        subjectFormError: false,\r\n        subjectFormErrorContent: '',\r\n        detailReportForm: '',\r\n        detailReportFormError: false,\r\n        detailReportFormErrorContent: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  private validateForm = () => {\r\n    let selectedCompetitionInFormError = false;\r\n    let selectedCompetitionInFormErrorContent = '';\r\n    let teamNameInFormError = false;\r\n    let teamNameInFormErrorContent = '';\r\n    let teamShortNameInFormErrorContent = '';\r\n    let teamShortNameInFormError = false;\r\n    if (this.state.selectedCompetitionInForm == null) {\r\n      selectedCompetitionInFormError = true;\r\n      selectedCompetitionInFormErrorContent = 'Bạn phải chọn giải đấu muốn tham gia';\r\n    }\r\n    if (this.state.teamNameInForm.trim() === '') {\r\n      teamNameInFormError = true;\r\n      teamNameInFormErrorContent = 'Tên đội không được trống';\r\n    }\r\n    if (this.state.teamShortNameInForm.trim() === '') {\r\n      teamShortNameInFormError = true;\r\n      teamShortNameInFormErrorContent = 'Tên ngắn đội không được trống';\r\n    }\r\n\r\n    return {\r\n      selectedCompetitionInFormError,\r\n      selectedCompetitionInFormErrorContent,\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    };\r\n  }\r\n\r\n  private validateReportForm = () => {\r\n    let subjectFormError = false;\r\n    let subjectFormErrorContent = '';\r\n    let detailReportFormError = false;\r\n    let detailReportFormErrorContent = '';\r\n    if (this.state.subjectForm.trim() === '') {\r\n      subjectFormError = true;\r\n      subjectFormErrorContent = 'Tiêu đề báo cáo không được trống';\r\n    }\r\n    if (this.state.detailReportForm.trim() === '') {\r\n      detailReportFormError = true;\r\n      detailReportFormErrorContent = 'Nội dung báo cáo không được trống';\r\n    }\r\n\r\n    return {\r\n      subjectFormError,\r\n      subjectFormErrorContent,\r\n      detailReportFormError,\r\n      detailReportFormErrorContent,\r\n    };\r\n  }\r\n\r\n  private validateAddPlayer = () => {\r\n    let playerEmailInFormErrorContent = '';\r\n    let playerEmailInFormError = false;\r\n    let playerNameInFormErrorContent = '';\r\n    let playerNameInFormError = false;\r\n    if (this.state.playerNameInForm.trim() === '') {\r\n      playerNameInFormError = true;\r\n      playerNameInFormErrorContent = 'Tên người chơi không được trống';\r\n    }\r\n    if (!config.regex.email.test(this.state.playerEmailInForm)) {\r\n      playerEmailInFormError = true;\r\n      playerEmailInFormErrorContent = 'Email không hợp lệ';\r\n    }\r\n\r\n    return {\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    };\r\n  }\r\n\r\n  private handleConfirmModal = () => {\r\n    const {\r\n      selectedCompetitionInFormError,\r\n      selectedCompetitionInFormErrorContent,\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    } = this.validateForm();\r\n    this.setState({\r\n      selectedCompetitionInFormError,\r\n      selectedCompetitionInFormErrorContent,\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    });\r\n    if (teamNameInFormError === true || selectedCompetitionInFormError === true || teamShortNameInFormError === true) {\r\n      return;\r\n    }\r\n    const params = {\r\n      path: '',\r\n      param: {},\r\n      data: {\r\n        creatorId: this.props.currentUserInfo!.id,\r\n        competitionId: (this.state.selectedCompetitionInForm as IParams).value,\r\n        fullName: this.state.teamNameInForm,\r\n        shortName: this.state.teamShortNameInForm,\r\n        players: this.state.listPlayerInForm,\r\n      },\r\n    }\r\n    this.props.registTeam(params);\r\n    this.setState({\r\n      showJoinModal: false,\r\n    });\r\n  };\r\n\r\n  private handleConfirmReportModal = () => {\r\n    const {\r\n      subjectFormError,\r\n      subjectFormErrorContent,\r\n      detailReportFormError,\r\n      detailReportFormErrorContent,\r\n    } = this.validateReportForm();\r\n    this.setState({\r\n      subjectFormError,\r\n      subjectFormErrorContent,\r\n      detailReportFormError,\r\n      detailReportFormErrorContent,\r\n    });\r\n    if (subjectFormError === true || detailReportFormError === true) {\r\n      return;\r\n    }\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n      },\r\n      data: {\r\n        tournamentId: (this.props.tournamentInfo!.Tournament as IParams).id,\r\n        content: this.state.detailReportForm.trim(),\r\n        subject: this.state.subjectForm.trim(),\r\n        type: 'violation',\r\n      },\r\n    }\r\n    this.props.reportViolation(params);\r\n    this.setState({\r\n      showReportModal: false,\r\n      detailReportForm: '',\r\n      detailReportFormError: false,\r\n      detailReportFormErrorContent: '',\r\n      subjectForm: '',\r\n      subjectFormError: false,\r\n      subjectFormErrorContent: '',\r\n    });\r\n  };\r\n\r\n  private handleFinishTournament = () => {\r\n    const confirm = window.confirm('Khi Kết thúc giải đồng nghĩa với việc tất cả các cuộc thi cũng sẽ kết thúc, bạn có chắc chắn?')\r\n    if (confirm === true) {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          id: Number(this.props.routerInfo.match.params.tournamentId),\r\n        },\r\n        data: {\r\n        },\r\n      };\r\n\r\n      this.props.finishTournament(params);\r\n    }\r\n  };\r\n\r\n  private onChangeTeamNameInForm = (value: string) => {\r\n    this.setState({\r\n      teamNameInForm: value,\r\n    });\r\n  }\r\n\r\n  private onChangeTeamShortNameInForm = (value: string) => {\r\n    this.setState({\r\n      teamShortNameInForm: value,\r\n    });\r\n  }\r\n\r\n  private onDeletePlayer = (indexx: number) => {\r\n    this.setState({\r\n      listPlayerInForm: this.state.listPlayerInForm.filter((item, index) => index !== indexx),\r\n    });\r\n  }\r\n\r\n  private onChangePlayerNameInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      playerNameInForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private onChangePlayerEmailInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      playerEmailInForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private onChangePlayerGenderInForm = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({ playerGenderInForm: value, });\r\n  }\r\n\r\n  private addPlayer = () => {\r\n    const {\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    } = this.validateAddPlayer();\r\n    this.setState({\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    });\r\n    if (playerNameInFormError === true || playerEmailInFormError === true) {\r\n      return;\r\n    }\r\n    const listTemp = this.state.listPlayerInForm;\r\n    listTemp.push({\r\n      name: this.state.playerNameInForm,\r\n      age: this.state.playerAgeInForm,\r\n      email: this.state.playerEmailInForm,\r\n      gender: (this.state.playerGenderInForm as IParams).label,\r\n    });\r\n    this.setState({\r\n      listPlayerInForm: listTemp,\r\n      playerNameInForm: '',\r\n      playerAgeInForm: 0,\r\n      playerEmailInForm: '',\r\n      playerGenderInForm: { value: true, label: 'Nam' },\r\n    });\r\n  }\r\n\r\n  private onChangePlayerAgeInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    let tempValue = 0;\r\n    if (!isNaN(value.target.value as unknown as number)) {\r\n      tempValue = Number(value.target.value);\r\n    } else {\r\n      tempValue = 0;\r\n    }\r\n    this.setState({\r\n      playerAgeInForm: tempValue,\r\n    });\r\n  }\r\n\r\n  private onChangeSubjectForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      subjectForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private onChangeDetailReportForm = (value: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    this.setState({\r\n      detailReportForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log('this.props.tournamentInfo', this.props.tournamentInfo);\r\n    return (\r\n      <ReduxBlockUi\r\n        tag=\"div\"\r\n        block={START_TOURNAMENT}\r\n        unblock={[START_TOURNAMENT_SUCCESS, START_TOURNAMENT_FAILED]}\r\n      >\r\n        <ReduxBlockUi\r\n          tag=\"div\"\r\n          block={FINISH_TOURNAMENT}\r\n          unblock={[FINISH_TOURNAMENT_SUCCESS, FINISH_TOURNAMENT_FAILED]}\r\n        >\r\n          <ReduxBlockUi\r\n            tag=\"div\"\r\n            block={REPORT_VIOLATION}\r\n            unblock={[REPORT_VIOLATION_SUCCESS, REPORT_VIOLATION_FAILED]}\r\n          >\r\n            <div className=\"TournamentInfo-Container\">\r\n              <div className=\"TournamentInfo-background-image-container\">\r\n                <img className={'TournamentInfo-background-image'} src={require('../../assets/38155584462_74d5f1cc1d_b.jpg')} alt={'logo'} />\r\n                {this.props.tournamentInfo != null && (this.props.tournamentInfo as IParams).Config != null && ((this.props.tournamentInfo as unknown as IParams).Config as unknown as IParams).canEdit === true && <AiFillCamera className={'TournamentInfo-change-image-icon'} />}\r\n                {this.props.tournamentInfo != null && (this.props.tournamentInfo as IParams).Config != null && ((this.props.tournamentInfo as unknown as IParams).Config as unknown as IParams).canEdit === true && <div className={'TournamentInfo-Overlay'}>\r\n                  <input type=\"file\" onChange={(e) => this.updateBackground(e.target.files)} />\r\n                </div>}\r\n              </div>\r\n              <div className=\"TournamentInfo-content-container\">\r\n                <div className=\"TournamentInfo-content-info-container\">\r\n                  <div className=\"TournamentInfo-content-info-basic-info-container\">\r\n                    <div className=\"TournamentInfo-content-info-basic-info-container-container\">\r\n                      <div className=\"TournamentInfo-content-info-basic-info-container-singleRow\">\r\n                        <p className=\"TournamentInfo-name-text\">{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? (this.props.tournamentInfo.Tournament as unknown as IParams).fullName : <Skeleton width={400} height={30} />}</p>\r\n                      </div>\r\n                      <div className=\"TournamentInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"TournamentInfo-info-item\">\r\n                          <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Tên ngắn: ${(this.props.tournamentInfo.Tournament as unknown as IParams).shortName}` : <Skeleton width={200} height={20} />}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"TournamentInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"TournamentInfo-info-item\">\r\n                          <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Nhà tài trợ: ${(this.props.tournamentInfo.Tournament as unknown as IParams).donor}` : <Skeleton width={250} height={20} />}</p>\r\n                        </div>\r\n                        <div className=\"TournamentInfo-info-item\">\r\n                          <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Trạng thái: ${((this.props.tournamentInfo.Tournament as unknown as IParams).status === 'processing' ? 'Đang diễn ra' : (this.props.tournamentInfo.status == null ? 'Chưa diễn ra' : 'Đã kết thúc'))}` : <Skeleton width={225} height={20} />}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"TournamentInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"TournamentInfo-info-item\">\r\n                          <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Ngày bắt đầu: ${formatDateToDisplay((this.props.tournamentInfo.Tournament as unknown as IParams).openingTime as string | undefined, 'dd/MM/yyyy', 'yyyy-MM-dd')}` : <Skeleton width={250} height={20} />}</p>\r\n                        </div>\r\n                        <div className=\"TournamentInfo-info-item\">\r\n                          <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Địa điểm khai mạc: ${(this.props.tournamentInfo.Tournament as unknown as IParams).openingLocation}` : <Skeleton width={275} height={20} />}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"TournamentInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"TournamentInfo-info-item\">\r\n                          <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Ngày kết thúc: ${formatDateToDisplay((this.props.tournamentInfo.Tournament as unknown as IParams).closingTime as string | undefined, 'dd/MM/yyyy', 'yyyy-MM-dd')}` : <Skeleton width={250} height={20} />}</p>\r\n                        </div>\r\n                        <div className=\"TournamentInfo-info-item\">\r\n                          <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Địa điểm bế mạc: ${(this.props.tournamentInfo.Tournament as unknown as IParams).closingLocation}` : <Skeleton width={275} height={20} />}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"TournamentInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"TournamentInfo-info-item\">\r\n                          <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Mô tả: ${(this.props.tournamentInfo.Tournament as unknown as IParams).description}` : <Skeleton width={300} height={20} />}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <img className={'TournamentInfo-avatar-image'} src={require('../../assets/7ab1b0125d485c8dd6a4e78832b0a4b2fbed3cf8.png')} alt={'logo'} />\r\n                    {this.props.tournamentInfo != null && (this.props.tournamentInfo as IParams).Config != null && ((this.props.tournamentInfo as unknown as IParams).Config as unknown as IParams).canEdit === true && <AiFillCamera className={'TournamentInfo-change-avatar-icon'} />}\r\n                    {this.props.tournamentInfo != null && (this.props.tournamentInfo as IParams).Config != null && ((this.props.tournamentInfo as unknown as IParams).Config as unknown as IParams).canEdit === true && <div className={'TournamentInfo-Overlay2'}>\r\n                      <input type=\"file\" onChange={(e) => this.updateAvatar(e.target.files)} />\r\n                    </div>}\r\n                  </div>\r\n                  {this.props.tournamentInfo != null && this.props.tournamentInfo.Config != null && this.props.tournamentInfo.Tournament != null &&\r\n                    ((this.props.tournamentInfo.Config as IParams).canEdit === true ?\r\n                      ((this.props.tournamentInfo.Tournament as IParams).status === 'initializing' ?\r\n                        <div className=\"TournamentInfo-login-container\">\r\n                          <div\r\n                            className=\"TournamentInfo-login\"\r\n                            onClick={this.handleStartTournament}\r\n                          >\r\n                            <h4 className=\"TournamentInfo-login-text\">Bắt đầu giải</h4>\r\n                          </div>\r\n                        </div> : ((this.props.tournamentInfo.Tournament as IParams).status === 'processing' ?\r\n                          <div className=\"TournamentInfo-login-container\">\r\n                            <div\r\n                              className=\"TournamentInfo-login\"\r\n                              onClick={this.handleFinishTournament}\r\n                            >\r\n                              <h4 className=\"TournamentInfo-login-text\">Kết thúc giải</h4>\r\n                            </div>\r\n                          </div> : null)) : (cookies.get(COOKIES_TYPE.AUTH_TOKEN) != null && (this.props.tournamentInfo.Tournament as IParams).status === 'opening' &&\r\n                            <div className=\"TournamentInfo-login-container\">\r\n                              <div\r\n                                className=\"TournamentInfo-login\"\r\n                                onClick={this.handleJoinTournament}\r\n                              >\r\n                                <h4 className=\"TournamentInfo-login-text\">Tham gia giải</h4>\r\n                              </div>\r\n                            </div>))\r\n                  }\r\n                  {this.props.tournamentInfo != null && this.props.tournamentInfo.Config != null && this.props.tournamentInfo.Tournament != null && (this.props.tournamentInfo.Config as IParams).canEdit !== true && (this.props.tournamentInfo.Tournament as IParams).status !== 'finished' &&\r\n                    <div className=\"TournamentInfo-login-container\">\r\n                      <div\r\n                        className=\"TournamentInfo-login\"\r\n                        onClick={this.handleReportViolate}\r\n                      >\r\n                        <h4 className=\"TournamentInfo-login-text\">Báo cáo vi phạm</h4>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {/* {this.props.tournamentInfo != null && (this.props.tournamentInfo as IParams).Config != null &&\r\n              (((this.props.tournamentInfo as unknown as IParams).Config as unknown as IParams).canEdit === true ?\r\n                (this.props.tournamentInfo.Tournament != null && (\r\n                  (this.props.tournamentInfo.Tournament as unknown as IParams).status === 'initializing' ?\r\n                    <div className=\"TournamentInfo-login-container\">\r\n                      <div\r\n                        className=\"TournamentInfo-login\"\r\n                        onClick={this.handleStartTournament}\r\n                      >\r\n                        <h4 className=\"TournamentInfo-login-text\">Bắt đầu giải</h4>\r\n                      </div>\r\n                    </div> : ((this.props.tournamentInfo.Tournament as unknown as IParams).status === 'processing' ?\r\n                      <div className=\"TournamentInfo-login-container\">\r\n                        <div\r\n                          className=\"TournamentInfo-login\"\r\n                          onClick={this.handleFinishTournament}\r\n                        >\r\n                          <h4 className=\"TournamentInfo-login-text\">Kết thúc giải</h4>\r\n                        </div>\r\n                      </div> : null))) :\r\n                (cookies.get(COOKIES_TYPE.AUTH_TOKEN) != null && (this.props.tournamentInfo.Tournament as unknown as IParams).status === 'opening' &&\r\n                (<div className=\"TournamentInfo-login-container\">\r\n                  <div\r\n                    className=\"TournamentInfo-login\"\r\n                    onClick={this.handleJoinTournament}\r\n                  >\r\n                    <h4 className=\"TournamentInfo-login-text\">Tham gia giải</h4>\r\n                  </div>\r\n                </div>)\r\n              ))\r\n            } */}\r\n                  {this.props.tournamentInfo != null &&\r\n                    <div className=\"TournamentInfo-content-info-advanced-info-container\">\r\n                      <CustomTab tabList={this.tabList} componentList={this.componentList} selectedIndex={0}></CustomTab>\r\n                    </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n              <CustomModal\r\n                customStyles={customStyles2}\r\n                handleCloseModal={this.handleCloseReportModal}\r\n                showModal={this.state.showReportModal}\r\n                handleConfirmModal={this.handleConfirmReportModal}\r\n              >\r\n                <div className={'Report-modal-container'}>\r\n                  <div className={'Report-modal-header-container'}>\r\n                    <h1>Form Báo cáo</h1>\r\n                  </div>\r\n                  <div className={'Report-modal-subject-input-container'}>\r\n                    <p>Tiêu đề: </p>\r\n                    <input style={{ width: '200px', height: '25px', marginLeft: '20px' }} type={'text'} onChange={this.onChangeSubjectForm} value={this.state.subjectForm} />\r\n                  </div>\r\n                  <p>Nội dung báo cáo: </p>\r\n                  <textarea rows={7} cols={60} value={this.state.detailReportForm} onChange={this.onChangeDetailReportForm}></textarea>\r\n                  {this.state.subjectFormError === true && <p style={{ color: 'red' }}>{this.state.subjectFormErrorContent}</p>}\r\n                  {this.state.detailReportFormError === true && <p style={{ color: 'red' }}>{this.state.detailReportFormErrorContent}</p>}\r\n                </div>\r\n              </CustomModal>\r\n              <CustomModal\r\n                customStyles={customStyles}\r\n                handleCloseModal={this.handleCloseModal}\r\n                showModal={this.state.showJoinModal}\r\n                handleConfirmModal={this.handleConfirmModal}\r\n              >\r\n                <div className={'TournamentInfo-join-tournament-form-competition-header'}>\r\n                  <h3>Form đăng ký dự thi</h3>\r\n                </div>\r\n                <div className={'TournamentInfo-join-tournament-form-competition-option'}>\r\n                  <p>Chọn cuộc thi</p>\r\n                  <Select\r\n                    options={allCompetitionOptions}\r\n                    className=\"Select\"\r\n                    defaultValue={this.state.selectedCompetitionInForm}\r\n                    value={this.state.selectedCompetitionInForm}\r\n                    onChange={this.onChangeSelectedCompetitionInForm}\r\n                    maxMenuHeight={140}\r\n                  />\r\n                  {this.state.selectedCompetitionInFormError === true && <p style={{ color: 'red' }}>{this.state.selectedCompetitionInFormErrorContent}</p>}\r\n                </div>\r\n                <TextInput label={'Tên đội'} value={this.state.teamNameInForm} onChangeText={this.onChangeTeamNameInForm} error={this.state.teamNameInFormError} errorContent={this.state.teamNameInFormErrorContent} />\r\n                <TextInput label={'Tên ngắn đội'} value={this.state.teamShortNameInForm} onChangeText={this.onChangeTeamShortNameInForm} error={this.state.teamShortNameInFormError} errorContent={this.state.teamShortNameInFormErrorContent} />\r\n                <div className=\"TournamentInfo-join-tournament-container\">\r\n                  <div className=\"TournamentInfo-join-tournament-item1\">\r\n                    <p>Tên</p>\r\n                  </div>\r\n                  <div className=\"TournamentInfo-join-tournament-item2\">\r\n                    <p>Giới tính</p>\r\n                  </div>\r\n                  <div className=\"TournamentInfo-join-tournament-item2\">\r\n                    <p>Tuổi</p>\r\n                  </div>\r\n                  <div className=\"TournamentInfo-join-tournament-item1\">\r\n                    <p>Email</p>\r\n                  </div>\r\n                  <div className=\"TournamentInfo-join-tournament-setting\">\r\n                  </div>\r\n                </div>\r\n                {this.state.listPlayerInForm.map((item, index) => <Player onDelete={this.onDeletePlayer} info={item} freeToEdit={true} key={index} index={index} />)}\r\n                <div className=\"TournamentInfo-join-tournament-container\">\r\n                  <div className=\"TournamentInfo-join-tournament-item1\">\r\n                    <input type={'text'} onChange={this.onChangePlayerNameInForm} value={this.state.playerNameInForm} />\r\n                  </div>\r\n                  <div className=\"TournamentInfo-join-tournament-item2\">\r\n                    <Select\r\n                      options={genderOptions}\r\n                      className=\"Select\"\r\n                      defaultValue={this.state.playerGenderInForm}\r\n                      value={this.state.playerGenderInForm}\r\n                      onChange={this.onChangePlayerGenderInForm}\r\n                    />\r\n                  </div>\r\n                  <div className=\"TournamentInfo-join-tournament-item2\">\r\n                    <input style={{ width: '70px' }} type={'text'} onChange={this.onChangePlayerAgeInForm} value={this.state.playerAgeInForm} />\r\n                  </div>\r\n                  <div className=\"TournamentInfo-join-tournament-item1\">\r\n                    <input type={'text'} onChange={this.onChangePlayerEmailInForm} value={this.state.playerEmailInForm} />\r\n                  </div>\r\n                  <div className=\"TournamentInfo-join-tournament-setting\">\r\n                    <IoMdAddCircleOutline color={'white'} size={25} style={{ marginLeft: '3px', marginRight: '3px' }} onClick={this.addPlayer} />\r\n                  </div>\r\n                </div>\r\n                {this.state.playerNameInFormError === true && <p style={{ color: 'red' }}>{this.state.playerNameInFormErrorContent}</p>}\r\n                {this.state.playerEmailInFormError === true && <p style={{ color: 'red' }}>{this.state.playerEmailInFormErrorContent}</p>}\r\n              </CustomModal>\r\n            </div>\r\n          </ReduxBlockUi>\r\n        </ReduxBlockUi>\r\n      </ReduxBlockUi>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    tournamentInfo: state.tournamentInfo,\r\n    listSportsByTournament: state.listSportsByTournament,\r\n    listCompetitionsBySportAndTournament: state.listCompetitionsBySportAndTournament,\r\n    allCompetitionByTournamentId: state.allCompetitionByTournamentId,\r\n    currentUserInfo: state.currentUserInfo,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registTeam, reportViolation, queryAllCompetitionsByTournamentId, deleteListSelectingTeam, onEditBracketMode, updateBackgroundTournament, updateAvatarTournament, queryTournamentInfo, querySportsByTournament, queryCompetitionsBySportAndTournament, startTournament, finishTournament }\r\n)(TournamentInfo);"]},"metadata":{},"sourceType":"module"}