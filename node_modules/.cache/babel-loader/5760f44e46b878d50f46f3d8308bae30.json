{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\BracketRound\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport BracketMatch from 'components/BracketMatch';\nimport './styles.css';\n\nclass BracketRound extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roundHover: false\n    };\n  }\n\n  render() {\n    if (this.props.roundRobin === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `BracketRound-eachRound ${this.state.roundHover === true ? 'BracketRound-reachRound-bolder' : 'BracketRound-eachRound-noBold'}`,\n        style: { ...(this.props.info.listLoseMatches != null && {\n            width: '250px'\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `BracketRound-title-round-container ${this.props.roundNo > 1 && 'BracketRound-title-round-container-border'}`,\n        onMouseOver: () => {\n          this.setState({\n            roundHover: true\n          });\n        },\n        onMouseOut: () => {\n          this.setState({\n            roundHover: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"BracketRound-title-round-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, this.props.info.roundName)), this.props.info.listMatches != null && this.props.info.listMatches.map((item, index) => {\n        return /*#__PURE__*/React.createElement(BracketMatch, {\n          competitionId: this.props.competitionId,\n          info: item,\n          key: index,\n          totalRound: this.props.totalRound,\n          roundRobin: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        });\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `BracketRound-eachRound ${this.state.roundHover === true ? 'BracketRound-reachRound-bolder' : 'BracketRound-eachRound-noBold'}`,\n        style: { ...(this.props.info.listLoseMatches != null && {\n            width: '250px',\n            height: '350px'\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `BracketRound-title-round-container ${this.props.roundNo > 1 && 'BracketRound-title-round-container-border'}`,\n        onMouseOver: () => {\n          this.setState({\n            roundHover: true\n          });\n        },\n        onMouseOut: () => {\n          this.setState({\n            roundHover: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"BracketRound-title-round-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, this.props.info.roundName)), this.props.info.listMatches != null ? this.props.info.listMatches.map((item, index) => {\n        return /*#__PURE__*/React.createElement(BracketMatch, {\n          competitionId: this.props.competitionId,\n          info: item,\n          key: index,\n          totalRound: this.props.totalRound,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }\n        });\n      }) : this.props.info.listWinMatches != null ? this.props.info.listWinMatches.map((item, index) => {\n        return /*#__PURE__*/React.createElement(BracketMatch, {\n          competitionId: this.props.competitionId,\n          info: item,\n          key: index,\n          totalRound: this.props.totalRound,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 23\n          }\n        });\n      }) : this.props.info.listLoseMatches.map((item, index) => {\n        return /*#__PURE__*/React.createElement(BracketMatch, {\n          competitionId: this.props.competitionId,\n          info: item,\n          key: index,\n          totalRound: this.props.totalRound,\n          lowerBracket: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }\n        });\n      }), this.props.info.listLoseMatches != null && /*#__PURE__*/React.createElement(\"svg\", {\n        style: {\n          position: 'absolute',\n          marginTop: '20px',\n          width: '1px',\n          height: '350px',\n          backgroundColor: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 55\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M 228 1 L 236 1 L 236 108\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nexport default connect(null, null)(BracketRound);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/BracketRound/index.tsx"],"names":["React","connect","BracketMatch","BracketRound","Component","constructor","props","state","roundHover","render","roundRobin","info","listLoseMatches","width","roundNo","setState","roundName","listMatches","map","item","index","competitionId","totalRound","height","listWinMatches","position","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BracketMatch from 'components/BracketMatch';\r\nimport { IParams } from 'interfaces/common';\r\nimport './styles.css';\r\n\r\ninterface IBracketRoundProps extends React.ClassAttributes<BracketRound> {\r\n  info: IParams;\r\n  roundNo: number;\r\n  totalRound: number;\r\n  index: number;\r\n  competitionId: number;\r\n  roundRobin?: boolean;\r\n}\r\n\r\ninterface IBracketRoundState {\r\n  roundHover: boolean;\r\n}\r\n\r\nclass BracketRound extends React.Component<IBracketRoundProps, IBracketRoundState> {\r\n  constructor(props: IBracketRoundProps) {\r\n    super(props);\r\n    this.state = {\r\n      roundHover: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.roundRobin === true) {\r\n      return (\r\n        <div className={`BracketRound-eachRound ${this.state.roundHover === true ? 'BracketRound-reachRound-bolder' : 'BracketRound-eachRound-noBold'}`} style={{ ...this.props.info.listLoseMatches != null && { width: '250px' } }}>\r\n          <div className={`BracketRound-title-round-container ${this.props.roundNo > 1 && 'BracketRound-title-round-container-border'}`} onMouseOver={() => { this.setState({ roundHover: true, }); }} onMouseOut={() => { this.setState({ roundHover: false, }); }}>\r\n            <p className=\"BracketRound-title-round-text\">{this.props.info.roundName}</p>\r\n          </div>\r\n          {this.props.info.listMatches != null &&\r\n            (this.props.info.listMatches as unknown as IParams[]).map((item, index) => {\r\n              return (\r\n                <BracketMatch\r\n                  competitionId={this.props.competitionId}\r\n                  info={item}\r\n                  key={index}\r\n                  totalRound={this.props.totalRound}\r\n                  roundRobin={true}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={`BracketRound-eachRound ${this.state.roundHover === true ? 'BracketRound-reachRound-bolder' : 'BracketRound-eachRound-noBold'}`} style={{ ...this.props.info.listLoseMatches != null && { width: '250px', height: '350px' } }}>\r\n          <div className={`BracketRound-title-round-container ${this.props.roundNo > 1 && 'BracketRound-title-round-container-border'}`} onMouseOver={() => { this.setState({ roundHover: true, }); }} onMouseOut={() => { this.setState({ roundHover: false, }); }}>\r\n            <p className=\"BracketRound-title-round-text\">{this.props.info.roundName}</p>\r\n          </div>\r\n          {this.props.info.listMatches != null ?\r\n            (this.props.info.listMatches as unknown as IParams[]).map((item, index) => {\r\n              return (<BracketMatch competitionId={this.props.competitionId} info={item} key={index} totalRound={this.props.totalRound} />);\r\n            }) : (this.props.info.listWinMatches != null ? (this.props.info.listWinMatches as unknown as IParams[]).map((item, index) => {\r\n              return (<BracketMatch competitionId={this.props.competitionId} info={item} key={index} totalRound={this.props.totalRound} />);\r\n            }) : (this.props.info.listLoseMatches as unknown as IParams[]).map((item, index) => {\r\n              return (<BracketMatch competitionId={this.props.competitionId} info={item} key={index} totalRound={this.props.totalRound} lowerBracket={true} />);\r\n            }))\r\n          }\r\n          {this.props.info.listLoseMatches != null && <svg style={{ position: 'absolute', marginTop: '20px', width: '1px', height: '350px', backgroundColor: 'red', }}>\r\n            <path d=\"M 228 1 L 236 1 L 236 108\"></path>\r\n          </svg>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(BracketRound);"]},"metadata":{},"sourceType":"module"}