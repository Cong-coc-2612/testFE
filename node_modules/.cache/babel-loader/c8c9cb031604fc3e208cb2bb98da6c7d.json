{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\BracketBoard\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ReduxBlockUi from 'react-block-ui/redux';\nimport BracketRound from 'components/BracketRound';\nimport { queryListTeams } from 'components/Teams/actions';\nimport { SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED } from 'components/BracketTeam/reducers';\nimport { SWAP_TWO_TEAM_IN_BRACKET } from 'redux-saga/actions';\nimport { queryBracketBoardInfo, setBracketStartedStatus } from './actions';\nimport './styles.css';\n\nclass BracketBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestData = () => {\n      let params = {\n        path: '',\n        param: {\n          competitionId: this.props.competitionId\n        },\n        data: {}\n      };\n      this.props.queryBracketBoardInfo(params);\n      params = {\n        path: '',\n        param: {\n          competitionId: this.props.competitionId,\n          limit: 999\n        },\n        data: {}\n      };\n      this.props.queryListTeams(params);\n    };\n\n    this.state = {};\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.bracketBoardInfo !== this.props.bracketBoardInfo) {\n      this.setState({});\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    this.requestData();\n  }\n\n  render() {\n    if (this.props.bracketBoardInfo != null) {\n      if (this.props.finalStage === true) {\n        if (this.props.bracketBoardInfo.finalStage.listRRRound != null) {\n          return /*#__PURE__*/React.createElement(ReduxBlockUi, {\n            tag: \"div\",\n            block: SWAP_TWO_TEAM_IN_BRACKET,\n            unblock: [SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"BracketBoard-container-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"BracketBoard-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }\n          }, this.props.bracketBoardInfo.finalStage.listRRRound.map((item, index) => /*#__PURE__*/React.createElement(BracketRound, {\n            competitionId: this.props.competitionId,\n            index: index,\n            info: item,\n            key: index,\n            roundNo: index + 1,\n            totalRound: this.props.bracketBoardInfo.finalStage.listRRRound.length,\n            roundRobin: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }\n          })))));\n        } else {\n          return /*#__PURE__*/React.createElement(ReduxBlockUi, {\n            tag: \"div\",\n            block: SWAP_TWO_TEAM_IN_BRACKET,\n            unblock: [SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: 'BracketBoard-text',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }\n          }, \"B\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u1ED5i ch\\u1ED7 c\\xE1c \\u0111\\u1ED9i thi \\u0111\\u1EA5u b\\u1EB1ng c\\xE1ch b\\u1EA5m v\\xE0o 2 \\u0111\\u1ED9i, Thay \\u0111\\u1ED5i n\\xE0y ch\\u1EC9 c\\xF3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n khi gi\\u1EA3i \\u0111\\u1EA5u ch\\u01B0a b\\u1EAFt \\u0111\\u1EA7u\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"BracketBoard-container-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"BracketBoard-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }\n          }, this.props.bracketBoardInfo == null || this.props.listTeam == null || this.props.bracketBoardInfo.finalStage == null ? /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 23\n            }\n          }, \"Ch\\u01B0a c\\xF3 th\\xF4ng tin!\") : this.props.bracketBoardInfo.finalStage.listRound != null ? this.props.bracketBoardInfo.finalStage.listRound.map((item, index) => /*#__PURE__*/React.createElement(BracketRound, {\n            competitionId: this.props.competitionId,\n            index: index,\n            info: item,\n            key: index,\n            roundNo: index + 1,\n            totalRound: this.props.bracketBoardInfo.finalStage.listRound.length,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 24\n            }\n          })) : this.props.bracketBoardInfo.finalStage.listWinRound.map((item, index) => /*#__PURE__*/React.createElement(BracketRound, {\n            competitionId: this.props.competitionId,\n            index: index,\n            info: item,\n            key: index,\n            roundNo: index + 1,\n            totalRound: this.props.bracketBoardInfo.finalStage.listWinRound.length,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"BracketBoard-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }\n          }, this.props.bracketBoardInfo != null && this.props.bracketBoardInfo.finalStage && this.props.bracketBoardInfo.finalStage.listLoseRound != null && this.props.bracketBoardInfo.finalStage.listLoseRound.map((item, index) => /*#__PURE__*/React.createElement(BracketRound, {\n            competitionId: this.props.competitionId,\n            index: index,\n            info: item,\n            key: index,\n            roundNo: index + 1,\n            totalRound: this.props.bracketBoardInfo.finalStage.listLoseRound.length,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }\n          })))));\n        }\n      } else {\n        if (this.props.bracketBoardInfo.groupStage.listTableRR != null) {\n          return /*#__PURE__*/React.createElement(ReduxBlockUi, {\n            tag: \"div\",\n            block: SWAP_TWO_TEAM_IN_BRACKET,\n            unblock: [SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: 'BracketBoard-text',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }\n          }, \"B\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u1ED5i ch\\u1ED7 c\\xE1c \\u0111\\u1ED9i thi \\u0111\\u1EA5u b\\u1EB1ng c\\xE1ch b\\u1EA5m v\\xE0o 2 \\u0111\\u1ED9i, Thay \\u0111\\u1ED5i n\\xE0y ch\\u1EC9 c\\xF3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n khi gi\\u1EA3i \\u0111\\u1EA5u ch\\u01B0a b\\u1EAFt \\u0111\\u1EA7u\")), this.props.bracketBoardInfo.groupStage.listTableRR.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n            className: \"BracketBoard-container-container\",\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"BracketBoard-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }\n          }, \"B\\u1EA3ng \", item.tableName)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"BracketBoard-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }\n          }, item.listRRRound.length > 0 ? item.listRRRound.map((item2, index2) => /*#__PURE__*/React.createElement(BracketRound, {\n            competitionId: this.props.competitionId,\n            index: index2,\n            info: item2,\n            key: index2,\n            roundNo: index2 + 1,\n            totalRound: item.listRRRound.length,\n            roundRobin: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 23\n            }\n          })) : /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 26\n            }\n          }, \"Kh\\xF4ng th\\u1EC3 l\\u1EADp l\\u1ECBch cho b\\u1EA3ng n\\xE0y!\")))));\n        } else {\n          if (this.props.bracketBoardInfo.groupStage != null && this.props.listTeam != null) {\n            if (this.props.bracketBoardInfo.groupStage.listTableSE != null) {\n              return /*#__PURE__*/React.createElement(ReduxBlockUi, {\n                tag: \"div\",\n                block: SWAP_TWO_TEAM_IN_BRACKET,\n                unblock: [SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: 'BracketBoard-text',\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }\n              }, \"B\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u1ED5i ch\\u1ED7 c\\xE1c \\u0111\\u1ED9i thi \\u0111\\u1EA5u b\\u1EB1ng c\\xE1ch b\\u1EA5m v\\xE0o 2 \\u0111\\u1ED9i, Thay \\u0111\\u1ED5i n\\xE0y ch\\u1EC9 c\\xF3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n khi gi\\u1EA3i \\u0111\\u1EA5u ch\\u01B0a b\\u1EAFt \\u0111\\u1EA7u\")), this.props.bracketBoardInfo.groupStage.listTableSE.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n                className: \"BracketBoard-container-container\",\n                key: index,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"BracketBoard-container\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }\n              }, \"B\\u1EA3ng \", item.tableName)), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"BracketBoard-container\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }\n              }, item.listRound != null && item.listRound.length > 0 ? item.listRound.map((item2, index2) => /*#__PURE__*/React.createElement(BracketRound, {\n                competitionId: this.props.competitionId,\n                index: index2,\n                info: item2,\n                key: index2,\n                roundNo: index2 + 1,\n                totalRound: item.listRound.length,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 30\n                }\n              })) : /*#__PURE__*/React.createElement(\"p\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 27\n                }\n              }, \"Kh\\xF4ng th\\u1EC3 l\\u1EADp l\\u1ECBch cho b\\u1EA3ng n\\xE0y!\")))));\n            } else if (this.props.bracketBoardInfo.groupStage.listTableDE != null) {\n              return /*#__PURE__*/React.createElement(ReduxBlockUi, {\n                tag: \"div\",\n                block: SWAP_TWO_TEAM_IN_BRACKET,\n                unblock: [SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: 'BracketBoard-text',\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }\n              }, \"B\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u1ED5i ch\\u1ED7 c\\xE1c \\u0111\\u1ED9i thi \\u0111\\u1EA5u b\\u1EB1ng c\\xE1ch b\\u1EA5m v\\xE0o 2 \\u0111\\u1ED9i, Thay \\u0111\\u1ED5i n\\xE0y ch\\u1EC9 c\\xF3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n khi gi\\u1EA3i \\u0111\\u1EA5u ch\\u01B0a b\\u1EAFt \\u0111\\u1EA7u\")), this.props.bracketBoardInfo.groupStage.listTableDE.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n                className: \"BracketBoard-container-container\",\n                key: index,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"BracketBoard-container\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }\n              }, \"B\\u1EA3ng \", item.tableName)), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"BracketBoard-container\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }\n              }, item.listWinRound != null && item.listWinRound.length > 0 ? item.listWinRound.map((item2, index2) => /*#__PURE__*/React.createElement(BracketRound, {\n                competitionId: this.props.competitionId,\n                index: index2,\n                info: item2,\n                key: index2,\n                roundNo: index2 + 1,\n                totalRound: item.listWinRound.length,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 30\n                }\n              })) : /*#__PURE__*/React.createElement(\"p\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 27\n                }\n              }, \"Kh\\xF4ng th\\u1EC3 l\\u1EADp l\\u1ECBch cho b\\u1EA3ng n\\xE0y!\")), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"BracketBoard-container\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }\n              }, item.listLoseRound != null && item.listLoseRound.length > 0 && item.listLoseRound.map((item2, index2) => /*#__PURE__*/React.createElement(BracketRound, {\n                competitionId: this.props.competitionId,\n                index: index2,\n                info: item2,\n                key: index2,\n                roundNo: index2 + 1,\n                totalRound: item.listLoseRound.length,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 30\n                }\n              }))))));\n            }\n          } else {\n            return /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 15\n              }\n            }, \"Ch\\u01B0a c\\xF3 th\\xF4ng tin!\");\n          }\n        }\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      }, \"Ch\\u01B0a c\\xF3 th\\xF4ng tin!\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listTeam: state.listTeam,\n    bracketBoardInfo: state.bracketBoardInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  queryBracketBoardInfo,\n  setBracketStartedStatus,\n  queryListTeams\n})(BracketBoard);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/BracketBoard/index.tsx"],"names":["React","connect","ReduxBlockUi","BracketRound","queryListTeams","SWAP_TWO_TEAM_IN_BRACKET_SUCCESS","SWAP_TWO_TEAM_IN_BRACKET_FAILED","SWAP_TWO_TEAM_IN_BRACKET","queryBracketBoardInfo","setBracketStartedStatus","BracketBoard","Component","constructor","props","requestData","params","path","param","competitionId","data","limit","state","shouldComponentUpdate","nextProps","nextState","bracketBoardInfo","setState","componentDidMount","render","finalStage","listRRRound","map","item","index","length","listTeam","listRound","listWinRound","listLoseRound","groupStage","listTableRR","tableName","item2","index2","listTableSE","listTableDE","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReduxBlockUi from 'react-block-ui/redux';\r\nimport BracketRound from 'components/BracketRound';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { queryListTeams } from 'components/Teams/actions';\r\nimport { SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED } from 'components/BracketTeam/reducers';\r\nimport { SWAP_TWO_TEAM_IN_BRACKET } from 'redux-saga/actions';\r\nimport { queryBracketBoardInfo, setBracketStartedStatus } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IBracketBoardProps extends React.ClassAttributes<BracketBoard> {\r\n  bracketBoardInfo: IParams | null;\r\n  competitionId: number;\r\n  listTeam: IParams[] | null;\r\n  finalStage: boolean;\r\n\r\n  queryBracketBoardInfo(params: IBigRequest): void;\r\n  setBracketStartedStatus(params: boolean): void;\r\n  queryListTeams(params: IBigRequest): void;\r\n}\r\n\r\ninterface IBracketBoardState {\r\n}\r\n\r\nclass BracketBoard extends React.Component<IBracketBoardProps, IBracketBoardState> {\r\n\r\n  constructor(props: IBracketBoardProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IBracketBoardProps, nextState: IBracketBoardState) {\r\n    if (nextProps.bracketBoardInfo !== this.props.bracketBoardInfo) {\r\n      this.setState({});\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    let params: IBigRequest = {\r\n      path: '',\r\n      param: {\r\n        competitionId: this.props.competitionId,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryBracketBoardInfo(params);\r\n    params = {\r\n      path: '',\r\n      param: {\r\n        competitionId: this.props.competitionId,\r\n        limit: 999,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryListTeams(params);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.bracketBoardInfo != null) {\r\n      if (this.props.finalStage === true) {\r\n        if ((this.props.bracketBoardInfo.finalStage as IParams).listRRRound != null) {\r\n          return (\r\n            <ReduxBlockUi\r\n              tag=\"div\"\r\n              block={SWAP_TWO_TEAM_IN_BRACKET}\r\n              unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n            >\r\n              <div className=\"BracketBoard-container-container\">\r\n                <div className=\"BracketBoard-container\">\r\n                  {((this.props.bracketBoardInfo.finalStage as IParams).listRRRound as IParams[]).map((item, index) =>\r\n                    <BracketRound\r\n                      competitionId={this.props.competitionId}\r\n                      index={index}\r\n                      info={item}\r\n                      key={index}\r\n                      roundNo={index + 1}\r\n                      totalRound={((this.props.bracketBoardInfo!.finalStage as IParams).listRRRound as IParams[]).length}\r\n                      roundRobin={true}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </ReduxBlockUi>\r\n          );\r\n        } else {\r\n          return (\r\n            <ReduxBlockUi\r\n              tag=\"div\"\r\n              block={SWAP_TWO_TEAM_IN_BRACKET}\r\n              unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n            >\r\n              <div className={'BracketBoard-text'}>\r\n                <p>Bạn có thể đổi chỗ các đội thi đấu bằng cách bấm vào 2 đội, Thay đổi này chỉ có thể thực hiện khi giải đấu chưa bắt đầu</p>\r\n              </div>\r\n              <div className=\"BracketBoard-container-container\">\r\n                <div className=\"BracketBoard-container\">\r\n                  {this.props.bracketBoardInfo == null || this.props.listTeam == null || this.props.bracketBoardInfo.finalStage == null\r\n                    ? <p>Chưa có thông tin!</p>\r\n                    : ((this.props.bracketBoardInfo.finalStage as IParams).listRound != null ? ((this.props.bracketBoardInfo.finalStage as IParams).listRound as unknown as IParams[]).map((item, index) =>\r\n                      (<BracketRound competitionId={this.props.competitionId} index={index} info={item} key={index} roundNo={index + 1} totalRound={((this.props.bracketBoardInfo!.finalStage as IParams).listRound! as unknown as IParams[]).length} />)) :\r\n                      ((this.props.bracketBoardInfo.finalStage as IParams).listWinRound as unknown as IParams[]).map((item, index) =>\r\n                        <BracketRound competitionId={this.props.competitionId} index={index} info={item} key={index} roundNo={index + 1} totalRound={((this.props.bracketBoardInfo!.finalStage as IParams).listWinRound! as unknown as IParams[]).length} />)\r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"BracketBoard-container\">\r\n                  {this.props.bracketBoardInfo != null && this.props.bracketBoardInfo.finalStage && (this.props.bracketBoardInfo.finalStage as IParams).listLoseRound != null && ((this.props.bracketBoardInfo.finalStage as IParams).listLoseRound as unknown as IParams[]).map((item, index) =>\r\n                    <BracketRound competitionId={this.props.competitionId} index={index} info={item} key={index} roundNo={index + 1} totalRound={((this.props.bracketBoardInfo!.finalStage as IParams).listLoseRound! as unknown as IParams[]).length} />)}\r\n                </div>\r\n              </div>\r\n            </ReduxBlockUi>\r\n          );\r\n        }\r\n      } else {\r\n        if ((this.props.bracketBoardInfo.groupStage as IParams).listTableRR != null) {\r\n          return (\r\n            <ReduxBlockUi\r\n              tag=\"div\"\r\n              block={SWAP_TWO_TEAM_IN_BRACKET}\r\n              unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n            >\r\n              <div className={'BracketBoard-text'}>\r\n                <p>Bạn có thể đổi chỗ các đội thi đấu bằng cách bấm vào 2 đội, Thay đổi này chỉ có thể thực hiện khi giải đấu chưa bắt đầu</p>\r\n              </div>\r\n              {((this.props.bracketBoardInfo.groupStage as IParams).listTableRR as IParams[]).map((item, index) =>\r\n                <div className=\"BracketBoard-container-container\" key={index}>\r\n                  <div className=\"BracketBoard-container\">\r\n                    <p>Bảng {item.tableName}</p>\r\n                  </div>\r\n                  <div className=\"BracketBoard-container\">\r\n                    {(item.listRRRound as IParams[]).length > 0 ? ((item.listRRRound as IParams[]).map((item2, index2) =>\r\n                      <BracketRound\r\n                        competitionId={this.props.competitionId}\r\n                        index={index2}\r\n                        info={item2}\r\n                        key={index2}\r\n                        roundNo={index2 + 1}\r\n                        totalRound={(item.listRRRound as IParams[]).length}\r\n                        roundRobin={true}\r\n                      />\r\n                    )) : <p>Không thể lập lịch cho bảng này!</p>}\r\n                  </div>\r\n                </div>)}\r\n            </ReduxBlockUi>\r\n          );\r\n        } else {\r\n          if (this.props.bracketBoardInfo.groupStage != null && this.props.listTeam != null) {\r\n            if ((this.props.bracketBoardInfo.groupStage as IParams).listTableSE != null) {\r\n              return (\r\n                <ReduxBlockUi\r\n                  tag=\"div\"\r\n                  block={SWAP_TWO_TEAM_IN_BRACKET}\r\n                  unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n                >\r\n                  <div className={'BracketBoard-text'}>\r\n                    <p>Bạn có thể đổi chỗ các đội thi đấu bằng cách bấm vào 2 đội, Thay đổi này chỉ có thể thực hiện khi giải đấu chưa bắt đầu</p>\r\n                  </div>\r\n                  {((this.props.bracketBoardInfo.groupStage as IParams).listTableSE as IParams[]).map((item, index) =>\r\n                    <div className=\"BracketBoard-container-container\" key={index}>\r\n                      <div className=\"BracketBoard-container\">\r\n                        <p>Bảng {item.tableName}</p>\r\n                      </div>\r\n                      <div className=\"BracketBoard-container\">\r\n                        {(item.listRound != null && (item.listRound as IParams[]).length > 0 ?\r\n                          (item.listRound as IParams[]).map((item2, index2) =>\r\n                            (<BracketRound competitionId={this.props.competitionId} index={index2} info={item2} key={index2} roundNo={index2 + 1} totalRound={(item.listRound as IParams[]).length} />)) :\r\n                          <p>Không thể lập lịch cho bảng này!</p>\r\n                        )\r\n                        }\r\n                      </div>\r\n                    </div>)}\r\n                </ReduxBlockUi>\r\n              );\r\n            } else if ((this.props.bracketBoardInfo.groupStage as IParams).listTableDE != null) {\r\n              return (\r\n                <ReduxBlockUi\r\n                  tag=\"div\"\r\n                  block={SWAP_TWO_TEAM_IN_BRACKET}\r\n                  unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n                >\r\n                  <div className={'BracketBoard-text'}>\r\n                    <p>Bạn có thể đổi chỗ các đội thi đấu bằng cách bấm vào 2 đội, Thay đổi này chỉ có thể thực hiện khi giải đấu chưa bắt đầu</p>\r\n                  </div>\r\n                  {((this.props.bracketBoardInfo.groupStage as IParams).listTableDE as IParams[]).map((item, index) =>\r\n                    <div className=\"BracketBoard-container-container\" key={index}>\r\n                      <div className=\"BracketBoard-container\">\r\n                        <p>Bảng {item.tableName}</p>\r\n                      </div>\r\n                      <div className=\"BracketBoard-container\">\r\n                        {(item.listWinRound != null && (item.listWinRound as IParams[]).length > 0 ?\r\n                          (item.listWinRound as IParams[]).map((item2, index2) =>\r\n                            (<BracketRound competitionId={this.props.competitionId} index={index2} info={item2} key={index2} roundNo={index2 + 1} totalRound={(item.listWinRound as IParams[]).length} />)) :\r\n                          <p>Không thể lập lịch cho bảng này!</p>\r\n                        )\r\n                        }\r\n                      </div>\r\n                      <div className=\"BracketBoard-container\">\r\n                        {(item.listLoseRound != null && (item.listLoseRound as IParams[]).length > 0 &&\r\n                          (item.listLoseRound as IParams[]).map((item2, index2) =>\r\n                            (<BracketRound competitionId={this.props.competitionId} index={index2} info={item2} key={index2} roundNo={index2 + 1} totalRound={(item.listLoseRound as IParams[]).length} />))\r\n                        )\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </ReduxBlockUi>\r\n              );\r\n            }\r\n          } else {\r\n            return (\r\n              <p>Chưa có thông tin!</p>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return (<p>Chưa có thông tin!</p>);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listTeam: state.listTeam,\r\n    bracketBoardInfo: state.bracketBoardInfo,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    queryBracketBoardInfo,\r\n    setBracketStartedStatus,\r\n    queryListTeams\r\n  }\r\n)(BracketBoard);"]},"metadata":{},"sourceType":"module"}