{"ast":null,"code":"var _jsxFileName = \"E:\\\\DoAn_2020\\\\SportTournamentSupportSystem\\\\frontEnd\\\\SportTournamentSupportSystem\\\\src\\\\components\\\\AllTournaments\\\\index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Skeleton from 'react-loading-skeleton';\nimport 'pagination.css';\nimport TournamentOverview from 'components/TournamentOverview';\nimport Paging from 'components/Paging';\nimport { searchTournaments } from 'components/Header/actions';\nimport { queryListTournament } from './actions';\nimport './styles.css';\n\nclass AllTournaments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestData = (page = 1) => {\n      const params = {\n        path: '',\n        param: {\n          page,\n          limit: 3\n        },\n        data: {}\n      };\n      this.props.queryListTournament(params);\n    };\n\n    this.onChangeSelectedPage = pageNumber => {\n      if (this.props.globalSearchString !== '') {\n        const params = {\n          path: '',\n          param: {\n            page: pageNumber,\n            limit: 3,\n            searchString: this.props.globalSearchString\n          },\n          data: {}\n        };\n        this.props.searchTournaments(params);\n      } else {\n        this.requestData(pageNumber);\n      }\n\n      this.setState({\n        activePage: pageNumber\n      });\n    };\n\n    this.state = {\n      activePage: 1\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.globalSearchString !== nextProps.globalSearchString && nextProps.globalSearchString === '') {\n      this.requestData();\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    if (this.props.globalSearchString === '') {\n      this.requestData();\n    }\n  }\n\n  render() {\n    console.log('this.props.listTournament', this.props.listTournament);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AllTournaments-container-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"AllTournaments-header-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"T\\u1EA5t c\\u1EA3 c\\xE1c gi\\u1EA3i \\u0111\\u1EA5u\"), this.props.globalSearchString !== '' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"AllTournaments-search-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 50\n      }\n    }, \"K\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm cho: \\\"\", this.props.globalSearchString, \"\\\"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AllTournaments-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, this.props.listTournament && this.props.listTournament.Tournaments ? this.props.listTournament.Tournaments.length > 0 ? this.props.listTournament.Tournaments.map((item, index) => /*#__PURE__*/React.createElement(TournamentOverview, {\n      info: item,\n      index: index,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 94\n      }\n    }, \"Kh\\xF4ng t\\xECm th\\u1EA5y k\\u1EBFt qu\\u1EA3 n\\xE0o!\") : /*#__PURE__*/React.createElement(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Paging, {\n      currentPage: this.state.activePage,\n      totalPage: this.props.listTournament != null ? this.props.listTournament.TotalPage : 0,\n      onChangeSelectedPage: this.onChangeSelectedPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listTournament: state.listTournament,\n    globalSearchString: state.globalSearchString\n  };\n};\n\nexport default connect(mapStateToProps, {\n  queryListTournament,\n  searchTournaments\n})(AllTournaments);","map":{"version":3,"sources":["E:/DoAn_2020/SportTournamentSupportSystem/frontEnd/SportTournamentSupportSystem/src/components/AllTournaments/index.tsx"],"names":["React","connect","Skeleton","TournamentOverview","Paging","searchTournaments","queryListTournament","AllTournaments","Component","constructor","props","requestData","page","params","path","param","limit","data","onChangeSelectedPage","pageNumber","globalSearchString","searchString","setState","activePage","state","shouldComponentUpdate","nextProps","nextState","componentDidMount","render","console","log","listTournament","Tournaments","length","map","item","index","TotalPage","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'pagination.css';\r\nimport TournamentOverview from 'components/TournamentOverview';\r\nimport Paging from 'components/Paging';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { searchTournaments } from 'components/Header/actions';\r\nimport { queryListTournament } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IAllTournamentsProps extends React.ClassAttributes<AllTournaments> {\r\n  listTournament: IParams | null;\r\n  globalSearchString: string;\r\n\r\n  queryListTournament(param: IBigRequest): void;\r\n  searchTournaments(param: IBigRequest): void;\r\n}\r\n\r\ninterface IAllTournamentsState {\r\n  activePage: number;\r\n}\r\n\r\nclass AllTournaments extends React.Component<IAllTournamentsProps, IAllTournamentsState> {\r\n  constructor(props: IAllTournamentsProps) {\r\n    super(props);\r\n    this.state = {\r\n      activePage: 1,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IAllTournamentsProps, nextState: IAllTournamentsState) {\r\n    if (this.props.globalSearchString !== nextProps.globalSearchString && nextProps.globalSearchString === '') {\r\n      this.requestData();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.globalSearchString === '') {\r\n      this.requestData();\r\n    }\r\n  }\r\n\r\n  private requestData = (page = 1) => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        page,\r\n        limit: 3,\r\n      },\r\n      data: {},\r\n    }\r\n    this.props.queryListTournament(params);\r\n  }\r\n\r\n  private onChangeSelectedPage = (pageNumber: number) => {\r\n    if (this.props.globalSearchString !== '') {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          page: pageNumber,\r\n          limit: 3,\r\n          searchString: this.props.globalSearchString,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.searchTournaments(params);\r\n    } else {\r\n      this.requestData(pageNumber);\r\n    }\r\n    this.setState({ activePage: pageNumber });\r\n  }\r\n\r\n  render() {\r\n    console.log('this.props.listTournament', this.props.listTournament);\r\n    return (\r\n      <div className=\"AllTournaments-container-container\">\r\n        <p className=\"AllTournaments-header-text\">Tất cả các giải đấu</p>\r\n        {this.props.globalSearchString !== '' && <p className=\"AllTournaments-search-text\">Kết quả tìm kiếm cho: \"{this.props.globalSearchString}\"</p>}\r\n        <div className=\"AllTournaments-container\">\r\n          {this.props.listTournament && this.props.listTournament.Tournaments ? ((this.props.listTournament.Tournaments as unknown as IParams[]).length > 0 ? (this.props.listTournament.Tournaments as unknown as IParams[]).map(\r\n            (item, index) => <TournamentOverview info={item} index={index} key={index} />) : <p>Không tìm thấy kết quả nào!</p>) :\r\n            <Skeleton />\r\n          }\r\n        </div>\r\n        {/* <ReactPaginate\r\n          previousLabel={'<<'}\r\n          nextLabel={'>>'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={15}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          // onPageChange={this.handlePageClick}\r\n          containerClassName={'pagination'}\r\n          activeClassName={'active'}\r\n          disabledClassName={'disabled'}\r\n        /> */}\r\n        <Paging currentPage={this.state.activePage} totalPage={this.props.listTournament != null ? this.props.listTournament.TotalPage as number : 0} onChangeSelectedPage={this.onChangeSelectedPage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listTournament: state.listTournament,\r\n    globalSearchString: state.globalSearchString,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryListTournament, searchTournaments }\r\n)(AllTournaments);"]},"metadata":{},"sourceType":"module"}